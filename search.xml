<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基於置信學習的警告數據集去噪技術</title>
      <link href="/2022/11/24/%E5%9F%BA%E6%96%BC%E7%BD%AE%E4%BF%A1%E5%AD%B8%E7%BF%92%E7%9A%84%E8%AD%A6%E5%91%8A%E6%95%B8%E6%93%9A%E9%9B%86%E5%8E%BB%E5%99%AA%E6%8A%80%E8%A1%93/"/>
      <url>/2022/11/24/%E5%9F%BA%E6%96%BC%E7%BD%AE%E4%BF%A1%E5%AD%B8%E7%BF%92%E7%9A%84%E8%AD%A6%E5%91%8A%E6%95%B8%E6%93%9A%E9%9B%86%E5%8E%BB%E5%99%AA%E6%8A%80%E8%A1%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>  现有的自动化警告标记技术主要基于关闭警告的启发式方法进行警告标记，给定同一个项目的多个版本，使用相同的静态分析工具对每个版本进行扫描并得到其扫描结果，通过比对不同版本之间的警告是否相同，如果一个版本中的某个警告 A 存在在后续所有的版本，那么该警告 A 被认为是无效警告（即误报警告），如果一个版本中的某个警告 A 在后续的版本中消失，那么该警告 A 被认为是有效警告（即正报警告）。然后，由于验证延迟（即有些警告会在未来的版本中被修复）或自动化警告标记方法固有的局限性（如：不精确的警告匹配算法），会使得自动化警告标记方法产生较多的噪音（即正报标记为误报，误报被标记为正报）。为了解决上述问题，本项目拟基于置信学习技术对自动化警告标记技术进行去噪，进而改善自动化警告标记技术标记的精度。</p><h2 id="2-初始警告數據集收集—環境配置"><a href="#2-初始警告數據集收集—環境配置" class="headerlink" title="2 初始警告數據集收集—環境配置"></a>2 初始警告數據集收集—環境配置</h2><p>基于关闭警告的启发式警告标记方法:<a href="https://github.com/lxyeah/findbugs-violations.git">https://github.com/lxyeah/findbugs-violations.git</a>，链接中给出了<br>该方法自动收集警告数据集的源码以及相关软件配置要求，静态分析工具是 SpotBugs。<br><strong>項目運行環境:</strong></p><ul><li>Linux (Ubuntu 18.04)</li><li>Jdk 1.8</li><li>Maven 3.6.3: 需要更换阿⾥云镜像</li><li>Neo4J Community 3.5.X: 注意Jdk和Neo4J版本要相互对应，如：最新版本的Neo4J需要Jdk11，Neo4J 3.5.X需要Jdk 1.8</li></ul><p>一個個來吧!</p><h3 id="2-1-Ubuntu-18-04"><a href="#2-1-Ubuntu-18-04" class="headerlink" title="2.1 Ubuntu 18.04"></a>2.1 Ubuntu 18.04</h3><ol><li>去<a href="https://releases.ubuntu.com/18.04/">https://releases.ubuntu.com/18.04/</a>下載鏡像。</li><li>VMware創建虛擬机。</li></ol><p><img src="https://s2.loli.net/2022/11/24/fCXUzjWkgx5qPyH.png#crop=0&crop=0&crop=1&crop=1&height=504&id=IURTL&originHeight=650&originWidth=790&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=&width=612"><br><img src="https://s2.loli.net/2022/11/24/JId65S4Zb1VRKBk.png#crop=0&crop=0&crop=1&crop=1&height=544&id=EujUn&originHeight=717&originWidth=802&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=&width=609"></p><h3 id="2-2-安裝Jdk-1-8"><a href="#2-2-安裝Jdk-1-8" class="headerlink" title="2.2 安裝Jdk 1.8"></a>2.2 安裝Jdk 1.8</h3><ol><li><p>去<a href="https://www.oracle.com/java/technologies/downloads/#java8">https://www.oracle.com/java/technologies/downloads/#java8</a>下載安裝包，我下的是x64-Compressed Archive那個。</p></li><li><p>下載完压縮包移動到&#x2F;usr&#x2F;share&#x2F;java下，並解压。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~$ <span class="built_in">cd</span> /usr/share</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/share$ sudo <span class="built_in">mkdir</span> java //沒有的話就創建</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/share$ <span class="built_in">cd</span> java</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/share/java$ sudo <span class="built_in">cp</span> -a /home/kinghong/下载/jdk-8u351-linux-x64.tar.gz/usr/share/java</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/share/java$ sudo tar -zxvf jdk-8u351-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>輸入<code>sudo gedit ~/.bashrc</code>配置环境变量，在打開的文件最後添加:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/share/java/jdk1.8.0_351</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>保存文件后輸入<code>source /.bashrc</code>更新配置文件</p></li><li><p>輸入<code>java -version</code>查看jdk环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~$ java -version</span><br><span class="line">java version <span class="string">&quot;1.8.0_351&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_351-b10)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)</span><br></pre></td></tr></table></figure></li><li><p>管理员模式也得能找到，把环境变量加在&#x2F;etc&#x2F;profile里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:/etc$ sudo <span class="built_in">chmod</span> -R 777 ./profile</span><br><span class="line"><span class="comment">####################################################################</span></span><br><span class="line"><span class="comment">#在文件末尾添加:</span></span><br><span class="line"><span class="comment">#JAVA_HOME=/usr/share/java/jdk1.8.0_351</span></span><br><span class="line"><span class="comment">#PATH=$PATH:$JAVA_HOME/bin</span></span><br><span class="line"><span class="comment">#CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span></span><br><span class="line"><span class="comment">#export JAVA_HOME</span></span><br><span class="line"><span class="comment">#export PATH</span></span><br><span class="line"><span class="comment">#export CLASSPATH</span></span><br><span class="line"><span class="comment">#####################################################################</span></span><br><span class="line">kinghong@kinghong-virtual-machine:/etc$ <span class="built_in">source</span> ./profile</span><br><span class="line">kinghong@kinghong-virtual-machine:/etc$ sudo -i</span><br><span class="line">root@kinghong-virtual-machine:~<span class="comment"># java -version</span></span><br><span class="line">java version <span class="string">&quot;1.8.0_351&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_351-b10)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-3-安裝Maven3-6-3"><a href="#2-3-安裝Maven3-6-3" class="headerlink" title="2.3 安裝Maven3.6.3"></a>2.3 安裝Maven3.6.3</h3><ol><li>去官网下載Maven: <a href="https://archive.apache.org/dist/maven/maven-3/">https://archive.apache.org/dist/maven/maven-3</a></li></ol><p><img src="https://s2.loli.net/2022/11/24/KqHcWyUVInEtorP.png#crop=0&crop=0&crop=1&crop=1&height=256&id=beWtN&originHeight=312&originWidth=759&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=&width=623"></p><ol start="2"><li><p>跟上面一样，找個風水宝地把安裝包放進去，我是放在&#x2F;usr&#x2F;local下了，然後解壓安裝。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:/usr/local$ sudo tar -zxf apache-maven-3.6.3-bin.tar.gz</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/local$ sudo <span class="built_in">mv</span> apache-maven-3.6.3 /usr/local/maven-3.6.3</span><br></pre></td></tr></table></figure></li><li><p>環境变量 <code>sudo ~/.bashrc</code> ，填入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> M2_HOME=/usr/local/maven-3.6.3</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;M2_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>保存，<code>source /.bashrc</code>更新。</p></li><li><p>輸 mvn-v 查看版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:/usr/local$ mvn -v</span><br><span class="line">Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)</span><br><span class="line">Maven home: /usr/local/maven-3.6.3</span><br><span class="line">Java version: 1.8.0_351, vendor: Oracle Corporation, runtime: /usr/share/java/jdk1.8.0_351/jre</span><br><span class="line">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">&quot;linux&quot;</span>, version: <span class="string">&quot;5.4.0-84-generic&quot;</span>, <span class="built_in">arch</span>: <span class="string">&quot;amd64&quot;</span>, family: <span class="string">&quot;unix&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>換阿里云鏡像。去安裝目錄下，我是&#x2F;usr&#x2F;local&#x2F;maven-3.6.3，進入conf文件夾，先改一下settings.xml的讀寫权限: <code>sudo chmod 777 ./settings.xml</code> ，然后再打開它，找到<mirrors>標籤，往裏面添加:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;<span class="built_in">id</span>&gt;aliyunmaven&lt;/id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;阿里云公共仓库&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;</span><br><span class="line">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure><p>並保存。</p></li></ol><h3 id="2-4-安裝Neo4j"><a href="#2-4-安裝Neo4j" class="headerlink" title="2.4 安裝Neo4j"></a>2.4 安裝Neo4j</h3><p>Neo4j是基于Java的图形数据库</p><ol><li><p>官网下載安裝包: <a href="https://neo4j.com/download-center/#releases">https://neo4j.com/download-center/#releases</a></p></li><li><p>找个好地方解压，我還是放&#x2F;usr&#x2F;local下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~$ sudo <span class="built_in">cp</span> -a /home/kinghong/桌面/neo4j-community-3.5.5-unix.tar.gz /usr/local</span><br><span class="line">kinghong@kinghong-virtual-machine:~$ <span class="built_in">cd</span> /usr/local</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/local$ sudo tar -zxvf neo4j-community-3.5.5-unix.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>运行，這一步有點坑，先進入root模式，再進入文件根目錄，在bin里运行它</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~$ sudo -i</span><br><span class="line">root@kinghong-virtual-machine:~<span class="comment"># cd /usr/local/neo4j-community-3.5.5/bin</span></span><br><span class="line">root@kinghong-virtual-machine:/usr/local/neo4j-community-3.5.5/bin<span class="comment"># ./neo4j console</span></span><br></pre></td></tr></table></figure><p>运行成功后在浏覽器打開<a href="http://localhost:7474/browser/">http://localhost:7474/browser/</a> ，進入web端，默認用戶名和密碼都是”neo4j”。<br><img src="https://s2.loli.net/2022/11/24/yqKamLiJxO1gfnR.png#crop=0&crop=0&crop=1&crop=1&height=441&id=EwEZN&originHeight=690&originWidth=965&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=&width=617"><br>至此，環境就配置好了</p></li></ol><h2 id="3-項目配置"><a href="#3-項目配置" class="headerlink" title="3 項目配置"></a>3 項目配置</h2><p>   项⽬结构如下所示，其中violation-collection为本项⽬进⾏配置的警告数据收集部分。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~/文档/findbugs-violations-master$ tree -L 1</span><br><span class="line">.</span><br><span class="line">├── data</span><br><span class="line">├── GitTraverse</span><br><span class="line">├── gumtree</span><br><span class="line">├── Mined Fix Patterns</span><br><span class="line">├── Parser</span><br><span class="line">├── parsing-utils</span><br><span class="line">├── PatternMining</span><br><span class="line">├── README.md</span><br><span class="line">├── Readme.pdf</span><br><span class="line">├── repo-iterator</span><br><span class="line">├── simple-utils</span><br><span class="line">└── violation-collection</span><br></pre></td></tr></table></figure><p>  由于violation-collection依赖于simple-utils、repo-iterator、parsing-utils，需要先对这三部分进⾏构建， 最后对violation-collection进⾏构建。  </p><ol><li>进⼊這三個⽬录，执⾏”mvn clean install -DskipTests”。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">~/文档/findbugs-violations-master$ <span class="built_in">cd</span> ./simple-utils</span><br><span class="line">~/文档/findbugs-violations-master/simple-utils$ mvn clean install -DskipTests</span><br><span class="line">............................................................................</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  50.483 s</span><br><span class="line">[INFO] Finished at: 2022-11-24T14:09:02+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">~/文档/findbugs-violations-master$ <span class="built_in">cd</span> ./repo-iterator</span><br><span class="line">~/文档/findbugs-violations-master/repo-iterator$ mvn clean install -DiskipTests</span><br><span class="line">~/文档/findbugs-violations-master$ <span class="built_in">cd</span> ./parsing-utils</span><br><span class="line">~/文档/findbugs-violations-master/parsing-utils$ mvn clean install -DiskipTests</span><br></pre></td></tr></table></figure>  构建过程中出現了無法解析依赖的情況，哈哈!樂，環境學院日常，去网上下jar包吧:<a href="https://mvnrepository.com/artifact/org.eclipse.core/runtime/3.10.0-v20140318-2214">https://mvnrepository.com/artifact/org.eclipse.core/runtime/3.10.0-v20140318-2214</a><br><a href="https://mvnrepository.com/artifact/org.eclipse.core/org.eclipse.core.runtime/3.10.0.v20140318-2214">https://mvnrepository.com/artifact/org.eclipse.core/org.eclipse.core.runtime/3.10.0.v20140318-2214</a><br><img src="https://s2.loli.net/2022/11/24/QYiOVX5GJ8vw3nB.png#crop=0&crop=0&crop=1&crop=1&id=bnSUv&originHeight=192&originWidth=729&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="><br>下完后执⾏命令”mvn install:install-file -Dfile&#x3D;xxxxx.jar -DgroupId&#x3D;xxxxx -DartifactId&#x3D;xxxxx - Dversion&#x3D;xxxxx -Dpackaging&#x3D;jar”安裝，其中:</li></ol><ul><li>Dfile: 要安装的jar的本地路径</li><li>DgroupId：要安装的jar的groupId (org.eclipse.core)</li><li>DartifactId: 要安装的jar的 artificialId (org.eclipse.core.runtime)</li><li>Dversion: jar版本 (3.10.0-v20140318-2214)</li><li>Dpackaging: 打包类型 (jar)  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~$ mvn install:install-file -Dfile=/home/kinghong/下载/</span><br><span class="line">org.eclipse.core.runtime-3.10.0.v20140318-2214.jar -DgroupId=org.eclipse.core -DartifactId=org.eclipse.core.runtime </span><br><span class="line">-Dversion=3.10.0-v20140318-2214 -Dpackaging=jar</span><br><span class="line">........................................................................</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  0.187 s</span><br><span class="line">[INFO] Finished at: 2022-11-24T14:53:50+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>重點來了!!!!  賊坑賊坑的一點是，此刻他仍是說無法解析的，我找了半天才發現原來安裝的時候把文件中間寫成了3.10.0-v20140318-2214，而他的依赖找的是3.10.0.v20140318-2214，所以它找不但找不到，还會自己多創一個文件夾，你得把文件夾和里面文件名上的”-“改成”.”才行。<br>好了，接着install又發現沒有org.eclipse.core:org.eclipse.core.contenttype 3.4.200.v20140207-1251 的依赖了，如法炮制去<a href="https://mvnrepository.com/artifact/org.eclipse.core/org.eclipse.core.contenttype/3.4.200.v20140207-1251">https://mvnrepository.com/artifact/org.eclipse.core/org.eclipse.core.contenttype/3.4.200.v20140207-1251</a>下一個安裝。<br>最后终于成功了!<br>三個都成功后便进⼊violation-collection⽬录执⾏”mvn clean install -DskipTests”。</li></ul><ol start="3"><li>启动neo4j数据库</li><li>创建repoDir和workingDir两个个⽂件夹，其中repoDir存放apache项⽬，workingDir存放⽣成的报告等数 据，⽂件结构如下图所示。</li></ol><p>……………………….<br>人麻了已經，下面每一步都報一堆錯，也是很迷糊一個，等做成功了再來更新好了…搞了一天累死了</p>]]></content>
      
      
      <categories>
          
          <category> 煩人作業 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自動化測試 </tag>
            
            <tag> 錯誤警告 </tag>
            
            <tag> 屎山 </tag>
            
            <tag> 巨坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题魔改</title>
      <link href="/2022/11/22/hexo%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/"/>
      <url>/2022/11/22/hexo%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> 博客相關 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web前端 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主題一些使用方法</title>
      <link href="/2022/11/22/butterfly%E4%B8%BB%E9%A1%8C%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2022/11/22/butterfly%E4%B8%BB%E9%A1%8C%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> 博客相關 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web前端 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Hexo和Vercel搭建博客</title>
      <link href="/2022/11/22/%E7%94%A8Hexo%E5%92%8CVercel%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/11/22/%E7%94%A8Hexo%E5%92%8CVercel%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>方法參考Fomalhaut文章:<a href="https://www.fomal.cc/posts/e593433d.html">Hexo博客搭建教程(一)</a>、<a href="https://www.fomal.cc/posts/4aa2d85f.html">Hexo博客搭建教程(二)</a><br>使用的主题是butterfly<a href="https://butterfly.js.org/">官方文档</a></p></blockquote><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>  我們平時搭博客通常要麼買個服務器用wordpress搞一個，或者布署到github page上，前者需要億點點的錢(去華為雲看了下一個普通服務器一年要几百大洋，果斷放弃)，後者只能放靜態頁面，可玩性和便捷程序就差了點。而vercel將會拯救我們，這是一個站點托官的平台，提供Production和Development环境，还支持持續集成，功能和速度比github page好，还支持部署serverless接口，可以部署動態網站，會自動幫你配置https，最重要的是,他還不收錢!簡直想立馬跪拜了好嗎!</p><h2 id="2-環境與工具準備"><a href="#2-環境與工具準備" class="headerlink" title="2.環境與工具準備"></a>2.環境與工具準備</h2><ul><li>操作系统:Windows11</li><li>Node</li><li>Git</li><li>Hexo</li><li>GitHub帳號</li><li>域名(可選)</li></ul><h2 id="3-開始"><a href="#3-開始" class="headerlink" title="3.開始!"></a>3.開始!</h2><h3 id="3-1-安裝Node-js"><a href="#3-1-安裝Node-js" class="headerlink" title="3.1 安裝Node.js"></a>3.1 安裝Node.js</h3><p>Node.js是一个基于Chrome V8引擎的JavaScript运行環境，可謂是把原本只能由浏覧器解析的js给抬起來了。下載地址:<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a>，最好下個穩定版，也不用因為怕以後要裝的東西版本不兼容而跑去裝上古版本，到時真不行就用nvm管理一下嘛。安完可以命令行打 node -v 看版本信息</p><h3 id="3-2-安裝Hexo"><a href="#3-2-安裝Hexo" class="headerlink" title="3.2 安裝Hexo"></a>3.2 安裝Hexo</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>打hexo -v可以看安裝成功否</p><h3 id="3-3-Github-Page"><a href="#3-3-Github-Page" class="headerlink" title="3.3 Github Page"></a>3.3 Github Page</h3><ol><li>官網:<a href="https://github.com/">https://github.com</a>，自個去注册就行了</li><li>注册完了後，創建新倉庫(New repository)，创建一个叫<code>&lt;用戶名&gt;.github.io</code>的倉庫，注意一定要是”用戶名”+”github.io”，因為每個帳號只允許有一個github page。下面的隨意設置，然後點击創建。</li></ol><h3 id="3-4-安裝Git"><a href="#3-4-安裝Git" class="headerlink" title="3.4 安裝Git"></a>3.4 安裝Git</h3><ol><li><p>去官網<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a>下個最新的就好了，安裝就狂點下一步就好了，如果有想知道每個選項具體是在干嘛的探索精神，可以參考<a href="https://blog.csdn.net/mukes/article/details/115693833">Git 详细安装教程（详解 Git 安装过程的每一个步骤)</a>。</p></li><li><p>配置用戶名和郵箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;你的用戶名&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;你的郵箱&quot;</span></span><br></pre></td></tr></table></figure><p>想寫哪個都行，只是用來標識你的身份而已</p></li><li><p>在git bash上輸入git config -l可以檢查是否配置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ git config -l</span><br><span class="line">diff.astextplain.textconv=astextplain</span><br><span class="line">filter.lfs.clean=git-lfs clean -- %f</span><br><span class="line">filter.lfs.smudge=git-lfs smudge -- %f</span><br><span class="line">filter.lfs.process=git-lfs filter-process</span><br><span class="line">filter.lfs.required=<span class="literal">true</span></span><br><span class="line">http.sslbackend=openssl</span><br><span class="line">http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt</span><br><span class="line">core.autocrlf=<span class="literal">true</span></span><br><span class="line">core.fscache=<span class="literal">true</span></span><br><span class="line">core.symlinks=<span class="literal">true</span></span><br><span class="line">pull.rebase=<span class="literal">false</span></span><br><span class="line">credential.helper=manager-core</span><br><span class="line">credential.https://dev.azure.com.usehttppath=<span class="literal">true</span></span><br><span class="line">init.defaultbranch=master</span><br><span class="line">user.email=a2064777923@gmail.com</span><br><span class="line">user.name=KingHong</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-5-連接去Github"><a href="#3-5-連接去Github" class="headerlink" title="3.5 連接去Github"></a>3.5 連接去Github</h3><ol><li>執行以下命令生成ssh公匙，用於計算機連接Github<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;你的郵箱&quot;</span></span><br></pre></td></tr></table></figure></li><li>打開C:&#x2F;&#x2F;user&#x2F;#用戶名#&#x2F;.ssh，会發現多了几個文件，打開id_rsa.pub文件，复制里面的內容。</li><li>進入github配置頁，選擇<code>SSH and GPG keys</code>，填進去，确定。</li><li>測試連接，輸入:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><blockquote><p>如果連不上，出現<code>Could not resolve hostname github</code>的話，在cmd打ping <a href="http://www.github.com/">www.github.com</a> 也不行的話，可以嘗試修改本地 DNS 文件，打開C:\Windows\System32\drivers\etc 目录下的 hosts 文件，在最後添加<code>140.82.113.4    github.com</code>，然后保存，应該就能ping通了。</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客相關 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web前端 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/22/hello-world/"/>
      <url>/2022/11/22/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>警告识别分析文献綜述</title>
      <link href="/2022/11/17/%E8%AD%A6%E5%91%8A%E8%AF%86%E5%88%AB%E5%88%86%E6%9E%90%E6%96%87%E7%8C%AE%E7%B6%9C%E8%BF%B0/"/>
      <url>/2022/11/17/%E8%AD%A6%E5%91%8A%E8%AF%86%E5%88%AB%E5%88%86%E6%9E%90%E6%96%87%E7%8C%AE%E7%B6%9C%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="摘要："><a href="#摘要：" class="headerlink" title="摘要："></a>摘要：</h1><p>  静态分析工具在软件开发早期的阶段可以自动检测代码异常和缺陷，向用户发出警告信息传达通过静态分析检测到的运行时错误，如今自动静态分析工具如Findbug等也已经被广泛应用，其功能与效率受到很多人青睐，然而，这些工具报告的大量警报通常有相当一部分都属于误报或是无意义警报，还是需要较大的人工检查警报的成本，而只有那些需要程序员关注和进行修改的警告才是有效的警告，因此如何识别有效警告值得研究。<br>本文研究了35篇相关论文，提取其中使用的方法，分为机器学习、警告排序、交互式、修剪&#x2F;分类、启发式方法、动静态分析结合六类，我们分析其算法流程并分析其可取之处、缺陷以及意义，并据此设想未来研究方向以及应用实践。<br>  最终我们发现不同方法都有其优势与劣势，实际应用中可以将其中不同方法结合，或是依据不同情境选择合适的方法，这样才能有更好的识别效果，同时结合的程度以及不同方法应该在何时使用则是值得研究与对比的部分。<br>关键词： 静态分析; 有效警告识别; 机器学习; 启发式方法; 交互式; 修剪&#x2F;分类<br>  Static analysis tools can automatically detect code exceptions and defects at the early stage of software development, and send users warnings about runtime errors detected through static analysis. Now automatic static analysis tools such as Findbug are widely used, and their functionality and efficiency are favored by many people. However, A large number of alarms reported by these tools are usually false alarms or meaningless alarms, which require a large labor cost to check. Only those warnings that require programmer’s attention and modification are valid warnings, so how to identify valid warnings is worth studying.<br>This paper studied 39 relevant papers and extracted the methods used in them, which were divided into six categories: machine learning,  ranking of alarms , interactive, pruning&#x2F;classification, heuristic method and  static-dynamic analysis combination. We analyzed their algorithm flow and analyzed their merits, defects and significance, and based on this, we proposed the future research direction and application practice.<br>  Finally, we find that different methods have their advantages and disadvantages. In practical application, different methods can be combined, or select appropriate methods according to different situations, so as to have better identification results. Meanwhile, the degree of combination and when different methods should be used are worth studying and comparing.<br>Key words: static analysis; actionable warning identification; machine learning; heuristic method; interactive; pruning&#x2F;classification</p><h1 id="1-引言"><a href="#1-引言" class="headerlink" title="1 引言"></a>1 引言</h1><p>  在过去的数十年里，软硬件的发展速度飞快，现在我们的生活已经离不开各种软件了，程序的安全保障变得至关重要，怎么让开发软件的过程花费更少的成本、更快速方便、更少地出现缺陷和故障也成为了核心需求。虽然静态分析工具在软件开发早期的阶段可以自动检测代码异常和缺陷，向用户发出警告信息传达通过静态分析检测到的运行时错误，如零除、溢出&#x2F;欠溢出和空指针解除引用等。然而，这些工具报告的大量警报通常有相当一部分都属于误报或是无意义警报，还是需要较大的人工检查警报的成本，因此人们便希望找到一种最合适的技术能够自动识别出有效的警告。<br>  我们研究了现有的有效警告识别技术，它们大多旨在将静态分析和动态警告质量保证技术相结合，以改进静态分析错误检测并减少错误警报。本文的目的就是概述各种警报处理方法、分析它们如何解决有效警告识别的困难和挑战、对比它们使用的技术和优缺点、设想未来的研究方向会是如何的。<br>  为了研究这些问题，我们进行了系统的文献检索，首先进行基于关键字的数据搜索，然后阅读具体内容，从中选取了最符合研究目标的39篇文献。我们仔细分析对比了这些资料，总结出了五个目前程序报警遇到的困难和挑战，依照使用到的技术类别把文献分为了七类。我们最后发现每一种方法都有其优点和局限，并且是可以互补的，实践中可以把这些技术通过多种方式组合在一起以达到最佳效果。</p><h1 id="2-问题与挑战"><a href="#2-问题与挑战" class="headerlink" title="2 问题与挑战"></a>2 问题与挑战</h1><h2 id="2-1-静态分析工具产生误报多"><a href="#2-1-静态分析工具产生误报多" class="headerlink" title="2.1 静态分析工具产生误报多"></a>2.1 静态分析工具产生误报多</h2><p>  在我们阅读到的文献中，大部分[1][2][4][5][6][7][8][12][13][21][22][28][29][30]都特意强调静态分析产生误报的问题，静态代码安全检测与动态应用测试不同之处在于，静态代码分析直接面向源码，能够检测所有的代码级别可执行路径组合，快速准确分析语义缺陷及安全漏洞。然而，只对代码进行静态错误分析在实践中存在很高的误报率，导致开发和测试人员经常花费大量的时间和精力在错误警告上，结果到最后发现是误报，软件开发的各方面成本就此上升。<br>静态分析之所以会产生大量误报的可能原因有:<br>1.静态应用程序测试工具本身基于一些算法，对程序数据、控制流分析，预判程序中存在的潜在问题。而算法耗时与准确度成正比。作为工具产品，高运行、高准确度的检测并不容易实现。因此在设计中存在简化、取舍，导致精度流失，运行时间和算法精度之间要达到平衡，因此产生误报。[12]<br>2.由于被分析的软件并没有被真正地执行，静态分析工具并不知道程序真正要做什么行为，也不理解程序员的意图，导致高估或是误推测软件行为[6]，发出与真正缺陷不对应的虚假警告。<br>3.可能存在过度分析，过度警报，即对一些微小的不合规范的低严重性的地方发出警告，比如样式类错误、strcpy()这样可能存在漏洞的函数、对内存的操作等等[1]，这类需要大量努力修复而几乎没有感知到的好处的实际缺陷，通常被称为噪声。<br>4.静态代码警告工具不根据特定的输入去做出评价，也不使用任何正在被执行的研究代码产生的反馈。[11]</p><h2 id="2-2-静态分析工具有局限性"><a href="#2-2-静态分析工具有局限性" class="headerlink" title="2.2 静态分析工具有局限性"></a>2.2 静态分析工具有局限性</h2><p>①因为人工检查在现今的静态分析中必不可少，因此就难免会存在用户的负面反馈[2][3]，指用户在检查警报时对于警报的内容产生了错误的判断，例如误报当真，警告含义模糊导致理解错误，从而对整个代码的后续迭代产生了负面的影响。<br>②静态代码分析工具(sat)的一些特点也限制了其在实践中的广泛适用性。一个关键问题是，sat在检查违规行为方面必然不够精确;换句话说，他们报告的警告可能与实际错误相符，也可能与实际错误不符。结果是，静态分析工具第一次在项目上运行时，很可能会报告数千个警告，这使开发人员无法通过它们筛选来选择那些更相关且应该修复的警告。在实践中使用sat的另一个相关问题是，理解由警告强调的问题并提出合适的解决方案通常是非常重要的。</p><h2 id="2-3-启发式标签过于乐观"><a href="#2-3-启发式标签过于乐观" class="headerlink" title="2.3 启发式标签过于乐观"></a>2.3 启发式标签过于乐观</h2><p>  启发式指 “自我发现的能力”或“运用某种方式或方法去判定事物的知识和技能”，静态分析的静态启发技术指的是在静止状态下通过缺陷的典型特征识别缺陷的方法。启发者算法是一种基于直观或经验构造的算法,在可接受的花费(指计算时间、计算空间等)给出待解决优化问题的每一实例的一个可行解，该可行解与与最优解的偏离程度一般不可以事先预计。<br>  因此，启发式产生的标签可能与人类预言不符[12]，如果在实践中采用，会对其真实性能过于乐观，但它给出的分析结果往往是不健全的，给用户带来”虚假的繁荣”。</p><h2 id="2-4-潜在缺陷未被发现"><a href="#2-4-潜在缺陷未被发现" class="headerlink" title="2.4 潜在缺陷未被发现"></a>2.4 潜在缺陷未被发现</h2><p>  由于静态分析工具并没有实际执行，可能会有某些错误或危险的操作没有被识别出来，更可能的是识别成了错误的警告，导致用户关注了错误的地方甚至无视了警告，为软件埋下了潜在的缺陷。而一次软件开发可能包含数千次的提交，若这些潜在缺陷没有被及时发现出来，它的隐患、造成的后果以及发现和修复的难度可能会越大[5]。</p><h2 id="2-5-动態分析的弊端"><a href="#2-5-动態分析的弊端" class="headerlink" title="2.5 动態分析的弊端"></a>2.5 动態分析的弊端</h2><p>  动态代码分析是在执行时对程序执行的分析。 这意味着您必须先将源代码转换为可执行文件。因此无法检查包含编译或生成错误的代码。 该检查是通过将一组输入数据馈送到要分析的程序来完成的。 因此，动态分析的有效性直接取决于测试输入数据的质量和数量，正是这些数据确定了测试结束时代码覆盖的程度。动态分析相较于静态分析拥有对代码的实时分析与反馈，会带来更优的精度，但其弊端也不容忽视:<br>1.不能保证完整的代码覆盖率。 也就是说，您不太可能通过动态测试获得100％的覆盖率。[7]<br>2.与静态分析相比，动态分析更难以使用，因为您需要向程序中馈入足够的数据以获得更好的结果并获得尽可能多的代码覆盖率。[7]<br>3.动态分析测试昴贵，成本高[5]<br>4.动态分析器不善于检测逻辑错误。 例如，从动态分析器的角度来看，始终为真的条件并不是错误，因为这种不正确的检查只会在编译步骤的早期消失。[8]</p><h1 id="3-研究现状分析"><a href="#3-研究现状分析" class="headerlink" title="3 研究现状分析"></a>3 研究现状分析</h1><p>  我们使用作者自己提出的标签对找到的文献进行初步分类。然后把具有相似方法的文献被再组合在一起，主要用其中处理错误警报的方法作为判断的对象。当发现一篇论文结合了多种方法，即可以被分成多个类型时，我们选择一种更主要、更好的方法，这主要由论文标题得出。<br>  于是，我们得出了以下六类处理警告的方法:<br>1.AI，机器学习:训练神经网络学习什么样的警告是误报并消除掉。<br>2.排序:警报和源代码的各种特征、错误&#x2F;警报修复和代码更改的历史记录等 用于对警报进行排名或优先级排序。<br>3.交互式:通过用户交互协同地将合理但不精确的分析与精确但不合理的启发式方法相结合，在每轮迭代到找到并优化问题，最大化收益。<br>4.修剪:警报分为可操作或不可操作，不可操作的警报被修剪。<br>5.启发式方法:<br>6.动静态分析结合:静态和动态分析相结合以处理警报。<br>除此之外，少量论文里也提到了使用聚类方法，根据警报之间的相关性将其进行聚类，也能有效减少多余的检查工作量。</p><h2 id="3-1-AI-机器学习"><a href="#3-1-AI-机器学习" class="headerlink" title="3.1 AI,机器学习"></a>3.1 AI,机器学习</h2><p>静态代码警告工具的显著特点是它们不根据特定的输入去做出评价，也不使用任何正在被执行的研究代码产生的反馈，静态分析工具往往会产生大量误报，而经验丰富的开发人员知道哪些错误是重要的，哪些错误可以被安全地忽略，因此使用机器学习、AI的方法来对这些经验丰富的开发人员的操作进行学习是消除误报的一种常用方法，然而要用机器学习就需要数据以及合适的机器学习算法，解决这两个问题才能更好地识别有效警告。下面介绍几种方法：<br>①    深度学习与非深度学习：在[11]中作者分别使用了三种非深度学习方案随机森林、决策树、线性支持向量机（SVM）以及三种深度学习方案深度神经网络DNN、卷积神经网络CNN、加权DNN来进行实验，以Wang等人中提出的黄金集[15]为基础创建用于本文训练和测试的数据集，以召回率，错误警告率以及AUC三个指标来评估，结果显示虽然深度学习的方法也有很多项为最佳结果，但是综合来看非深度学习的线性SVM的效果最好（较低的假警报、较高的召回率和AUC），尽管深度学习近些年来在软件分析领域一直被推崇，但是在消除误报这个领域，且它的表现不如线性SVM，运行时间更是非深度学习方法的近20倍，原因是虽然数据多，但是这些庞大的数据集的有效内在维度很低，也就是说深度学习与静态警告数据集的复杂度不匹配，而根据Principle of Parsimony，在低维的数据上使用复杂的方法是有害的，所以在消除误报的领域，深度学习的性能反而不如非深度学习。<br>  因此复杂的方法的效果并不一定比简单的方法好，选取合适的机器学习方法能更好更高效地识别有效警告，且能降低成本，加快进程。这在未来的相关研究中具有很好的指导意义。</p><blockquote><p><img src="https://s2.loli.net/2022/11/27/YQpv9e3f5zcEWXB.png" alt="深度学习.png" title="图3.1.1"></p></blockquote><p>②    增量主动学习：Yang等人在2021年提出了一种增量AI工具[16]来学习如何将误报与有效警报区分开以达到识别有效警告的目的，然而有监督的机器学习技术需要有标签的数据进行学习，而且要获得质量较高的标记数据有时会很耗时且昂贵，在识别有效警告领域，要训练一个能识别有效和无效警告的分类器需要数十万的标本，如果人工标注，成本会相当高，且标注需要专业知识，因此本文引入主动学习来进行数据标注。<br>这样做的原因是主动学习通过小部分已标记数据训练，然后为未标记数据申请更多标签，这样就可以减少所需的标记数据量。这对于机器学习的模型来说可以减少所需数据量，降低成本。<br>作者又选择了三种机器学习算法支持向量机(SVM)、随机森林（RF）和决策树（DT），并测试了有监督的SVM、RF、DT以及主动学习和SVM、主动学习和RF、主动学习和DT，得到结果发现增量主动学习可以获得高AUC，不比大多数数据集的监督学习差。<br>接下来作者通过实验证明在静态警告识别中应用增量主动学习模型可以帮助以更高的优先级检索可操作的警告，并减少在没有足够版本历史的软件项目中消除错误警报的努力。在静态警报识别场景中实施主动学习模型时，要检索多少样本是一个关键问题。过早或过晚停止将导致丢失重要的可操作警告或浪费不必要的运行时间和CPU资源。然后作者通过在九个数据集上实验发现在大多数数据集上主动学习只需要20%-30%的数据就可以识别90%以上的有效警告。作者通过一系列实验最终说明主动学习在处理不平衡数据集的静态分析的信息检索问题上是有效的。<br>Yang等人提出的增量主动学习方法在静态分析识别警告领域的应用很有意义，将增量主动学习和常用的机器学习算法结合可以大幅降低成本并且提高效率，同时这也是对机器学习如何获取知识这一问题的有效回应。这也进一步地提示相关研究者，不同方法结合使用可能会有更好的效果。</p><blockquote><p><img src="https://s2.loli.net/2022/11/27/qtOwKjW57zIaLhF.png" alt="增量主动学习.png" title="图3.1.2"></p></blockquote><p>③    构建完善的真实世界数据集：针对静态分析工具产生大量误报问题，已有不少后处理的解决方法，但是大多数这些方法只处理少数静态代码分析警告类型，并且基于小规模的数据集进行评估，显然具有局限性和不稳定性，因此可以利用机器学习和更大的数据集来更好地解决误报问题。<br> PÉTER HEGEDŰS等人在2022年提出构建一个最广泛的真实世界公共数据集[13]，并据此训练一个机器学习模型来更好地识别有效警告。<br> PÉTER HEGEDŰS等人针对SonarQube3这个开源平台，想借助它的提交历史来获得相关警告，作者使用数据挖掘技术挖掘了GitHub上Java项目的历史，保留哪些有SonarQube使用迹象的项目来获得适合构建假阳性静态代码分析(SCA)警告过滤方法的真实世界数据集。为了找到真阳性样本，即开发人员已修复的SonarQube警告，作者分析了2010年之前Java项目存储库的代码历史，以找到明确的Sonar Qube警告修复提交。为了找到假阳性的SonarQube报告（即，识别开发人员的动作A3），作者在GitHub上的Java项目存储库中执行代码搜索并在经典REST API的帮助下执行了所有挖掘步骤。然后执行了一个筛选步骤，删除了只有真阳性或假阳性样本的SonarQube问题类型。在这个过滤步骤之后，最终得到了来自9958个不同Java项目的160个警告类型和224484个警告样本。<br>接着作者用数据集训练了基于代码上下文的word2vec机器学习模型，对包含SonarQube警告报告的代码片段执行二进制分类任务，输入包含警告的代码上下文的矢量表示，输出二进制标签，该模型对160种不同类型的SonarQube警报进行分类，准确率为91%（最佳F1得分为81.3%，AUC为95.3%），识别出77.8%的假阳性警报，而平均只过滤出（即误分类）8%的真阳性警报。<br>许多现代CI&#x2F;CD已经包含了SonarQube分析，而作者的方案可以轻松集成到该分析中，非常适合实际应用。同时作者构建的数据集也为有效警告识别领域提供了一个非常好的知识库，便于后续研究以及训练机器学习模型，这是非常有意义的。这种方法也是对知识库问题的一个正面解决，即缺少知识库，就构建足够大且可靠的知识库来为机器学习模型提供足够的数据，同时一个好的数据集的建立也可以为后续相关研究提供一定便利，推动相关研究的进行。</p><h2 id="3-2-警告排序"><a href="#3-2-警告排序" class="headerlink" title="3.2 警告排序"></a>3.2 警告排序</h2><p><em>排序方法是对那些有很大概率是真实缺陷的报警进行优先级排序，并使用警告特征来计算每个报警可操作的可能性。</em><br>在我们研究的多篇论文中，Jung等人(2005)提出使用句法报警上下文作为贝叶斯的输入[32]，计算每个报警的真实概率，并在报警前根据概率对报警进行排序。Kim和Ernst (2007a,b)提出了一种基于从源代码库中挖掘出来的软件变更历史特征的警告优先排序算法[33]，而他们的基本思想是，通过修正更改消除的警报是重要的。在类似的思路上，Williams和Hollingsworth(2005)提出了一种利用软件项目的源代码更改历史来驱动和帮助改进缺陷搜索的方法[34]。针对其他排序方法的弱点（即在检查报告时，排名应该是自适应的），Kremenek等人(2004)利用报告和用户反馈之间的相关性行为进行警报排名[35]。与聚类方法相比，该方法需要对所有排名的报警进行检查。<br>下面给出两篇具体论文的研究分析：<br>①在[18]中QIN等人提出了一种构建基于机器学习的警告优先级排序模型的方法。在一般的警告优先级模型中，通常为每个警告分配一个置信度评分，分数越高越有可能是真实缺陷，以此来弥补静态分析SAT在产生警告时产生了大量无效警告的情况。目前的警告优先级排序方法主要依靠警告特征计算权重集来获得最终置信度得分[19]，但警告特征[20]-[22]间存在冗余和不相关性，为了选择合适的特征，QIN等人提出在真实的、开源的、大规模的数据集上构建基于ML的警告优先级排序模型，在探索了91个预警特征，并使用特征选择算法找到了预警特征子集后，QIN等人证实了基于ML的警告优先级排序模型优于随机排序算法。<img src="https://s2.loli.net/2022/11/27/fBQasoVPIUH4bMF.png" alt="image.png">图3.2.1 框架预览<br>[18]中采用递归特征消除(RFE)算法迭代消除预警特征，选取最优特征集。RFE算法从所有原始特征集开始，在每次迭代中，RFE算法构建一个基于ml的预警优先级模型，并从当前特征集中去除最不重要的特征。最后，返回获得最佳优先级性能的特征子集(即最优特征集)。QIN等人选取了6种常用的ML模型，包括朴素贝叶斯(NB)、逻辑回归(LR)、K最近邻(KNN)、随机森林(RF)、决策树(DT)和支持向量机(SVM)，将静态分析预警数据集中的最优特征集和预警标签分为训练集和测试集，利用ML模型从训练集中学习基于ML的预警优先排序模型。<br>实验证明了基于最优特征集的警告优先排序模型具有良好的性能，且其中基于LR的警告优先排序模型性能最好。<br>②对于警报排序时训练的数据集 ，Athos Ribeiro等人给出如下处理假设[29]：<br>i. 数据提取：将来自不同工具的警报转换成统一的格式，并对每个警告应用标签，以区分它们是真阳性还是假阳性并将每个警告与特定的特征相关联，这些特征将组成一个数据集来训练我们的预测模型两点来对工具提供信息的规范化；<br>ii. 选择数据来源：通过在先前选定的源代码上运行静态分析器，并将触发的警告与实际的软件缺陷相匹配，来获得标记静态分析警告的数据集；<br>iii. 多个工具收集标记警告：对测试套件进行裁剪后运行静态分析器生成静态报告，并检查标记的警告集；<br>iv. 从标志警告中提取特征：特征包含生成警告的工具名称、同一文件中的警告数量、类别、冗余级别、邻居数量等<br>v. 依据数据集，构建预测模型，对每个触发警告分类为真阳性和假阳性，结果用于排序。<br>通过从准确率、精度、召回率等纬度的评估，Athos Ribeiro等人验证了此处理方式的合理性。[29]</p><h2 id="3-3-交互式"><a href="#3-3-交互式" class="headerlink" title="3.3 交互式"></a>3.3 交互式</h2><p>  XIN ZHANG等人提出了一种交互式方法来解决静态分析警报的误报问题[1]。通过用户交互，他们的方法协同地将合理但不精确的分析与精确但不合理的启发式方法相结合。在每轮迭代找到并优化问题，最大化收益，他们已经在Ursa工具中实现了这个方法。<br>该工具可以为声明性逻辑编程语言Datalog中指定的任何分析提供交互式警报解决方案。Ursa在最先进的静态数据竞赛分析中具有效性，使用一套8个Java程序，每个程序包含41-194个KLOC(千行代码的意思)。 Ursa能够消除每个基准测试74%的误报，每个问题的平均收益为12倍。<br>这个方法的关键思想是，组合方法 (就是那个把合理但不精确的分析与精确但不合理的启发式方法相结合的方法) 不是以可能不合理地抑制误报的方式直接应用给定的启发式方法，而是向用户提出有关启发式方法所针对的根本的真实的原因。如果用户确认了它们，就只有在用户知情的情况下，才会应用启发式方法来消除误报 。<br>为了有效，组合办法必须实现两个关键目标： 概括和优先次序，概括:与消除的误报数量相比，向用户提出的问题数量应该少得多，大多数警报通常是一组相对较少的常见根本原因所引发的，所以检查这个单个根本原因比检查多个警报更容易。优先次序:由于由不同根本原因导致的误报数量可能会有所不同，因此用户可能希望只回答收益相对较高的问题，所以通过迭代方式与用户交互来实现这一目标，而不是一次提出所有问题。<br>他们使用来自 Chord [Naik 2006] 的静态数据空间分析，它是上下文和流敏感的，并结合了线程逃逸分析、可能发生的并行分析和锁集分析，即图3.3.1中的推导。</p><blockquote><p>图3.3.1 示例程序中数据空间的推导<br><img src="https://s2.loli.net/2022/11/27/9k1w4Jfi8XKS5I6.png" alt="image.png"></p></blockquote><blockquote><p>图3.3.2 工具评估<br><img src="https://s2.loli.net/2022/11/27/4GVepWymEPOCH8z.png" alt="image.png"></p></blockquote><p>  他们在实践中证明了方法的有效性，通过只问几个问题来消除大多数误报，并优先考虑高回报的问题。然而，这种方法也有其弊端，即分析结果十分依赖于程序员，倘若程序员对警报是否真实和重要并不熟悉，仅凭直觉或个人喜好进行交互，那些分析结果可能和真实情况有很大的偏差，而且这种方法可能只适合用在开发阶段，代码测试和审查阶段可能不会有这种迭代交互的机会。</p><h2 id="3-4-修剪、分类"><a href="#3-4-修剪、分类" class="headerlink" title="3.4 修剪、分类"></a>3.4 修剪、分类</h2><p><em>通过分类的方式，可以区分警告是可处理还是不可处理。不可操作的警告将被修剪，不会报告给用户，因为这些警告更有可能是误报。</em><br>我们研究了近几年有关警报修剪分类方法的众多论文，其中Ayewah等人(2007)讨论了产生的报警的种类，并将报警的类型分为假阳性、小bug和严重bug[36]。Ruthruff等人(2008)提出了一种逻辑回归模型，基于从告警本身提取的33个特征来预测FindBugs发现的可操作告警[37]，并使用一种筛选方法快速丢弃预测能力低的特征，以构建具有成本效益的预测模型。Hanam等人(2014)提出了一种区分可操作和不可操作告警的方法，方法是根据每个静态分析告警周围的代码寻找相似的代码模式[38]。Flynn等人(2018)发展了和测试了映射到CERT规则的静态分析告警的四个分类模型[39]，使用了多种静态分析工具和从告警中提取的28个特征的新颖组合，可见关于警报分类的研究在不断进步和发展。<br>下面给出两种具体模型的分析[2][28]:<br>①静态分析工具的两个挑战是虚假的误报和未有采取行动的合法警告。因此Joseph R. Ruthruff和他的团队做了一个工具，使用筛选方法来快速丢弃预测能力低的影响因素，并经济高效地构建预测模型[2]，通过识别开发人员将要处理的合法警告来帮助解决这两个挑战，从而减少测试人员对程序内报告的数万个警告进行分类的工作量。他们从 Google 的数万个静态分析警告中抽样，构建了模型来预测错误警告是否为误报。<br>他们的工具使用逻辑回归分析，一种分类数据分析，用于预测服从二项分布的因变量值 。逻辑回归模型根据一系列系数的总和乘以特定自变量的来预测单元 _i_的因变量 y 的值。为了在数学上表征这一点，设 <em>Xi</em> &#x3D; （_Xi1,…，Xin_） 是单位 i 的自变量值的向量。设 _β _&#x3D; <em>β0_，_β_1</em>,…,βn _是通过将模型拟合到现有“模型构建”数据集来估计的系数，其中 _β_0 称为模型“截距”。“ 逻辑回归模型通过计算给定 <em>Xi</em> 的 <em>Yi</em> &#x3D; 1 的概率来预测二进制值 <em>Y</em> i for _i，_这个模型的概率如图3.4.1所示。</p><blockquote><p>图3.4.1 模型的概率<br><img src="https://s2.loli.net/2022/11/27/7QvZrHPy6nkIbBE.png" alt="image.png"></p></blockquote><p>  他们根据自己在 Google 静态分析警告方面的经验，以及其他在其他软件工程领域建立回归模型的研究人员的经验，他们决定专注于更轻量级的复杂性度量，并且可以在大型代码库上非常快速地计算，于是选择了因子和相关指标，即图3.4.2所示。</p><blockquote><p>图3.4.2 静态分析警告和程序的因素<br><img src="https://s2.loli.net/2022/11/27/TvkAQLR34nqfzCX.png" alt="image.png"></p></blockquote><p>他们的筛选方法分为几个阶段:<br>第一阶段:考虑了5%的静态分析警告和源代码。此阶段的目标是考虑一小部分警告，并消除几乎没有构建准确模型所需的预测能力的影响因素。<br>第二阶段:如果消除后留下六个或更少的因素，就停止筛查，并根据剩余因素使用剩余的95%的警告收集数据。否则，在第二阶段考虑了另外 20% 的静态分析警告，然后使用偏差分析来消除检验统计量 p 值大于 0.50 的因子。第三阶段:使用接下来的 25% 的警告，现在分析的警告占所有警告的一半。这里的排除标准更严格：p 值大于 0.20。之所以选择这样做，是因为到目前为止，已经收集了大量数据，可以做出明智的判断。<br>第四阶段:如果剩余的因素超过六个，则这些因素用最后 50% 的数据来分析。这将消除 p 值不显着且大于 0.10 的因子。然后使用剩余因子作为自变量在 R 中拟合对数回归模型。</p><blockquote><p>图3.4.3 基于筛选因子构建模型 ，预测误报的模型<br><img src="https://s2.loli.net/2022/11/27/ELWztbgu4BHOqvN.png" alt="image.png"></p></blockquote><p>  分析然后评估预测精度:逻辑回归模型在预测误报和可操作静态分析警告方面具有准确性。可以看出，筛选模型在预测假阳性和基于真实缺陷的行动警告方面通常是最准确的。</p><blockquote><p>3.4.4 预测精度<br><img src="https://s2.loli.net/2022/11/27/XV9GLCYBgO2FJtv.png" alt="image.png"></p></blockquote><p>  这个基于筛选的模型能够平均在85%的时间内准确预测误报警告，在70%的时间内准确预测可操作警告。此外，筛选模型始终比现有预测模型表现更好。然而，这种方式需要额外的数据收集，收集构建全数据回归模型所需的数据可能需要大量时间，必须想办法尽快减少多余的影响因素，降低根据这些因素收集数据的成本。这个方法比较适合大型项目的后期测试中，当你认为一个缺陷有许多的可能因发因素，又无从查起，焦头烂额，就可以使用它。<br>②YU等人选择了13个基本分类器和两种集成学习方法构建了一个基于机器学习方法的二元分类模型[28]，将报告的警告被分类为有效警告(真实的缺陷)或无效警告(假阳性)，并对分类为无效警告的报告报警进行修剪，以减少人工检查的工作量。该实验在4个开源C项目上对该方法进行了评价，分类结果表明所提出的模型在实践中取得了较高的性能和可靠性。然后进行一个基线实验，以评估提出的模型的有效性与传统的对比。<br>该实验不同的特点有以下四点：<br>1、选择两种集成学习方法和13个基分类器建立自动缺陷识别模型。<br>2、在变量级别上设计了一组新工件特征，称为变量特征（VC），用于构建所提出的模型。<br>3、在四个开源C项目上进行了实验，以评估我们的方法在识别来自同一项目的报警的情况下的性能。<br>4、变量特征由三个不同的单一属性评估器进行排序，以确定这些特征对模型的影响。<br>（图：模型构建过程）<br><img src="https://s2.loli.net/2022/11/27/SX4Pn3tiMaH2GeL.png" alt="image.png"><br>YU等提出了一种基于警报的变量特征（vc）并给出了其语义度量：利用抽象语法树(AST)提取源代码语义。在分析源代码文件时，将注意力集中在数据流的表述和相关变量的条件谓词上，通过生成向后的程序片来减少要检查的语句数量。一个反向的程序切片将包含相关变量的语句作为种子语句，提取可能影响种子语句结果的三种类型的语句作为特征，分别是赋值语句、引用语句和控制流语句。<br>（图：分类器和集成学习方法）<img src="https://s2.loli.net/2022/11/27/hX49wlOnLAIbiJZ.png" alt="image.png"></p><p>③Diego Marcilio等人则提出了一种Java程序转换技术SpongeBugs[30]，它通过自动提供修复建议来提高SAT的实际可用性，即对源代码进行修改使其符合分析工具检查的规则。它的大致步骤为：<br>a、查找可能表示违反规则的文本模式。<br>b、对于步骤1中确定的每个匹配，在AST中执行完整搜索寻找违反规则的行为。<br>c、对于第2步中确认的每个匹配，实例化规则的修复模板生成违反规则的实际修复。<br>通过在12个流行的开源项目上运行并提交了它在项目中请求生成的大部分修复(总共946个)，Diego Marcilio等人证实了SpongeBugs可以成为一种有效的方法，帮助程序员修复静态代码分析工具发出的警告——从而有助于提高这些工具的可用性，进而提高软件系统的整体质量。<br>此外还有一种自动将代码转换模板应用到大型代码库的方法Coccinelle[23]。它支持用户定义mod(通用的)、复杂的模式，以捕获语义信息。它的实现将模式表示为CTL公式，并将其应用表示为程序控制流图上的模型检查问题。Coccinelle的主要应用是支持大型代码库的演进:当API或语言特性发生变化时，手动重构很容易出错，因为引入不一致或其他错误的风险很高。</p><h2 id="3-5-启发式方法"><a href="#3-5-启发式方法" class="headerlink" title="3.5 启发式方法"></a>3.5 启发式方法</h2><p>  ① 软件系统中缺陷的检测分为两个研究领域：静态代码分析和历史数据的统计建模。静态分析有误报的问题，相比之下，统计错误模型用历史开发信息来提示有风险的文件或提交，即潜在的缺陷。模型中使用的预测因子包括产品度量(例如提交中更改的行数)和过程度量(例如开发人员对文件的专业知识)统计错误模型的优点是它们提供了对提交和文件中的字段缺陷的合理预测[17]。缺点是预测不是细粒度的，整个文件都会被标为有风险。<br>  于是，Querel L等人便开发了一个名为 WarningsGuru 的工具，它结合了这两种方法，使用统计模型来识别哪些提交可能包含缺陷，并引入的静态分析警告显示出特定行号。他们还开发了一种跟踪提交的警告的技术，用它来追溯将警告分配给失败的构建。</p><blockquote><p>图3.5.1 WarningsGuru的体系结构<br><img src="https://s2.loli.net/2022/11/27/NHlQFqecmfDBksa.png" alt="image.png"></p></blockquote><p>  统计模型认为有风险的提交会突出显示，还会显示新警告和现有警告的数量。例如，图3.5.2中，显示了每次提交的警告和新警告的总数，以及 CommitGuru 的 统计风险预测，更改的文件有34个现有的警告提交，”b36bb31fe4”则不被认为是有风险的，此提交中没有引入新的警告。</p><blockquote><p>图3.5.2 每次提交的警告分析<br><img src="https://s2.loli.net/2022/11/27/Eeg6PY9cyw1vF4u.png" alt="image.png"></p></blockquote><blockquote><p>  图3.5.3  显示 CommitGuru 度量值时，提交的异常值以红色突出显示。例如，“添加的行”异常高，大型提交往往有风险<br><img src="https://s2.loli.net/2022/11/27/RXxWTG3Jdi57HFV.png" alt="image.png"></p></blockquote><p>  他们通过单独使用统计模型，发现 CommitGuru 将 25% 和 29% 的提交标记为 risky。当将其与 WarningsGuru 中的静态分析相结合时，两个项目的风险提交和警告数量分别为 20%，新警告的数量分别为 3% 和 6%。<br>  可见通过将统计模型与静态分析相结合，可以大大减少开发人员必须检查的提交和警告。他们这个工具也正在与加拿大发展部的KDM分析和国防研究合作，可见其有效性。然而这种方式也不能在所有时候都一帆风顺，因为统计模型不可能在可用、可靠、性能等维度上都做的很好，总会有覆盖不到的地方，作者也说只能用来标注有风险的提交的行，而且用于错误定位的静态分析工具自身都有局限，不能准确定位，结合起来一样会有误报的发生。<br>② 关闭-警告启发式方法：许多研究中使用启发式算法来对警告进行识别，如图3.5.4所示，构建一个数据集作为训练版本，并不断收集警告直到测试版本，最后在测试版本使用一段时间后选定一个参考修订版，使用关闭—警告启发式方法作为警告预言时，对于一个给定的修订版本，里面的每一个警告都要与参考修订版本对比，如果参考修订版中不再存在该警告（关闭警告），则该启发式算法认为该警告是有效的。如果在给定版本和参考版本中都存在该警告（开放警告），则启发式认为这是错误警告。如果包含带有警告的代码的文件已被删除，则警告将被标记为未知，并从数据集中删除。</p><blockquote><p><img src="https://s2.loli.net/2022/11/27/f58xqTw1bX4WDIz.png" alt="启发式算法.png" title="图3.5.4"></p></blockquote><p> 但是，Kang等人通过研究证明这种启发式方法并不稳定[12]，他们首先通过调整测试修订版本和参考修订版本之间的时间间隔，发现得到的有效警告的比例并不稳定，从图3.5.5里可以看出，8个项目中有4个项目的有效警告比率保持一致，而其他4个项目的有效警告比率增加了10%以上。总体而言，当将测试和参考文献修订之间的时间间隔从2年改为4年时，平均有效警告比率增加了14%。</p><blockquote><p><img src="https://s2.loli.net/2022/11/27/HfRwKhaVLcN8qbI.png" alt="启发式时间间隔.png" title="图3.5.5"></p></blockquote><p>接下来Kang等人又通过实验发现只有47%的关闭警告被人工注释人员标记为有效的，这意味着许多关闭警告是无效的。许多关闭的警告只是偶然关闭的。这说明虽然封闭警告启发式认为可以通过删除文件来删除一个警告，但它没有考虑其他情况，即警告可以通过修改代码顺便删除，但这并没有修复警告所指出的错误。这也说明应该考虑更多的信息，启发式没有足够的鲁棒性。<br>除了关闭警告有可能不是有效警告外，开放警告也有可能不是误报，也可能是被忽略的有效警告，Kang等人通过调查使用了Findbug过滤器文件的项目中被认定是错误的警告和开放警告的比例，最终发现平均只有31%的开放式警告被开发人员明确表示为错误警报，这表明只有少数开放警告是假警报。尽管其余打开的警告可能是错误警告，但它们也可能是尚未检查的有效警告。<br>综上所述，关闭—警告启发式算法并不是合适的警告预言，因为它的分类结果会因为参考版本的改变而改变，同时得出的关闭警告中只有部分被人工注释人员认定为有效警告，同时关闭警告和开放警告的分类与有效警告和无效警告的分类并不是完全相同的，关闭警告中会包含无效警告，开放警告中也会包含有效警告，因此这种启发式算法虽有可取之处，但是并没有足够的鲁棒性以及稳定性。未来应当将启发式和手动标记结合一下构建数据集。</p><h2 id="3-6-动静态分析结合"><a href="#3-6-动静态分析结合" class="headerlink" title="3.6 动静态分析结合"></a>3.6 动静态分析结合</h2><p>  静态分析只要源代码或二进制文件，而无需执行。此方法速度快，并且没有运行时间开销。然而，静态分析非常简单，会产生很多的误报和漏报。另一方面，动态分析涉及软件的运行。在动态分析的情况下，误报和误报的问题较少，因为它们通过运行测试用例进行分析，而开销就比较大，因此可以两者结合互补输出最佳结果。使用动态分析检查静态分析警报是否为真错误，并且见证故障的测试用例将作为错误场景报告给用户。<br>  在[7]中，Aggarwal A等人解释了如何有效集成静态和动态分析的方法。他们使用”BOON”作为静态分析仪，使用”STOBO”作为实验的动态分析器。<br>  Boon是一个静态分析器，它将缓冲区溢出检测问题表述为整数约束问题，并使用简单的图理论知识来解决约束。它更注重可扩展性而不是精度，因此可能会产生误报误报或漏报。</p><blockquote><p>图3.6.1.BOON的结构<br><img src="https://s2.loli.net/2022/11/27/6wO7qFcHYLxrbUZ.png" alt="image.png"></p></blockquote><pre><code>STOBO是基于测试技术的动态分析器，它使用小片段访问源代码，这些片段会占用缓冲区并检查库函数的某些安全属性。库函数具有先决条件，例如在 strcpy 函数中分配给目标缓冲区的内存应大于源缓冲区中字符串的长度。如果违反此类条件，则会发生缓冲区溢出，并在跟踪文件中报告警告。但是动态测试需要很多的测试用例。</code></pre><blockquote><p>图3.6.2.STOBO的结构<br><img src="https://s2.loli.net/2022/11/27/hr6BKZtoHFjxU2Q.png" alt="image.png"></p></blockquote><p>  于是他们做了一个工具同时使用静态分析和动态分析，在静态分析时使用别名变量标记不安全的库函数（如strcpy)，并引导动态分析器只关注它们。工具将扫描源代码以查找指针混叠。如果怀疑变量是别名，它将它们标记为可疑变量，因此工具必须足够智能，只能标记那些静态分析器无法精确处理的功能，指定应关注的行号以检测安全漏洞，并为静态分析器生成元数据，用于抑制其生成的虚假警告。然后，假阳性和假阴性的数量总体上有所减少。</p><blockquote><p>图3.6.3.他們的模型<br><img src="https://s2.loli.net/2022/11/27/O4Bu7xpA9TIqNJP.png" alt="image.png"></p></blockquote><p>  他们模型的性能取决于工具在标记“结构库函数”时的智能程度。C语言足够宽泛，有各种结构，如结构体和联合体。目前，他们的工具还无法智能地处理结构元素（结构）的混叠。</p><h1 id="4-未来研究方向"><a href="#4-未来研究方向" class="headerlink" title="4 未来研究方向"></a>4 未来研究方向</h1><p>①  Findbug是目前流行的一种静态代码分析工具，被下载超过百万次，同时也会产生很多误报，因此深入研究Findbug等静态代码分析工具生成的静态警告的特定警告类型是未来的一种研究方向。如先前文献[23]所示（Khalid等人，2015），Findbug识别的400多种可能的警告类型可分为八类（错误实践、正确性、国际化、恶意代码漏洞、多线程正确性、性能、安全性和危险代码）。可以为这些警告分配优先级（例如，低、中和高），以表明该警告是有效警告或真阳性的警告的把握。<br>②  目前有效警告识别领域的很多研究是基于Wang等人中提出的黄金集[15]以及黄金特征展开的，使用黄金特征进行机器学习再识别警告有极高的召回率，AUC等，看似效果几乎完美，但是如同Kang等人在[12]中发现的黄金特征仍存在与数据泄漏和数据重复相关的细微缺陷一样，这项发现仍旧存在一些瑕疵有待考究，后续的研究在使用相关结果时也应当对实验结果深入分析，并将研究得出的结果与基线进行比较，得出更准确的结果。因此未来针对黄金集、黄金特征的进一步研究也会是一种方向。<br>③ 关于Yang等人提出的增量主动学习在识别有效警告领域的应用[16]，未来的研究方向之一应该是估计算法停止的时间，过早或过晚停止将导致丢失重要的可操作警告或浪费不必要的运行时间和CPU资源。因此，对算法运行时间以及停止时间的估计，包括需要学习的数据量都需要进行估计，以便用更少的成本达到更高的效率。<br>④Echer等人在大量证据中发现最初被认为是正确但后来被收回或更正的信息，往往会继续影响记忆和推理[]。进一步可解释为无论是关于持续影响效应的详细资料的具体警告可以成功减少对过时信息的持续依赖，还是通过一个特定的警告与对撤销的信息提供一个貌似合理的替代解释相结合，操作进一步降低CIE，都无法完全消除它。而关于如何在实验中，最大化减少甚至完全消除过往错误对后续的影响，也是未来的研究方向。<br>⑤在提高跨项目缺陷识别的准确性方面存在一个主要的挑战，即使用一个给定的项目来训练一个模型来识别来自另一个项目的缺陷，而不需要人工检查[28]。如何扩展自动缺陷识别方法，将其用于更多的缺陷模式，如何设计一组可能被大多数缺陷模式充分共享的特征计划利用此模型结合迁移学习方法来自动识别跨项目的缺陷，这将有成为未来可深入钻研之处，有希望能提高跨项目缺陷识别的准确性。</p><h1 id="5-结论"><a href="#5-结论" class="headerlink" title="5 结论"></a>5 结论</h1><p>在本文中，我们研究了近二十年来关于静态分析工具产生警报中存在的问题和挑战，概述了处理静态分析工具产生的警告的各种方法。我们检索发现了35篇相关论文，在仔细研读这些论文后，我们将这些论文中提出的方法分为了6类，并选择其中一些阐述了具体实现模型。<br>我们深入研究分析了这6类方法并对针对其要点做出如下总结：机器学习需要足够的数据学习以及合适的方法，警告排序则通过对报警的优先级进行排序并使用警告特征来计算某个警告为有效警告的概率，交互式的方法将合理但不精确的分析与精确但不合理的启发式方法相结合在每轮迭代找到并优化问题，最大化收益。修剪&#x2F;分类方法则是通过分类的方式，区分警告是可处理还是不可处理，并删除掉不可操作的警告，启发式方法中目前的主流是关闭警告启发式方法，其通过对比不同版本中同一警告的开关情况判断其是否有效，但是其效果不稳定且产生的标签可能与人类预言不符动静态分析结合则是使用动态分析检查静态分析警报是否为真错误，并将检测出故障的测试用例返回给用户。<br>未来，深入研究Findbug等静态代码分析工具生成的静态警告的特定警告类型、针对黄金集&#x2F;黄金特征的进一步研究、估计增量注定学习算法停止的时间、研究探索如何最大化减少甚至完全消除过往错误对后续的影响、扩展自动缺陷识别方法都将成为这一领域的可能研究方向，我们计划探索各方法的组合，以更加有效地处理警报。</p><h1 id="6-參考文獻"><a href="#6-參考文獻" class="headerlink" title="6 參考文獻"></a>6 參考文獻</h1><p>[1]Zhang X, Grigore R, Si X, et al. Effective interactive resolution of static analysis alarms[J]. Proceedings of the ACM on Programming Languages, 2017, 1(OOPSLA): 1-30.<br>[2]Ruthruff J R, Penix J, Morgenthaler J D, et al. Predicting accurate and actionable static analysis warnings: an experimental approach[C]&#x2F;&#x2F;Proceedings of the 30th international conference on Software engineering. 2008: 341-350.<br>[3]Muske T, Talluri R, Serebrenik A. Repositioning of static analysis alarms[C]&#x2F;&#x2F;Proceedings of the 27th ACM SIGSOFT international symposium on software testing and analysis. 2018: 187-197.<br>[4]Akremi A. Software security static analysis false alerts handling approaches[J]. International Journal of Advanced Computer Science and Applications, 2021, 12(11): 702-711.<br>[5]Querel L P, Rigby P C. Warningsguru: Integrating statistical bug models with static analysis to provide timely and specific bug warnings[C]&#x2F;&#x2F;Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering. 2018: 892-895.<br>[6]Muske T, Serebrenik A. Techniques for Efficient Automated Elimination of False Positives[C]&#x2F;&#x2F;2020 IEEE 20th International Working Conference on Source Code Analysis and Manipulation (SCAM). IEEE, 2020: 259-263.<br>[7]Aggarwal A, Jalote P. Integrating static and dynamic analysis for detecting vulnerabilities[C]&#x2F;&#x2F;30th Annual International Computer Software and Applications Conference (COMPSAC’06). IEEE, 2006, 1: 343-350.<br>[8]Gosain A, Sharma G. A survey of dynamic program analysis techniques and tools[C]&#x2F;&#x2F;Proceedings of the 3rd International Conference on Frontiers of Intelligent Computing: Theory and Applications (FICTA) 2014. Springer, Cham, 2015: 113-122.<br>[9]Bayer U, Moser A, Kruegel C, et al. Dynamic analysis of malicious code[J]. Journal in Computer Virology, 2006, 2(1): 67-77.<br>[10]Kirchmayr W, Moser M, Nocke L, et al. Integration of static and dynamic code analysis for understanding legacy source code[C]&#x2F;&#x2F;2016 IEEE international conference on software maintenance and evolution (ICSME). IEEE, 2016: 543-552.<br>[11]Xueqi Yang , Jianfeng Chen, Rahul Yedida, Zhe Yu, Tim Menzies. Learning to recognize actionable static code warnings(is intrinsically easy) . Empirical Software Engineering (2021) 26: 56<br>[12]Hong Jin Kang, Khai Loong Aw, David Lo. Detecting false alarms from automatic static analysis tools: how far are we?. 2022 IEEE&#x2F;ACM 44th International Conference on Software Engineering (ICSE)<br>[13]Hegedus, P., &amp; Ferenc, R. (2022). Static code analysis alarms filtering reloaded: A new real-world dataset and its ML-based utilization. <em>IEEE Access</em>, <em>10</em>, 55090–55101.<br>[14]Muske, T., &amp; Serebrenik, A. (2016). Survey of approaches for handling static analysis alarms. <em>2016 IEEE 16th International Working Conference on Source Code Analysis and Manipulation (SCAM)</em>, 157–166<br>[15]Wang, J., Wang, S., &amp; Wang, Q. (2018). Is there a “golden” feature set for static warning identification? <em>Proceedings of the 12th ACM&#x2F;IEEE International Symposium on Empirical Software Engineering and Measurement</em>, 2018,<em>17</em>, 1–10.<br>[16]Yang, X., Yu, Z., Wang, J., &amp; Menzies, T. (2021). Understanding static code warnings: An incremental AI approach. <em>Expert Systems with Applications</em>, <em>167</em>. 2020<br>[17]T. Hall, S. Beecham, D. Bowes, D. Gray, and S. Counsell. 2012. A Systematic<br>Literature Review on Fault Prediction Performance in Software Engineering. IEEE Transactions on Software Engineering 38, 6 (Nov 2012), 1276–1304.<br> [18] Mingshuang Qing, Xiang Feng, Jun Luo, Wanmin Huang, Jingui Zhang, Ping Wang, Yong Fan Xiuting Ge, Ya Pan.A machine learning-based static analysis warning prioritization. <em>2021 IEEE 21st International Conference on Software Quality, Reliability and Security Companion (QRS-C)QRS-C55045.2021.00103</em><br>[19] B. H. Dang, “A practical approach for ranking software warnings from multiple static code analysis reports,” in 2020 SoutheastCon, vol. 2. IEEE, 2020, pp. 1–7<br>[20] X. Yang, J. Chen, R. Yedida, Z. Yu, and T. Menzies, “Learning to recognize actionable static code warnings (is intrinsically easy),” Empirical Software Engineering, vol. 26, no. 3, pp. 1–24, 2021.<br>[21] S. Heckman and L. Williams, “A model building process for identifying actionable static analysis alerts,” in 2009 International Conference on Software Testing Verification and Validation. IEEE, 2009, pp. 161–170.<br>[22] J. Ruthruff, J. Penix, J. Morgenthaler, S. Elbaum, and G. Rothermel, “Predicting accurate and actionable static analysis warnings,” in 2008 ACM&#x2F;IEEE 30th International Conference on Software Engineering. IEEE, 2008, pp. 341–350.<br>[23]Khalid H, Nagappan M, Hassan AE (2015) Examining the relationship between findbugs warnings and app ratings. IEEE Software 33(4):34–39 </p><p>[24]Yuwei Zhang, Ying Xing, Yunzhan Gong, Dahai Jin, Honghui Li, Feng Liu. A variable-level automated defect identification model based on machine learning.  Soft Computing (2020) 24:1045–1061<br>[25] Athos Ribeiro, Paulo Meirelles, Nelson Lago, Fabio Kon. Ranking Warnings from Multiple Source Code Static Analyzers via Ensemble Learning.  the 15th International Symposium,  · August 2019<br>[26] Diego Marcilio , Carlo A. Furia , Rodrigo Bonifácio , Gustavo Pinto. SpongeBugs: Automatically Generating Fix Suggestions in Response to Static Code Analysis Warnings. Preprint submitted to Elsevier June 3, 2020<br>[27] ULLRICH K. H. ECKER, STEPHAN LEWANDOWSKY, AND DAVID T. W. TANG. Explicit warnings reduce but do not eliminate the continued influence of misinformation. Memory &amp; Cognition 2010, 38 (8), 1087-1100<br>[28] Jung Y, Kim J, Shin J, Yi K (2005) Taming false alarms from a domainunaware c analyzer by a Bayesian statistical post analysis. In: Proceedings of the 12th international static analysis symposium, pp 203–217<br>[29a] Kim S, Ernst MD (2007a) Prioritizing warning categories by analyzing software history. In: Proceedings of the 4th international workshop on mining software repositories, pp 27–27<br>[29b] Kim S, Ernst MD (2007b) Which warnings should i fix first? In: Proceedings of the 2007 joint meeting on foundations of software engineering, pp 45–54<br>[30] Williams CC, Hollingsworth JK (2005) Automatic mining of source code repositories to improve bug finding techniques. IEEE Trans Softw Eng 31(6):466–480<br>[31] Kremenek T, Ashcraft K, Yang JF, Engler DR (2004) Correlation exploitation in error ranking. In: Proceedings of the 12th ACM SIGSOFT international symposium on foundations of software engineering, pp 83–93<br>[32] Ayewah N, Pugh W, Morgenthaler JD, Penix J, Zhou YQ (2007) Evaluating static analysis defect warnings on production software. In: Proceedings of the 7th ACM SIGPLAN-SIGSOFT workshop on program analysis for software tools and engineering, pp 1–8<br>[33] Ruthruff JR, Penix J,Morgenthaler JD, Elbaum SG, Rothermel G (2008) Predicting accurate and actionable static analysis warnings: an experimental approach. In: Proceedings of the 30th international conference on software engineering, pp 341–350<br>[34] Hanam Q, Tan L, Holmes R, Lam P (2014) Finding patterns in static analysis alerts: improving actionable alert ranking. In: Proceedings of the 11th working conference on mining software repositories, pp 152–161<br>[35]  Flynn L, Snavely W, Svoboda D, VanHoudnos NM, Qin R, Burns J, Zubrow D, Stoddard R, Marce-Santurio G (2018) Prioritizing alerts from multiple static analysis tools, using classification models. In: Proceedings of the 1st international workshop on software qualities and their dependencies, pp 13–20  </p>]]></content>
      
      
      <categories>
          
          <category> 煩人作業 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自動化測試 </tag>
            
            <tag> 錯誤警告 </tag>
            
            <tag> 綜述 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系統實驗-I/O处理</title>
      <link href="/2022/11/15/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%B5%B1%E5%AF%A6%E9%A9%97-I_O%E5%A4%84%E7%90%86/"/>
      <url>/2022/11/15/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%B5%B1%E5%AF%A6%E9%A9%97-I_O%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="讀取鍵盤輸入"><a href="#讀取鍵盤輸入" class="headerlink" title="讀取鍵盤輸入"></a>讀取鍵盤輸入</h2><ol><li>首先要初始化鍵盤，設定鍵盤中斷处理程序，開鍵盤中斷等<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">init_keyboard</span><span class="params">()</span>&#123;</span><br><span class="line">    put_irq_handler(KEYBOARD_IRQ, keyboard_handler);</span><br><span class="line">    enable_irq(KEYBOARD_IRQ);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>第一條設定中斷处理程序交由8259A芯片处理<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">put_irq_handler</span><span class="params">(<span class="type">int</span> irq, irq_handler handler)</span></span><br><span class="line">&#123;</span><br><span class="line">disable_irq(irq);</span><br><span class="line">irq_table[irq] = handler;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">disable_irq:</span><br><span class="line">movecx, [esp + 4]; irq</span><br><span class="line">pushf</span><br><span class="line">cli</span><br><span class="line">movah, 1</span><br><span class="line">rolah, cl; ah = (1 &lt;&lt; (irq % 8))</span><br><span class="line">cmpcl, 8</span><br><span class="line">jaedisable_8; disable irq &gt;= 8 at the slave 8259</span><br><span class="line">disable_0:</span><br><span class="line">inal, INT_M_CTLMASK</span><br><span class="line">testal, ah</span><br><span class="line">jnzdis_already; already disabled?</span><br><span class="line">oral, ah</span><br><span class="line">outINT_M_CTLMASK, al; set bit at master 8259</span><br><span class="line">popf</span><br><span class="line">moveax, 1; disabled by this function</span><br><span class="line">ret</span><br><span class="line">disable_8:</span><br><span class="line">inal, INT_S_CTLMASK</span><br><span class="line">testal, ah</span><br><span class="line">jnzdis_already; already disabled?</span><br><span class="line">oral, ah</span><br><span class="line">outINT_S_CTLMASK, al; set bit at slave 8259</span><br><span class="line">popf</span><br><span class="line">moveax, 1; disabled by this function</span><br><span class="line">ret</span><br><span class="line">dis_already:</span><br><span class="line">popf</span><br><span class="line">xoreax, eax; already disabled</span><br><span class="line">ret</span><br></pre></td></tr></table></figure>關中斷后，在中斷处理表對应位置放上鍵盤的处理程序<br>第二條開启鍵盤中斷<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">enable_irq:</span><br><span class="line">movecx, [esp + 4]; irq</span><br><span class="line">pushf</span><br><span class="line">cli</span><br><span class="line">movah, ~1</span><br><span class="line">rolah, cl; ah = ~(1 &lt;&lt; (irq % 8))</span><br><span class="line">cmpcl, 8</span><br><span class="line">jaeenable_8; enable irq &gt;= 8 at the slave 8259</span><br><span class="line">enable_0:</span><br><span class="line">inal, INT_M_CTLMASK</span><br><span class="line">andal, ah</span><br><span class="line">outINT_M_CTLMASK, al; clear bit at master 8259</span><br><span class="line">popf</span><br><span class="line">ret</span><br><span class="line">enable_8:</span><br><span class="line">inal, INT_S_CTLMASK</span><br><span class="line">andal, ah</span><br><span class="line">outINT_S_CTLMASK, al; clear bit at slave 8259</span><br><span class="line">popf</span><br><span class="line">ret</span><br></pre></td></tr></table></figure></li></ol><h2 id="鍵盤處理程序讀數據"><a href="#鍵盤處理程序讀數據" class="headerlink" title="鍵盤處理程序讀數據"></a>鍵盤處理程序讀數據</h2><p>鍵盤上有鍵盤編碼器Intel 8048，主板上有鍵盤控制器Intel 8042。敲鍵盤產生的編碼叫掃描碼，分為Make Code和Break Code兩類，当8048檢測到一個鍵的動作，會把相應的掃描碼發给8042，8042經轉換后將其放置在輸入緩冲區，然后告訴8259A說:產生鍵盤中斷啦!然后等待处理。(PS.如果又按新的鍵，緩冲区沒清空，8042是不會在接收新的掃描碼的)<br>看一看8042的寄存器，因為它處於8048和系統中間，輸出和輸入是相对的，可以共用一個端口。就是說，一个<code>in al, 0x60</code>指令就能讀取掃描碼了。<br><img src="https://s2.loli.net/2022/11/23/6iVrCmosFH7gvyn.png#crop=0&crop=0&crop=1&crop=1&id=fzidS&originHeight=144&originWidth=450&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="></p><ol><li><p>寫一个讀取並打印的語句試試:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">keyboard_handler</span><span class="params">(<span class="type">int</span> irq)</span>&#123;</span><br><span class="line">    u8 scan_code = in_byte(KB_DATA);</span><br><span class="line">    disp_int(scan_code); <span class="comment">//disp是在kliba.asm里的打印方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果按下”a”和”9”鍵，將會出現:0x1E、0x9E、0xA、0x8A，看表可見对应的就是那兩字母的Make Code和Break Code。Break Code是Make Code與0x80進行或操作的結果。<br><img src="https://s2.loli.net/2022/11/23/YV3oQS4kJa7OEcq.png#crop=0&crop=0&crop=1&crop=1&id=sia2Y&originHeight=561&originWidth=564&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="><br><img src="https://s2.loli.net/2022/11/23/yOqB7vUxWnPJGrI.png#crop=0&crop=0&crop=1&crop=1&id=NYYRE&originHeight=787&originWidth=572&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="></p></li><li><p>Make Code似乎找不到什么規律，干脆寫成解析數組好了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">u32 keymap[NR_SCAN_CODES * MAP_COLS] = &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* scan-code!ShiftShiftE0 XX*/</span></span><br><span class="line"><span class="comment">/* ==================================================================== */</span></span><br><span class="line"><span class="comment">/* 0x00 - none*/</span><span class="number">0</span>,     <span class="number">0</span>,    <span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x01 - ESC*/</span>ESC,ESC,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x02 - &#x27;1&#x27;*/</span><span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x03 - &#x27;2&#x27;*/</span><span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;@&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x04 - &#x27;3&#x27;*/</span><span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x05 - &#x27;4&#x27;*/</span><span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;$&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x06 - &#x27;5&#x27;*/</span><span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;%&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x07 - &#x27;6&#x27;*/</span><span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;^&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x08 - &#x27;7&#x27;*/</span><span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x09 - &#x27;8&#x27;*/</span><span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;*&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x0A - &#x27;9&#x27;*/</span><span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;(&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x0B - &#x27;0&#x27;*/</span><span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x0C - &#x27;-&#x27;*/</span><span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;_&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x0D - &#x27;=&#x27;*/</span><span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;+&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x0E - BS*/</span>BACKSPACE,BACKSPACE,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x0F - TAB*/</span>TAB,TAB,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x10 - &#x27;q&#x27;*/</span><span class="string">&#x27;q&#x27;</span>,<span class="string">&#x27;Q&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x11 - &#x27;w&#x27;*/</span><span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;W&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x12 - &#x27;e&#x27;*/</span><span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x13 - &#x27;r&#x27;*/</span><span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;R&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x14 - &#x27;t&#x27;*/</span><span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;T&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x15 - &#x27;y&#x27;*/</span><span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x16 - &#x27;u&#x27;*/</span><span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;U&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x17 - &#x27;i&#x27;*/</span><span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;I&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x18 - &#x27;o&#x27;*/</span><span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;O&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x19 - &#x27;p&#x27;*/</span><span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;P&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x1A - &#x27;[&#x27;*/</span><span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;&#123;&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x1B - &#x27;]&#x27;*/</span><span class="string">&#x27;]&#x27;</span>,<span class="string">&#x27;&#125;&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x1C - CR/LF*/</span>ENTER,ENTER,PAD_ENTER,</span><br><span class="line"><span class="comment">/* 0x1D - l. Ctrl*/</span>CTRL_L,CTRL_L,CTRL_R,</span><br><span class="line"><span class="comment">/* 0x1E - &#x27;a&#x27;*/</span><span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x1F - &#x27;s&#x27;*/</span><span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;S&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x20 - &#x27;d&#x27;*/</span><span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x21 - &#x27;f&#x27;*/</span><span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x22 - &#x27;g&#x27;*/</span><span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;G&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x23 - &#x27;h&#x27;*/</span><span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;H&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x24 - &#x27;j&#x27;*/</span><span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;J&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x25 - &#x27;k&#x27;*/</span><span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;K&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x26 - &#x27;l&#x27;*/</span><span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;L&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x27 - &#x27;;&#x27;*/</span><span class="string">&#x27;;&#x27;</span>,<span class="string">&#x27;:&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x28 - &#x27;\&#x27;&#x27;*/</span><span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;&quot;&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x29 - &#x27;`&#x27;*/</span><span class="string">&#x27;`&#x27;</span>,<span class="string">&#x27;~&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x2A - l. SHIFT*/</span>SHIFT_L,SHIFT_L,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x2B - &#x27;\&#x27;*/</span><span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;|&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x2C - &#x27;z&#x27;*/</span><span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;Z&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x2D - &#x27;x&#x27;*/</span><span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;X&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x2E - &#x27;c&#x27;*/</span><span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x2F - &#x27;v&#x27;*/</span><span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;V&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x30 - &#x27;b&#x27;*/</span><span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x31 - &#x27;n&#x27;*/</span><span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x32 - &#x27;m&#x27;*/</span><span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;M&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x33 - &#x27;,&#x27;*/</span><span class="string">&#x27;,&#x27;</span>,<span class="string">&#x27;&lt;&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x34 - &#x27;.&#x27;*/</span><span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;&gt;&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x35 - &#x27;/&#x27;*/</span><span class="string">&#x27;/&#x27;</span>,<span class="string">&#x27;?&#x27;</span>,PAD_SLASH,</span><br><span class="line"><span class="comment">/* 0x36 - r. SHIFT*/</span>SHIFT_R,SHIFT_R,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x37 - &#x27;*&#x27;*/</span><span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27;*&#x27;</span>,    <span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x38 - ALT*/</span>ALT_L,ALT_L,  ALT_R,</span><br><span class="line"><span class="comment">/* 0x39 - &#x27; &#x27;*/</span><span class="string">&#x27; &#x27;</span>,<span class="string">&#x27; &#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x3A - CapsLock*/</span>CAPS_LOCK,CAPS_LOCK,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x3B - F1*/</span>F1,F1,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x3C - F2*/</span>F2,F2,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x3D - F3*/</span>F3,F3,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x3E - F4*/</span>F4,F4,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x3F - F5*/</span>F5,F5,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x40 - F6*/</span>F6,F6,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x41 - F7*/</span>F7,F7,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x42 - F8*/</span>F8,F8,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x43 - F9*/</span>F9,F9,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x44 - F10*/</span>F10,F10,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x45 - NumLock*/</span>NUM_LOCK,NUM_LOCK,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x46 - ScrLock*/</span>SCROLL_LOCK,SCROLL_LOCK,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x47 - Home*/</span>PAD_HOME,<span class="string">&#x27;7&#x27;</span>,HOME,</span><br><span class="line"><span class="comment">/* 0x48 - CurUp*/</span>PAD_UP,<span class="string">&#x27;8&#x27;</span>,UP,</span><br><span class="line"><span class="comment">/* 0x49 - PgUp*/</span>PAD_PAGEUP,<span class="string">&#x27;9&#x27;</span>,PAGEUP,</span><br><span class="line"><span class="comment">/* 0x4A - &#x27;-&#x27;*/</span>PAD_MINUS,<span class="string">&#x27;-&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x4B - Left*/</span>PAD_LEFT,<span class="string">&#x27;4&#x27;</span>,LEFT,</span><br><span class="line"><span class="comment">/* 0x4C - MID*/</span>PAD_MID,<span class="string">&#x27;5&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x4D - Right*/</span>PAD_RIGHT,<span class="string">&#x27;6&#x27;</span>,RIGHT,</span><br><span class="line"><span class="comment">/* 0x4E - &#x27;+&#x27;*/</span>PAD_PLUS,<span class="string">&#x27;+&#x27;</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x4F - End*/</span>PAD_END,<span class="string">&#x27;1&#x27;</span>,END,</span><br><span class="line"><span class="comment">/* 0x50 - Down*/</span>PAD_DOWN,<span class="string">&#x27;2&#x27;</span>,DOWN,</span><br><span class="line"><span class="comment">/* 0x51 - PgDown*/</span>PAD_PAGEDOWN,<span class="string">&#x27;3&#x27;</span>,PAGEDOWN,</span><br><span class="line"><span class="comment">/* 0x52 - Insert*/</span>PAD_INS,<span class="string">&#x27;0&#x27;</span>,INSERT,</span><br><span class="line"><span class="comment">/* 0x53 - Delete*/</span>PAD_DOT,<span class="string">&#x27;.&#x27;</span>,DELETE,</span><br><span class="line"><span class="comment">/* 0x54 - Enter*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x55 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x56 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x57 - F11*/</span>F11,F11,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x58 - F12*/</span>F12,F12,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x59 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x5A - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x5B - ???*/</span><span class="number">0</span>,<span class="number">0</span>,GUI_L,</span><br><span class="line"><span class="comment">/* 0x5C - ???*/</span><span class="number">0</span>,<span class="number">0</span>,GUI_R,</span><br><span class="line"><span class="comment">/* 0x5D - ???*/</span><span class="number">0</span>,<span class="number">0</span>,APPS,</span><br><span class="line"><span class="comment">/* 0x5E - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x5F - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x60 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x61 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x62 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x63 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x64 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x65 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x66 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x67 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x68 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x69 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x6A - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x6B - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x6C - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x6D - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x6E - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x6F - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x70 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x71 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x72 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x73 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x74 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x75 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x76 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x77 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x78 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x78 - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x7A - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x7B - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x7C - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x7D - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x7E - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="comment">/* 0x7F - ???*/</span><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  MAP_COLS為三，代表按鍵組合的三種情況，如果獲得掃描碼0x1F，就应該用keymap[0x1F<em>MAP_COLS]來表示，即s。如果獲得的掃描碼是0x2A0x1E，說明左shift和a鍵是一起按的，因此应該用keymap[0x1E</em>MAP_COLS+1]來表示这個結果，即A。<br>  然而，輸入緩冲区大小只有一個字節，按下Shift+A，实際就產生了四次中斷接收，这给程序實現帶來了困難，無法準備知道用戶做了什么，于是当接收到类似的值可以專門建個任務處理他們。</p></li><li><p>建立鍵盤輸入緩冲區，存掃描碼，如果到达末尾則把指針移到開頭:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">s_kb</span> &#123;</span></span><br><span class="line"><span class="type">char</span>*p_head;<span class="comment">/* 指向缓冲区中下一个空闲位置 */</span></span><br><span class="line"><span class="type">char</span>*p_tail;<span class="comment">/* 指向键盘任务应处理的字节 */</span></span><br><span class="line"><span class="type">int</span>count;<span class="comment">/* 缓冲区中共有多少字节 */</span></span><br><span class="line"><span class="type">char</span>buf[KB_IN_BYTES];<span class="comment">/* 缓冲区 */</span></span><br><span class="line">&#125;KB_INPUT;</span><br></pre></td></tr></table></figure><p>修改处理程序，掃描碼放入緩冲区:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">keyboard_handler</span><span class="params">(<span class="type">int</span> irq)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 scan_code = in_byte(KB_DATA);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (kb_in.count &lt; KB_IN_BYTES) &#123;</span><br><span class="line">*(kb_in.p_head) = scan_code;</span><br><span class="line">kb_in.p_head++;</span><br><span class="line"><span class="keyword">if</span> (kb_in.p_head == kb_in.buf + KB_IN_BYTES) &#123;<span class="comment">//看到尾沒</span></span><br><span class="line">kb_in.p_head = kb_in.buf;</span><br><span class="line">&#125;</span><br><span class="line">kb_in.count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改init_keyboard，使中斷發生時初始化緩冲区狀態、按鍵狀態:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">init_keyboard</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">kb_in.count = <span class="number">0</span>;</span><br><span class="line">kb_in.p_head = kb_in.p_tail = kb_in.buf;</span><br><span class="line"></span><br><span class="line">shift_l= shift_r = <span class="number">0</span>;</span><br><span class="line">alt_l= alt_r   = <span class="number">0</span>;</span><br><span class="line">ctrl_l= ctrl_r  = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">caps_lock   = <span class="number">0</span>;</span><br><span class="line">num_lock    = <span class="number">1</span>;</span><br><span class="line">scroll_lock = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">set_leds();</span><br><span class="line"></span><br><span class="line">        put_irq_handler(KEYBOARD_IRQ, keyboard_handler);<span class="comment">/*设定键盘中断处理程序*/</span></span><br><span class="line">        enable_irq(KEYBOARD_IRQ);                       <span class="comment">/*开键盘中断*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加终端處理任務，新建文件tty.c，開始只是不停調用keyboard.c中的keyboard_red()讀鍵盤碼。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">keyboard_read</span><span class="params">(TTY* p_tty)</span></span><br><span class="line">&#123;</span><br><span class="line">u8scan_code;</span><br><span class="line"><span class="type">char</span>output[<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span>make;<span class="comment">/* 1: make;  0: break. */</span></span><br><span class="line"></span><br><span class="line">u32key = <span class="number">0</span>;<span class="comment">/* 用一个整型来表示一个键。比如，如果 Home 被按下，</span></span><br><span class="line"><span class="comment"> * 则 key 值将为定义在 keyboard.h 中的 &#x27;HOME&#x27;。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">u32*keyrow;<span class="comment">/* 指向 keymap[] 的某一行 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(kb_in.count &gt; <span class="number">0</span>)&#123;</span><br><span class="line">code_with_E0 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">scan_code = get_byte_from_kbuf();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 下面开始解析扫描码 */</span></span><br><span class="line"><span class="keyword">if</span> (scan_code == <span class="number">0xE1</span>) &#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line">u8 pausebrk_scode[] = &#123;<span class="number">0xE1</span>, <span class="number">0x1D</span>, <span class="number">0x45</span>,</span><br><span class="line">       <span class="number">0xE1</span>, <span class="number">0x9D</span>, <span class="number">0xC5</span>&#125;;</span><br><span class="line"><span class="type">int</span> is_pausebreak = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;<span class="number">6</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span> (get_byte_from_kbuf() != pausebrk_scode[i]) &#123;</span><br><span class="line">is_pausebreak = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (is_pausebreak) &#123;</span><br><span class="line">key = PAUSEBREAK;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (scan_code == <span class="number">0xE0</span>) &#123;</span><br><span class="line">scan_code = get_byte_from_kbuf();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* PrintScreen 被按下 */</span></span><br><span class="line"><span class="keyword">if</span> (scan_code == <span class="number">0x2A</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (get_byte_from_kbuf() == <span class="number">0xE0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (get_byte_from_kbuf() == <span class="number">0x37</span>) &#123;</span><br><span class="line">key = PRINTSCREEN;</span><br><span class="line">make = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* PrintScreen 被释放 */</span></span><br><span class="line"><span class="keyword">if</span> (scan_code == <span class="number">0xB7</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (get_byte_from_kbuf() == <span class="number">0xE0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (get_byte_from_kbuf() == <span class="number">0xAA</span>) &#123;</span><br><span class="line">key = PRINTSCREEN;</span><br><span class="line">make = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 不是PrintScreen, 此时scan_code为0xE0紧跟的那个值. */</span></span><br><span class="line"><span class="keyword">if</span> (key == <span class="number">0</span>) &#123;</span><br><span class="line">code_with_E0 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((key != PAUSEBREAK) &amp;&amp; (key != PRINTSCREEN)) &#123;</span><br><span class="line"><span class="comment">/* 首先判断Make Code 还是 Break Code */</span></span><br><span class="line">make = (scan_code &amp; FLAG_BREAK ? <span class="number">0</span> : <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 先定位到 keymap 中的行 */</span></span><br><span class="line">keyrow = &amp;keymap[(scan_code &amp; <span class="number">0x7F</span>) * MAP_COLS];</span><br><span class="line"></span><br><span class="line">column = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> caps = shift_l || shift_r;</span><br><span class="line"><span class="keyword">if</span> (caps_lock) &#123;</span><br><span class="line"><span class="keyword">if</span> ((keyrow[<span class="number">0</span>] &gt;= <span class="string">&#x27;a&#x27;</span>) &amp;&amp; (keyrow[<span class="number">0</span>] &lt;= <span class="string">&#x27;z&#x27;</span>))&#123;</span><br><span class="line">caps = !caps;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (caps) &#123;</span><br><span class="line">column = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (code_with_E0) &#123;</span><br><span class="line">column = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">key = keyrow[column];</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(key) &#123;</span><br><span class="line"><span class="keyword">case</span> SHIFT_L:</span><br><span class="line">shift_l = make;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> SHIFT_R:</span><br><span class="line">shift_r = make;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CTRL_L:</span><br><span class="line">ctrl_l = make;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CTRL_R:</span><br><span class="line">ctrl_r = make;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> ALT_L:</span><br><span class="line">alt_l = make;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> ALT_R:</span><br><span class="line">alt_l = make;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CAPS_LOCK:</span><br><span class="line"><span class="keyword">if</span> (make) &#123;</span><br><span class="line">caps_lock   = !caps_lock;</span><br><span class="line">set_leds();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> NUM_LOCK:</span><br><span class="line"><span class="keyword">if</span> (make) &#123;</span><br><span class="line">num_lock    = !num_lock;</span><br><span class="line">set_leds();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> SCROLL_LOCK:</span><br><span class="line"><span class="keyword">if</span> (make) &#123;</span><br><span class="line">scroll_lock = !scroll_lock;</span><br><span class="line">set_leds();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (make) &#123; <span class="comment">/* 忽略 Break Code */</span></span><br><span class="line"><span class="type">int</span> pad = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 首先处理小键盘 */</span></span><br><span class="line"><span class="keyword">if</span> ((key &gt;= PAD_SLASH) &amp;&amp; (key &lt;= PAD_9)) &#123;</span><br><span class="line">pad = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">switch</span>(key) &#123;</span><br><span class="line"><span class="keyword">case</span> PAD_SLASH:</span><br><span class="line">key = <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_STAR:</span><br><span class="line">key = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_MINUS:</span><br><span class="line">key = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_PLUS:</span><br><span class="line">key = <span class="string">&#x27;+&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_ENTER:</span><br><span class="line">key = ENTER;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">if</span> (num_lock &amp;&amp;</span><br><span class="line">    (key &gt;= PAD_0) &amp;&amp;</span><br><span class="line">    (key &lt;= PAD_9)) &#123;</span><br><span class="line">key = key - PAD_0 + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (num_lock &amp;&amp;</span><br><span class="line"> (key == PAD_DOT)) &#123;</span><br><span class="line">key = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(key) &#123;</span><br><span class="line"><span class="keyword">case</span> PAD_HOME:</span><br><span class="line">key = HOME;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_END:</span><br><span class="line">key = END;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_PAGEUP:</span><br><span class="line">key = PAGEUP;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_PAGEDOWN:</span><br><span class="line">key = PAGEDOWN;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_INS:</span><br><span class="line">key = INSERT;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_UP:</span><br><span class="line">key = UP;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_DOWN:</span><br><span class="line">key = DOWN;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_LEFT:</span><br><span class="line">key = LEFT;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_RIGHT:</span><br><span class="line">key = RIGHT;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> PAD_DOT:</span><br><span class="line">key = DELETE;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">key |= shift_l? FLAG_SHIFT_L: <span class="number">0</span>;</span><br><span class="line">key |= shift_r? FLAG_SHIFT_R: <span class="number">0</span>;</span><br><span class="line">key |= ctrl_l? FLAG_CTRL_L: <span class="number">0</span>;</span><br><span class="line">key |= ctrl_r? FLAG_CTRL_R: <span class="number">0</span>;</span><br><span class="line">key |= alt_l? FLAG_ALT_L: <span class="number">0</span>;</span><br><span class="line">key |= alt_r? FLAG_ALT_R: <span class="number">0</span>;</span><br><span class="line">key |= pad      ? FLAG_PAD      : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">in_process(p_tty, key);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">PRIVATE u8 <span class="title function_">get_byte_from_kbuf</span><span class="params">()</span>       <span class="comment">/* 从键盘缓冲区中读取下一个字节 */</span></span><br><span class="line">&#123;</span><br><span class="line">        u8 scan_code;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (kb_in.count &lt;= <span class="number">0</span>) &#123;&#125;   <span class="comment">/* 等待下一个字节到来 */</span></span><br><span class="line"></span><br><span class="line">        disable_int();</span><br><span class="line">        scan_code = *(kb_in.p_tail);</span><br><span class="line">        kb_in.p_tail++;</span><br><span class="line">        <span class="keyword">if</span> (kb_in.p_tail == kb_in.buf + KB_IN_BYTES) &#123;</span><br><span class="line">                kb_in.p_tail = kb_in.buf;</span><br><span class="line">        &#125;</span><br><span class="line">        kb_in.count--;</span><br><span class="line">        enable_int();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> scan_code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函數首先判斷kb_in.count是否為0，不為零就開始讀，讀時關中斷，讀完才打開，然后解析掃描碼，要判斷的東西很多，最后要能輸出所有可輸出字符，按shift能輸出大寫。</p></li></ol><h2 id="顯示器輸出"><a href="#顯示器輸出" class="headerlink" title="顯示器輸出"></a>顯示器輸出</h2><p>  之前一直都是調用系統的中斷來輸出字符，現在要自食其力了。<br>  我們來討論80<em>25文本模式，在此模式下，顥存大小為32KB，佔用范圍為0xB8000~0xBFFFF。每兩個字符代表一個字符，低字節表示ASCII碼，高字節表示字符属性(顏色，分前景和背景兩部分)<br><img src="https://s2.loli.net/2022/11/23/euGBSsf579TowCP.png#crop=0&crop=0&crop=1&crop=1&id=czqGi&originHeight=520&originWidth=436&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="><br>所以一個屏幕映射到顯存中所佔的空間為80</em>25*2&#x3D;4000Byte，32MB顯存可以放下8個屏幕。通过端口操作可以对顯示器寄存器進行讀寫操作。<br><img src="https://s2.loli.net/2022/11/23/K5ThtpVxgIiQ8Cz.png#crop=0&crop=0&crop=1&crop=1&id=na9zc&originHeight=528&originWidth=587&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="></p><ol><li><p>新建console.c以用來寫顯示相關程序，首圥初始化一個屏幕，設置光標等信息:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">init_screen</span><span class="params">(TTY* p_tty)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> nr_tty = p_tty - tty_table;</span><br><span class="line">p_tty-&gt;p_console = console_table + nr_tty;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> v_mem_size = V_MEM_SIZE &gt;&gt; <span class="number">1</span>;<span class="comment">/* 显存总大小 (in WORD) */</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> con_v_mem_size                   = v_mem_size / NR_CONSOLES;</span><br><span class="line">p_tty-&gt;p_console-&gt;original_addr      = nr_tty * con_v_mem_size;</span><br><span class="line">p_tty-&gt;p_console-&gt;v_mem_limit        = con_v_mem_size;</span><br><span class="line">p_tty-&gt;p_console-&gt;current_start_addr = p_tty-&gt;p_console-&gt;original_addr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 默认光标位置在最开始处 */</span></span><br><span class="line">p_tty-&gt;p_console-&gt;cursor = p_tty-&gt;p_console-&gt;original_addr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (nr_tty == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">/* 第一个控制台沿用原来的光标位置 */</span></span><br><span class="line">p_tty-&gt;p_console-&gt;cursor = disp_pos / <span class="number">2</span>;</span><br><span class="line">disp_pos = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">out_char(p_tty-&gt;p_console, nr_tty + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">out_char(p_tty-&gt;p_console, <span class="string">&#x27;#&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">set_cursor(p_tty-&gt;p_console-&gt;cursor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>我們可以通过設置Start Address High Register和Start Address Low Register來重新設置顯示開始地址，從而實現滾屏功能。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">in_process</span><span class="params">(TTY* p_tty, u32 key)</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="type">char</span> output[<span class="number">2</span>] = &#123;<span class="string">&#x27;\0&#x27;</span>, <span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!(key &amp; FLAG_EXT)) &#123;</span><br><span class="line">put_key(p_tty, key);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> raw_code = key &amp; MASK_RAW;</span><br><span class="line">                <span class="keyword">switch</span>(raw_code) &#123;</span><br><span class="line">                <span class="keyword">case</span> ENTER:</span><br><span class="line">put_key(p_tty, <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BACKSPACE:</span><br><span class="line">put_key(p_tty, <span class="string">&#x27;\b&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> UP:</span><br><span class="line">                        <span class="keyword">if</span> ((key &amp; FLAG_SHIFT_L) || (key &amp; FLAG_SHIFT_R)) &#123;</span><br><span class="line">scroll_screen(p_tty-&gt;p_console, SCR_DN);</span><br><span class="line">                        &#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> DOWN:</span><br><span class="line"><span class="keyword">if</span> ((key &amp; FLAG_SHIFT_L) || (key &amp; FLAG_SHIFT_R)) &#123;</span><br><span class="line">scroll_screen(p_tty-&gt;p_console, SCR_UP);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> F1:</span><br><span class="line"><span class="keyword">case</span> F2:</span><br><span class="line"><span class="keyword">case</span> F3:</span><br><span class="line"><span class="keyword">case</span> F4:</span><br><span class="line"><span class="keyword">case</span> F5:</span><br><span class="line"><span class="keyword">case</span> F6:</span><br><span class="line"><span class="keyword">case</span> F7:</span><br><span class="line"><span class="keyword">case</span> F8:</span><br><span class="line"><span class="keyword">case</span> F9:</span><br><span class="line"><span class="keyword">case</span> F10:</span><br><span class="line"><span class="keyword">case</span> F11:</span><br><span class="line"><span class="keyword">case</span> F12:</span><br><span class="line"><span class="comment">/* Alt + F1~F12 */</span></span><br><span class="line"><span class="keyword">if</span> ((key &amp; FLAG_ALT_L) || (key &amp; FLAG_ALT_R)) &#123;</span><br><span class="line">select_console(raw_code - F1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">scroll_screen</span><span class="params">(CONSOLE* p_con, <span class="type">int</span> direction)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (direction == SCR_UP) &#123;</span><br><span class="line"><span class="keyword">if</span> (p_con-&gt;current_start_addr &gt; p_con-&gt;original_addr) &#123;</span><br><span class="line">p_con-&gt;current_start_addr -= SCREEN_WIDTH;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (direction == SCR_DN) &#123;</span><br><span class="line"><span class="keyword">if</span> (p_con-&gt;current_start_addr + SCREEN_SIZE &lt;</span><br><span class="line">    p_con-&gt;original_addr + p_con-&gt;v_mem_limit) &#123;</span><br><span class="line">p_con-&gt;current_start_addr += SCREEN_WIDTH;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">set_video_start_addr(p_con-&gt;current_start_addr);</span><br><span class="line">set_cursor(p_con-&gt;cursor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>現在可以通過Shift+上下箭頭實現滾屏了<br><img src="https://s2.loli.net/2022/11/23/fALju7Qxkh9a521.png#crop=0&crop=0&crop=1&crop=1&id=AMeuy&originHeight=491&originWidth=721&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="><br>  單個終端的輸出實現後，多個終端不過就是多了一個選擇的步驟而已，只有当某個TTY对應的控制台是當前控制台，它才可以讀取鍵盤緩冲區。<br><img src="https://s2.loli.net/2022/11/23/cwvQ3sSaKeYdoqJ.png#crop=0&crop=0&crop=1&crop=1&id=eh2CV&originHeight=560&originWidth=524&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="></p></li></ol><h2 id="完善鍵盤功能"><a href="#完善鍵盤功能" class="headerlink" title="完善鍵盤功能"></a>完善鍵盤功能</h2><h3 id="1-回車，退格等鍵的处理"><a href="#1-回車，退格等鍵的处理" class="headerlink" title="1 回車，退格等鍵的处理"></a>1 回車，退格等鍵的处理</h3><p>  首先在tty.c终端in_process里識別到对应的按鍵，用0x01FF和特殊按鍵key相與得出raw_code，然后控制台作对应的處理。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(raw_code) &#123;</span><br><span class="line">      <span class="keyword">case</span> ENTER:</span><br><span class="line">          <span class="keyword">if</span>(mode == <span class="number">0</span>)&#123;</span><br><span class="line">                put_key(p_tty, <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                mode = <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> BACKSPACE:</span><br><span class="line">          put_key(p_tty, <span class="string">&#x27;\b&#x27;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> UP:</span><br><span class="line">          <span class="keyword">if</span> ((key &amp; FLAG_SHIFT_L) || (key &amp; FLAG_SHIFT_R)) &#123;</span><br><span class="line">                scroll_screen(p_tty-&gt;p_console, SCR_DN);&#125;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> DOWN:</span><br><span class="line">          <span class="keyword">if</span> ((key &amp; FLAG_SHIFT_L) || (key &amp; FLAG_SHIFT_R)) &#123;</span><br><span class="line">                scroll_screen(p_tty-&gt;p_console, SCR_UP);</span><br><span class="line">            &#125;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> TAB:</span><br><span class="line">          put_key(p_tty,<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">u8* p_vmem = (u8*)(V_MEM_BASE + p_con-&gt;cursor * <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(ch) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;\n&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (p_con-&gt;cursor &lt; p_con-&gt;original_addr +</span><br><span class="line">            p_con-&gt;v_mem_limit - SCREEN_WIDTH) &#123;</span><br><span class="line">            push_STA(p_con,p_con-&gt;cursor);<span class="comment">//輸出的話，先存儲光標位置</span></span><br><span class="line">            p_con-&gt;cursor = p_con-&gt;original_addr + SCREEN_WIDTH * </span><br><span class="line">                ((p_con-&gt;cursor - p_con-&gt;original_addr) /</span><br><span class="line">                 SCREEN_WIDTH + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//刪除的話pop出之前光標位置，將現在的光標和之前光標的位置間的內容清空</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;\b&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> (p_con-&gt;cursor &gt; p_con-&gt;original_addr) &#123;</span><br><span class="line">            <span class="type">int</span> tmp =p_con-&gt;cursor;</span><br><span class="line"></span><br><span class="line">            p_con-&gt;cursor = pop_STA(p_con);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; tmp - p_con-&gt;cursor; i++) &#123;</span><br><span class="line">                *(p_vmem - <span class="number">2</span> - <span class="number">2</span> * i) = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                *(p_vmem - <span class="number">1</span> - <span class="number">2</span> * i) = DEFAULT_CHAR_COLOR;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//tab:要判斷是否會越界，把位置進棧，移動光標</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;\t&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span>(p_con-&gt;cursor &lt; p_con-&gt;original_addr + p_con-&gt;v_mem_limit-TAB_WIDTH)&#123;</span><br><span class="line">            push_STA(p_con,p_con-&gt;cursor);</span><br><span class="line">            p_con-&gt;cursor += TAB_WIDTH;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">if</span> (p_con-&gt;cursor &lt;</span><br><span class="line">            p_con-&gt;original_addr + p_con-&gt;v_mem_limit - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="comment">//普通輸入</span></span><br><span class="line">            push_STA(p_con, p_con-&gt;cursor);</span><br><span class="line">            *p_vmem++ = ch;</span><br><span class="line">            <span class="keyword">if</span>(mode == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(*p_vmem == <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">                    *p_vmem++ = DEFAULT_CHAR_COLOR;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    *p_vmem++ = DEFAULT_CHAR_COLOR;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(*p_vmem == <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">                    *p_vmem++ = DEFAULT_CHAR_COLOR;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    *p_vmem++ = RED_CHAR_COLOR;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            p_con-&gt;cursor++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先顯存定位到當前控制台顯存基地址+(光標位置*2 Byte)的地方，</p><ul><li>如果不是特殊字符就正常輸出，光標位置沒有超出最大顯存位置的話，就先把光標位置入棧，在當前顯存位置輸出該字符，如果是普通模式，下一字節顏色控制就設為默認，否則設為紅色。</li><li>如果是’\n’就是換行，光標位置就要少于最大位置減去屏幕寬度才行，一样先存儲位置，再把光標移到下一行開頭</li><li>如果是’\t’，如果沒越界，就位置入棧，光標往后移四格</li><li>如果是’\b’退格，前一個是普通輸入的話，回到前一格就好，但前一個是換行的話就要回到上一行的位置，是TAB也要刪掉連續的四格，所以入棧的光標位置就派上了用場。如果光標位置大于開始的位置，就先保存当前位置，把光標位置設為出棧的那個位置，然后把兩個位置中間的數據全設為空和默認顏色</li></ul><h3 id="2-隔一段時間清空屏幕"><a href="#2-隔一段時間清空屏幕" class="headerlink" title="2 隔一段時間清空屏幕"></a>2 隔一段時間清空屏幕</h3><ol><li><p>可以用時鐘中斷來做，但事先要增加一個循环清空屏幕的任務。在proc.h里新增並定義这個任務:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Number of tasks &amp; procs */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NR_TASKS2 <span class="comment">//增加一個任務</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NR_PROCS3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* stacks of tasks */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STACK_SIZE_TTY0x8000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STACK_SIZE_FRESHER  0x8000 <span class="comment">//任務名和栈大小</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STACK_SIZE_TESTA0x8000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STACK_SIZE_TESTB0x8000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STACK_SIZE_TESTC0x8000</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STACK_SIZE_TOTAL(STACK_SIZE_TTY + \</span></span><br><span class="line"><span class="meta">STACK_SIZE_FRESHER + \ <span class="comment">//加入棧</span></span></span><br><span class="line">STACK_SIZE_TESTA + \</span><br><span class="line">STACK_SIZE_TESTB + \</span><br><span class="line">STACK_SIZE_TESTC)</span><br></pre></td></tr></table></figure><p>在global.c里把任務加進任務列表</p></li><li><p>tty.c里寫这個任務，當開始時就設一個20秒的時鐘，發生中斷后就刷新所有控制台。井且把鼠標定位到開頭。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始代所有屏幕</span></span><br><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">taskFresher</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">milli_delay(<span class="number">200000</span>);</span><br><span class="line">TTY* p_tty; <span class="comment">//tty指針;</span></span><br><span class="line"><span class="keyword">for</span>(p_tty = TTY_FIRST; p_tty &lt; TTY_END; p_tty++)&#123;</span><br><span class="line">refresh(p_tty-&gt;p_console);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">refresh</span><span class="params">(CONSOLE* p_con)</span>&#123;</span><br><span class="line">u8* p_vmem = (u8*)(V_MEM_BASE);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = p_con-&gt;original_addr;i&lt;p_con-&gt;cursor;i++)&#123;</span><br><span class="line">*p_vmem++= <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">*p_vmem++ = DEFAULT_CHAR_COLOR;</span><br><span class="line">&#125;</span><br><span class="line">p_con-&gt;cursor = p_con-&gt;current_start_addr = p_con-&gt;original_addr;</span><br><span class="line">flush(p_con);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同時也可以改一下原本的初始化控制台的函數，使其初始化最后再清空一下屏幕</p></li><li><p>最后在global.c里的任務表里添加上这個任務，然后每二十秒就會自動清空屏幕辣!</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC TASK task_table[NR_TASKS] = &#123;</span><br><span class="line">    &#123;task_tty, STACK_SIZE_TTY, <span class="string">&quot;tty&quot;</span>&#125;,</span><br><span class="line">    &#123;taskFresher, STACK_SIZE_FRESHER, <span class="string">&quot;fresher&quot;</span>&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-搜索模式"><a href="#3-搜索模式" class="headerlink" title="3 搜索模式"></a>3 搜索模式</h3><p>  目標是按下ESC進入搜索模式，停止清屏，輸入红色的關鍵字，按下Enter進行搜索，封鎖除了Enter外的鍵，搜到的字全標红，再按一下ESC退去搜索模式並清空關鍵字和標红。</p><h4 id="1-新增模式"><a href="#1-新增模式" class="headerlink" title="1 新增模式"></a>1 新增模式</h4><p>  在global.c里寫個变量<code>PUBLIC int mode;</code>用來表示当前模式。<br>在console.h里新增变量記錄按下esc時光標的位置，方便退出時回去。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">s_console</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>current_start_addr;<span class="comment">/* 当前显示到了什么位置  */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>original_addr;<span class="comment">/* 当前控制台对应显存位置 */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>v_mem_limit;<span class="comment">/* 当前控制台占的显存大小 */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>cursor;<span class="comment">/* 当前光标位置 */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span>    start_search_cursor; <span class="comment">//按下esc時光標的位置</span></span><br><span class="line">STA pos_stk; <span class="comment">//棧</span></span><br><span class="line">&#125;CONSOLE;</span><br></pre></td></tr></table></figure><h4 id="2-模式切換"><a href="#2-模式切換" class="headerlink" title="2 模式切換"></a>2 模式切換</h4><p>  在tty.c判斷特殊按鍵里加上ESC</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> ESC:</span><br><span class="line"><span class="keyword">if</span>(mode == <span class="number">0</span>)&#123;</span><br><span class="line">        mode = <span class="number">1</span>;</span><br><span class="line">        p_tty-&gt;p_console-&gt;start_search_cursor = p_tty-&gt;p_console-&gt;cursor;</span><br><span class="line">        p_tty-&gt;p_console-&gt;pos_stk.start_search_cursor = p_tty-&gt;p_console-&gt;pos_stk.ptr;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        mode = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>開头也添上當mode&#x3D;2就只有ESC退出可用，ENTER鍵增加當模式非0進行搜索的功能</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (mode == <span class="number">2</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>((key &amp; MASK_RAW) == ESC)&#123;</span><br><span class="line">        mode = <span class="number">0</span>;<span class="comment">//查找模式按回車后只有ESC可用，按下后恢复正常模式</span></span><br><span class="line">        exitSearch(p_tty-&gt;p_console);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">..................................</span><br><span class="line"><span class="keyword">case</span> ENTER:</span><br><span class="line"><span class="keyword">if</span>(mode == <span class="number">0</span>)&#123;</span><br><span class="line">        put_key(p_tty, <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        searchWord(p_tty-&gt;p_console);</span><br><span class="line">        mode = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>計時刷新屏幕那里也加上一個判斷mode&#x3D;0才刷新的條件，console.c里輸出字符時若mode為2則輸出红色</p><h4 id="3-搜索"><a href="#3-搜索" class="headerlink" title="3 搜索"></a>3 搜索</h4><p>  獲取搜索關鍵字的長度，遍历控制台每個字符，給當前字符指定開始和結束指針，每匹配上一個字符，結束指針就往后移，全部匹配就代表搜索到了，標红。不匹配就結束，從下一個字符繼續匹配，直到找到所有匹配的字符串并標红</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">searchWord</span><span class="params">(CONSOLE *p_con)</span>&#123;</span><br><span class="line"><span class="type">int</span> wordLen = p_con-&gt;cursor * <span class="number">2</span> - p_con-&gt;start_search_cursor *<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">0</span>; i &lt; p_con-&gt;start_search_cursor * <span class="number">2</span>; i += <span class="number">2</span>) &#123; <span class="comment">//从头到尾一個個字找</span></span><br><span class="line"><span class="type">int</span> begin = i;</span><br><span class="line"><span class="type">int</span> end = i;</span><br><span class="line"><span class="type">int</span> found = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j&lt; wordLen ; j += <span class="number">2</span>)&#123;</span><br><span class="line"><span class="type">char</span> c = *((u8 *) (V_MEM_BASE + end));</span><br><span class="line"><span class="type">int</span> place = j + p_con-&gt;start_search_cursor * <span class="number">2</span>;</span><br><span class="line"><span class="type">char</span> target = *((u8 *)(V_MEM_BASE + place));</span><br><span class="line"><span class="keyword">if</span>( c == target)&#123;</span><br><span class="line">end += <span class="number">2</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">found = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(found == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> m = begin; m &lt; end; m += <span class="number">2</span>)&#123;</span><br><span class="line">*(u8 *) (V_MEM_BASE + m + <span class="number">1</span>) = RED_CHAR_COLOR;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>退出搜索模式則是把搜索關鍵詞清空，標红恢复，並把光標移動到搜索前的位置</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">exitSearch</span><span class="params">(CONSOLE *p_con)</span>&#123;</span><br><span class="line">u8 * p_vmem = (u8 *)(V_MEM_BASE + p_con-&gt;cursor * <span class="number">2</span>);</span><br><span class="line"><span class="type">int</span> len = p_con-&gt;cursor - p_con-&gt;start_search_cursor;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len ; i ++)&#123;</span><br><span class="line">*(p_vmem - <span class="number">2</span> - <span class="number">2</span> * i) = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">*(p_vmem - <span class="number">1</span> - <span class="number">2</span> * i) = DEFAULT_CHAR_COLOR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">0</span>; i &lt; p_con-&gt;start_search_cursor* <span class="number">2</span>; i += <span class="number">2</span>)&#123;</span><br><span class="line">*(u8 *)(V_MEM_BASE + i + <span class="number">1</span>) = DEFAULT_CHAR_COLOR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p_con-&gt;cursor = p_con-&gt;start_search_cursor;</span><br><span class="line">p_con-&gt;pos_stk.ptr = p_con-&gt;pos_stk.start_search_cursor;</span><br><span class="line">flush(p_con);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-ctrl-z撤銷"><a href="#4-ctrl-z撤銷" class="headerlink" title="4 ctrl+z撤銷"></a>4 ctrl+z撤銷</h3><p>  咋一想这個功能似乎很麻煩，要記錄下每一次的輸入操作，並且一步步地反向操作回去，工作量好像很大。但其實我們每一步操作其實都是個字符，完全可以建一個操作的棧，但是每次操作時錄入的是該操作对应的逆操作，然后每次按ctrl+z就出桟一個字符並當成正能輸入out_put出去，做相应的处理。</p><h4 id="1-識別ctrl-z操作"><a href="#1-識別ctrl-z操作" class="headerlink" title="1 識別ctrl+z操作"></a>1 識別ctrl+z操作</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">     <span class="keyword">if</span> (!(key &amp; FLAG_EXT)) &#123;</span><br><span class="line"><span class="keyword">if</span>((key &amp; FLAG_CTRL_L) ||(key &amp; FLAG_CTRL_R))&#123;</span><br><span class="line">output[<span class="number">0</span>] = key;</span><br><span class="line"><span class="keyword">if</span> (output[<span class="number">0</span>] == <span class="string">&#x27;z&#x27;</span> || output[<span class="number">0</span>] == <span class="string">&#x27;Z&#x27;</span>)&#123;</span><br><span class="line">rollback(p_tty-&gt;p_console);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">put_key(p_tty, key);</span><br><span class="line">&#125;</span><br><span class="line">     &#125;<span class="keyword">else</span>&#123;</span><br></pre></td></tr></table></figure><h4 id="2-建立操作棧，此操作不是撤銷操作的話才入棧"><a href="#2-建立操作棧，此操作不是撤銷操作的話才入棧" class="headerlink" title="2 建立操作棧，此操作不是撤銷操作的話才入棧"></a>2 建立操作棧，此操作不是撤銷操作的話才入棧</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">PRIVATE <span class="type">int</span> optionsTop;</span><br><span class="line">PRIVATE <span class="type">char</span> options[SCREEN_SIZE];</span><br><span class="line">...............................................</span><br><span class="line"><span class="keyword">if</span>(!p_con-&gt;rolling)&#123;</span><br><span class="line">    options[++optionsTop] = <span class="string">&#x27;\b&#x27;</span>;<span class="comment">//換行的話，对应逆操作是刪除</span></span><br><span class="line">&#125;</span><br><span class="line">................................................</span><br><span class="line">        <span class="type">char</span> c; <span class="comment">//被退格的字符</span></span><br><span class="line"><span class="keyword">if</span>(p_con-&gt;cursor - tmp == <span class="number">4</span>)&#123;</span><br><span class="line">    c = <span class="string">&#x27;\t&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(p_con-&gt;cursor/SCREEN_WIDTH - tmp /SCREEN_WIDTH == <span class="number">1</span>)&#123;</span><br><span class="line">    c = <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    c = *(p_vmem<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!p_con-&gt;rolling)&#123;</span><br><span class="line">    options[++optionsTop] = c; <span class="comment">//退格的話，如果前一個鼠標位置和当前位</span></span><br><span class="line">    <span class="comment">//置差四的話被退格就是&quot;\t&quot;，差一行就是&quot;\n&quot;，其余的就是顯存位置的該字符</span></span><br><span class="line">&#125;</span><br><span class="line">................................................</span><br><span class="line"><span class="keyword">if</span>(!p_con-&gt;rolling)&#123;</span><br><span class="line">    options[++optionsTop] = <span class="string">&#x27;\b&#x27;</span>; <span class="comment">//&quot;\t&quot;和普通字符的逆操作都是&quot;\b&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-撤銷操作"><a href="#3-撤銷操作" class="headerlink" title="3 撤銷操作"></a>3 撤銷操作</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PUBLIC <span class="type">void</span> <span class="title function_">rollback</span><span class="params">(CONSOLE* p_con)</span> &#123;</span><br><span class="line">p_con-&gt;rolling = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(optionsTop &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">out_char(p_con, options[optionsTop--]);</span><br><span class="line">&#125;</span><br><span class="line">p_con-&gt;rolling = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-一些問題"><a href="#5-一些問題" class="headerlink" title="5 一些問題"></a>5 一些問題</h3><h4 id="1-解釋中斷向量"><a href="#1-解釋中斷向量" class="headerlink" title="1 解釋中斷向量"></a>1 解釋中斷向量</h4><p>  中斷向量就是中斷服務程序的首地址，包含偏移地址IP和段地址CS，占四個字節。</p><h4 id="2-解释中断类型码"><a href="#2-解释中断类型码" class="headerlink" title="2 解释中断类型码"></a>2 解释中断类型码</h4><p>  中断类型码为8位二进制数。是中斷服務程序的編號，所有的中断服务<a href="https://baike.baidu.com/item/%E5%AD%90%E7%A8%8B%E5%BA%8F?fromModule=lemma_inlink">程序</a>入口地址放在<a href="https://baike.baidu.com/item/%E4%B8%AD%E6%96%AD%E5%90%91%E9%87%8F%E8%A1%A8?fromModule=lemma_inlink">中断向量表</a>中，由中断类型码×4，就是該程序入口地址在中断向量表的位置。</p><h4 id="3-解釋中斷向量表"><a href="#3-解釋中斷向量表" class="headerlink" title="3 解釋中斷向量表"></a>3 解釋中斷向量表</h4><p>  存放所有中斷向量的地址空間(8086是在低1KB的空間)，</p><h4 id="4-實模式下中斷程序地址如何得到"><a href="#4-實模式下中斷程序地址如何得到" class="headerlink" title="4 實模式下中斷程序地址如何得到?"></a>4 實模式下中斷程序地址如何得到?</h4><p>  根據中斷類型碼n，從中斷向量表中取得中斷程序地址，段地址存入CS，偏移量存入IP，使CPU轉入中斷處理程序運行。</p><h4 id="5-保護模式下中斷程序地址如何得到"><a href="#5-保護模式下中斷程序地址如何得到" class="headerlink" title="5 保護模式下中斷程序地址如何得到?"></a>5 保護模式下中斷程序地址如何得到?</h4><p>  以中断描述符表寄存器(IDTR)指定中斷描述符表的基地址為起始地址，用調用號N*8算出偏移量，即為N號中斷門描述符的首地址，根據中斷門中的選擇子和偏移量得到中斷處理程序入口。</p><h4 id="6-中斷向量的地址如何得到"><a href="#6-中斷向量的地址如何得到" class="headerlink" title="6 中斷向量的地址如何得到?"></a>6 中斷向量的地址如何得到?</h4><p>  調用號N*4。</p><h4 id="7-實模式下如何根據中斷向量的地址得到中斷程序地址"><a href="#7-實模式下如何根據中斷向量的地址得到中斷程序地址" class="headerlink" title="7 實模式下如何根據中斷向量的地址得到中斷程序地址?"></a>7 實模式下如何根據中斷向量的地址得到中斷程序地址?</h4><p>  段地址存入CS，偏移量存入IP。</p><h4 id="8-解釋中斷描述符"><a href="#8-解釋中斷描述符" class="headerlink" title="8 解釋中斷描述符"></a>8 解釋中斷描述符</h4><p>  IDT，除了含有中斷处理程序地址信息外，還包括許多属性和類型位，每個中斷描述符占用連續的8個字節。<br><img src="https://s2.loli.net/2022/11/29/wRYhx5OFLfUueKZ.png#crop=0&crop=0&crop=1&crop=1&id=Iqvwz&originHeight=251&originWidth=703&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="></p><h4 id="9-保護模式下中斷描述符表如何得到"><a href="#9-保護模式下中斷描述符表如何得到" class="headerlink" title="9 保護模式下中斷描述符表如何得到?"></a>9 保護模式下中斷描述符表如何得到?</h4><p>  由IDTR指定中斷描述符表的基地址</p><h4 id="10-保護模式下中斷門如何得到"><a href="#10-保護模式下中斷門如何得到" class="headerlink" title="10 保護模式下中斷門如何得到?"></a>10 保護模式下中斷門如何得到?</h4><p>  由IDTR指定中斷描述符表的基地址，用調用號N*8算出偏移量，即為N號中斷門的首地址。</p><h4 id="11-保護模式下如何根據中斷門得到中斷处理程序地址"><a href="#11-保護模式下如何根據中斷門得到中斷处理程序地址" class="headerlink" title="11 保護模式下如何根據中斷門得到中斷处理程序地址?"></a>11 保護模式下如何根據中斷門得到中斷处理程序地址?</h4><p>  从中斷門中獲得中斷处理程序代碼段的选择子和偏移量，</p><ol><li>如果是GDT方式:</li></ol><ul><li>则从GDTR获取GDT首地址，用段选择子中的13位做偏移，拿到</li></ul><p>GDT中的段描述符</p><ul><li>用描述符中的段首地址加上偏移量找到中斷處理程序入口的物理地址。寻址结束。</li></ul><ol start="2"><li>如果是LDT方式:</li></ol><ul><li>从GDTR获取GDT首地址，用LDTR中的偏移量做偏移，拿到GDT中的描述符1</li><li>从描述符1中获取LDT首地址，用中斷門中段选择子中的13位做偏移，拿到LDT中的描述符2</li><li>用描述符2中的段首地址加上中斷門中的偏移量找到中斷處理程序入口，寻址结束。</li></ul><h4 id="12-中斷的分类，舉例不同類型的中斷"><a href="#12-中斷的分类，舉例不同類型的中斷" class="headerlink" title="12 中斷的分类，舉例不同類型的中斷?"></a>12 中斷的分类，舉例不同類型的中斷?</h4><p>  从中斷可分為內部中斷和外部中斷，內部中斷的类型有軟中斷(程序中執行的中斷命令，如int)和異常中斷(計算机硬件異常或故障引起)，外部中斷有I&#x2F;O中斷(外部設備請求引起)和人工干预的中斷(手動結束進程)，分為可屏蔽和不可屏蔽中斷(時鐘中斷不可屏蔽。<br><img src="https://s2.loli.net/2022/11/29/CM1iVXHKg5Rrh2P.png#crop=0&crop=0&crop=1&crop=1&id=ZAaLj&originHeight=348&originWidth=858&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="></p><h4 id="13-中斷與異常的区別"><a href="#13-中斷與異常的区別" class="headerlink" title="13 中斷與異常的区別?"></a>13 中斷與異常的区別?</h4><p>  中斷指由CPU以外的事件引起的中斷(如I&#x2F;O、時鐘、控制台中斷)，異常指來自CPU的內部事件或程序執行中的事件引起的過程(如CPU本身故障、程序故障和請求系統服務的指令引起的中斷)，中斷是異步的，異常是同步的。</p><h4 id="14-實模式和保護模式下的中斷處理差別"><a href="#14-實模式和保護模式下的中斷處理差別" class="headerlink" title="14 實模式和保護模式下的中斷處理差別"></a>14 實模式和保護模式下的中斷處理差別</h4><p>  最大的區別在於尋找中斷處理程序入口的方式。</p><ul><li>實模式下，中斷处理程序的入口地址稱為”中斷向量”，所有的”中斷向量”存儲在一個”中斷向量表中”</li><li>保護模式下，為每個中斷和異常定義了一個中斷描述符，來說明中斷和異常服務程序的入口地址的属性，由中斷描述符表取代實地址模式下的中斷向量表</li></ul><h4 id="15-如何識別鍵血組合鍵-如Shift-a-是否还有其他解決方案"><a href="#15-如何識別鍵血組合鍵-如Shift-a-是否还有其他解決方案" class="headerlink" title="15 如何識別鍵血組合鍵(如Shift+a)是否还有其他解決方案?"></a>15 如何識別鍵血組合鍵(如Shift+a)是否还有其他解決方案?</h4><p>  在orange’s中，是建立了掃描碼的解析數組記錄一個鍵在組合及非組合狀態下的實際值，並設置緩冲區，聲明了組合鍵中前者(crtl,shift等)的相应變量，若出現其make code或break code，設置其標誌位以便與其他非組合鍵組合在解析數組中找到相應實際值。</p><h4 id="16-IDT是什么，有什么作用"><a href="#16-IDT是什么，有什么作用" class="headerlink" title="16 IDT是什么，有什么作用?"></a>16 IDT是什么，有什么作用?</h4><p>  IDT(Interrupt Descriptor Table)，中斷描述符表，作用是將每一個中斷向量和一個描述符對應起來。</p><h4 id="17-IDT中有哪几種描述符"><a href="#17-IDT中有哪几種描述符" class="headerlink" title="17 IDT中有哪几種描述符?"></a>17 IDT中有哪几種描述符?</h4><p>  中斷門描述符、陷阱門描述符、任務門描述符。</p><h4 id="18-異常的分類"><a href="#18-異常的分類" class="headerlink" title="18 異常的分類?"></a>18 異常的分類?</h4><ul><li>Fault(缺陷): 是一種可被更正的異常，而且一旦更正了，程序可以不失連續性地繼續執行。返回地址是產生fault的指令。</li><li>Trap(陷入): 一種在發生trap的指令執行之後立即被報告的異常，它也允許程序或任務不失連續性地繼續執行，返回地址是產生trap指令之後的那條指令。</li><li>Abort(中止):  不總是報告精确異常發生位置的異常，不允許程序或任務繼續執行，是用來報告嚴重錯誤的。</li></ul><h4 id="19-用戶態和內核態的特权級分別是多少"><a href="#19-用戶態和內核態的特权級分別是多少" class="headerlink" title="19 用戶態和內核態的特权級分別是多少?"></a>19 用戶態和內核態的特权級分別是多少?</h4><p>  用戶態: 3級。<br>  內核態: 0級。</p><h4 id="20-中斷向量表中，每個中斷有几個字節-里面的結構是什么"><a href="#20-中斷向量表中，每個中斷有几個字節-里面的結構是什么" class="headerlink" title="20 中斷向量表中，每個中斷有几個字節?里面的結構是什么?"></a>20 中斷向量表中，每個中斷有几個字節?里面的結構是什么?</h4><p>  4個Bytes，低地址兩個Byte放偏移，高地址兩個Byte放段描述符。</p><h4 id="21-中斷異常共同點和不同點"><a href="#21-中斷異常共同點和不同點" class="headerlink" title="21 中斷異常共同點和不同點?"></a>21 中斷異常共同點和不同點?</h4><p>相同點:</p><ul><li>都是程序執行過程中的強制性轉移，轉移到相應的處理程序。</li><li>都是軟件或者硬件發生了某種情形而通知處理器的行為。</li></ul><p>不同點:</p><ul><li>中斷，是CPU所具備的功能。通常因為”硬件而隨機發生。異常，是”軟件”運行過程中的一種開發過程中沒有考慮到的程序錯誤。</li><li>中斷是CPU暫停當前工作，有計劃地去處理其他的事情。中斷的發生一航是可以預知的，處理的過程也是事圥制定好的。處理中斷時程序是正常運行的。異常是CPU遇到了無法響應的工作，而後進入一種非正常狀態。異常的出現表明程序有缺陷。</li><li>中斷是異步的，異常是同步的。</li><li>良性的中斷和trap，只是在正常的工作流之外執行額外的操作，然後繼續沒完成的任務，因此處理程序完了后會返回到原指令流的下一條指令繼續執行。而惡性的fault和abort異常，修复可修复的fault后，會重新執行該指令，而不可修复的fault和abort則不會再返回。</li><li>中斷是由於由前程序無關的中斷信號觸發的，CPU對中斷的響應是被動的，且與CPU模式無關。異常是由CPU控制單元產生的，大部分發生在用戶態。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 操作系統 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> os </tag>
            
            <tag> lab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PerkyPet項目-商業模式評估</title>
      <link href="/2022/11/09/PerkyPet%E9%A0%85%E7%9B%AE-%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F%E8%AF%84%E4%BC%B0/"/>
      <url>/2022/11/09/PerkyPet%E9%A0%85%E7%9B%AE-%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F%E8%AF%84%E4%BC%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一-基本信息"><a href="#一-基本信息" class="headerlink" title="一 基本信息"></a>一 基本信息</h1><h2 id="1-1-度量数值"><a href="#1-1-度量数值" class="headerlink" title="1.1 度量数值"></a>1.1 度量数值</h2><p>总体评估：<strong>加分项7项，减分项5项，共12项</strong>。<br>SWOT分析：客户界面的<strong>所有评分项都进行了打分，并详细地阐明了理由</strong>。<br>引用的调研报告和新闻：<strong>23篇</strong>。<br>更新过的商业模式画布中新增或修改过的模板要点占二阶段画布模板要点总数的<strong>17%左右</strong>。</p><h2 id="1-2-文档简介"><a href="#1-2-文档简介" class="headerlink" title="1.2 文档简介"></a>1.2 文档简介</h2><p>本次报告，我们认真地对本项目的商业模式环境进行了分析，仔细的评估了我们的商业模式，从战略角度審视自身商业模式的运作环境，探討了商业模式环境、評估商业模式、藍海战略三个领域，实现了对我们的商业画布的更细致的分析与各项的评估，最终完成了对于商业画布的更新与完善。下面將逐一描述三种评估方式的解讀和更新过的商业模式。</p><h1 id="二-商业模式环境"><a href="#二-商业模式环境" class="headerlink" title="二 商业模式环境"></a>二 商业模式环境</h1><h2 id="2-1-市场影响力"><a href="#2-1-市场影响力" class="headerlink" title="2.1 市场影响力"></a>2.1 市场影响力</h2><h3 id="2-1-1-市場分类"><a href="#2-1-1-市場分类" class="headerlink" title="2.1.1 市場分类"></a>2.1.1 市場分类</h3><p><strong>主要问题1:哪些是最重要的客户群体?</strong><br><strong>解析:在商业模式畫布的客戶细分中，PerkyPet的客戶群体有宠物飼養者、專业兽医、资深博主、宠物店和宠物用品供应商，哪一部分是最重要的客戶群体?</strong><br><strong>回答:</strong><br>**  **客戶群体总体可分为核心用户群和主流用户群，核心用户是最为忠诚，最不容易流失的用户，他们给產品的页献最大，产品也能比较好的满足他们的需求，他们会使用产品的大部分主要功能，同时还会帶动吸引其他客戶來使用產品。在PerkyPet的客戶群体中，專业兽医和宠物店便是这样的核心用戶群体，他們是组成產品一站式服務的重要部分，也是吸引其他客戶的基本要素，只要保證这兩个群体数量足夠，覆盖面足夠廣，宠物飼養者和博主自然会选择PerkyPet，此后與宠物用品供应商的合成洽談也自然水到渠成。因此我們必須保證兽医的待遇以及線下推廣时與尽可能多的宠物店达成合作。<br>  从新聞1和2中可以看到，我們的強力竞争对手波奇宠物先由线上开始發展，主要靠“量重价轻”的宠粮盈利，然而国际大牌宠粮能给毛利率也很有限，品牌方能给到各渠道方的分成較低。近年海运费用也越来越高，僅靠这部分已不足以撑起一家上市公司。而客戶粘性一般是靠較低的售价形成的，一旦提高售价，用戶会很快流失。因此，波奇宠物也嘗試拓展線下維度，只是由於疫情並不順利。鑒于此，我們便要先牢牢把控住線下市場和客戶群体，若主流客戶群体的服務都是經由我們的核心用戶群体–医生和宠物店完成的，他們便不会輕易地轉投其他竞爭对手。構建好完善的線下服務后，線上服務的開展便会順利很多。</p><blockquote><p>调研&amp;新闻 1：<br>2021年5月，波奇宠物在上海静安开出了第一家线下体验店。房凯当时表示，出生于线上的波奇宠物此次拓展线下维度，是构建宠物赛道生态闭环战略的一部分，“今后，公司将真正做到线上线下双管齐下，为波奇用户提供更完整的服务体验，全面关爱宠物生活。”<br>截至2021年5月3日美股收盘，波奇宠物每股报4.91美元。<br>疫情的反复似乎让“线下”这条路走得不是很顺利。9月16日，《宠业光年》在大众点评上搜索波奇宠物（静安大融城旗舰店）发现，仅有128条评论。其他相关门店则显示“暂无营业时间”，评论区也为空白。<br>随后，波奇宠物股价持续走低。<br>2021年12月20日，波奇宠物甚至因股价30个交易日内低于1美元面临退市风险。<br>—新浪财经:过起紧日子的波奇宠物终于减亏，但还不能缓口气</p></blockquote><blockquote><p>调研&amp;新闻 2：<br>2022财年，波奇的服务收入占比提升至4.14%，另95.86%来自商品销售。其中，又有59.32%的销售营收来自站外。据其2020年发布的招股书，2019年，波奇来自三方平台的营收占比高达71.4%。<br>鉴于此，外界对波奇的评价也停留在“以店养店”、“线上宠物屈臣氏”的印象中。换言之，波奇赚取的更多是“经销商差价”，流量成本则落入了综合电商的口袋。<br>—宠物经济困局：光热闹不赚钱的千亿市场</p></blockquote><p><strong>主要問题2:增長潜力最大的群体?</strong><br><strong>解析:哪⼀部分的客户是可积极发展商业化的目标群体？</strong><br><strong>回答:</strong><br>  从調研3中可以看到，19-30岁的青年人是養宠消费者的主力軍，隨着这一代00后逐漸步入社会擁有消费能力，經常在社交媒体接觸到可愛宠物，沉迷”擼宠”文化的他們天然與家宠有着亲切感，很容易对可愛的宠物失去扺抗力。此外，沉重的社会压力與城市營造的孤獨感通常也会令單身的人們希望有只宠物作伴，已經組建家庭的也大概率會希望添加宠物作為家庭成员，無論从哪个方面看，養宠人这一消费群体都必然是會高速增長的，可以积极發展。<br>  另一方面，疫情使得線下門店盈利難度上升，我們也要抓紧这个机会與線下宠物店和宠物医院达成合作，利用線上推廣的优勢把他們拉入PerkyPet的服務体系中，不需要很大代价便能換來營业额的增長期望，相信他們也很願意合作。</p><blockquote><p>调研&amp;新闻 3：<br>随着社交网络等数字技术的崛起,线上线下融合等新商业模式涌现,消费主体、消费偏好、消费形态也经历了一场迭代进化,作为消费生力军的90后、00后崛起,跃上了消费的潮头浪尖。据调研显示，<strong>目前二线及以上城市的主要养宠人群仍旧以19-30岁的青年人为主占比68%，其中女性占比80%。</strong><br>电商平台是目前宠物主首选宠物食品购买渠道，其中90%以上的宠物主表示通过淘宝、京东等传统综合电商平台进行产品采购。<br>根据2022年调研数据显示，17%的门店处于亏损状态与2021年持平，亏损10%以上的门店占比升高3%，盈利0%-5%的门店占比升高4%，整体来看，门店盈利水平分布变化不大。<br>2022年,门店盈利影响因素变化较大，**新冠疫情反复是影响近一年门店盈利的主要原因占比54%**，线上渠道分流导致市场份额降低是第二大影响因素占比51%。盈利能力较强的门店仅占12%，常态化疫情下如何做好线上线下协同发展值得关注。<br><img src="https://s2.loli.net/2022/11/30/hLXTk4IQSu7PwAm.png" alt="image.png"><img src="https://s2.loli.net/2022/11/30/Ba1LYwPu4s3i867.png" alt="image (1).png"><br>—亚宠研究院:《宠物行业蓝皮书：2022中国宠物行业发展报告》</p></blockquote><h3 id="2-1-2-需求和訴求"><a href="#2-1-2-需求和訴求" class="headerlink" title="2.1.2 需求和訴求"></a>2.1.2 需求和訴求</h3><p><strong>主要问题1:客戶需要什么?</strong><br><strong>解析:客户想通过我们的產品解决什么问题？</strong><br><strong>回答:</strong><br>** ** 一个集资訊獲取、寵物咨詢、飼養体驗、寵物交易、线下服务、同城互助為一体的一站式服務平台，为用户提供优质的个性化服务。PerkyPet能為養宠人解決有關宠物的一切问题，能提供調研4中大部分宠物主需要的產品和服務，我們與宠物用品供应商的直接合作保證了用品的安全和健康，社区功能也直接滿足了用戶的分享欲、和他人互动與日常記錄的需求。PerkyPet还能解決新聞5中導致飼養者弃宠的原因:不熟悉養宠方法，不了解宠物習性，若是由于经济和家庭原因导致養宠人不得不弃養，也能通过我們產品的寵物交易,同城互助等服務找到解決途徑，最大程度減少直接弃養城市的情況發生。</p><blockquote><p>调研&amp;新闻 4：<br>  根据调研数据显示，80%以上的宠物主表示<strong>维持宠物日常生活、保障宠物健康是购买产品&#x2F;服务的主要动因</strong>；提升宠物生活品质挤身消费动因前三名，说明人宠亲密关系升级，宠物主愿意为实现精致养宠而买单。<br>  宠物清洁用品的需求增加。为保障宠物的安全和健康，天然、安全的成分是宠物主购买相关产品时考虑的首要原因，更多洗护用品品牌着力于天然可食用、低敏、皮毛修复、亮泽蓬松等兼顾安全与功能性的产品研发。此外，不少国内外定位于“专业宠物洗护”的品牌根据宠物个体在毛发、皮肤特质等方面的差异，对洗护产品进行精细化区分推出了更具个性化的宠物洗护产品。<br>  私域流量凸显:社群、微信等私域流量不论在门店客户拓展还是维系方面都起到了重要作用。此外，超过20%的消费者表示倾向在微信群&#x2F;小程序&#x2F;社群等购买产品，该比例仅低于综合电商平台，私域流量作为新兴渠道发展迅猛。<br>—亚宠研究院:《宠物行业蓝皮书：2022中国宠物行业发展报告》</p></blockquote><blockquote><p>调研&amp;新闻 5：<br>  为何养了宠物以后又会狠心遗弃它们？记者采访了多名弃养宠物者发现，他们弃养宠物的原因五花八门，除了经济能力受限外，有的是嫌弃宠物不省心，还有的是家人反对便将宠物丢弃了。<br>小梅是陕西西安一家服装店的售货员，今年4月，她将养了两年多的比熊犬丢弃了。“实在养不起了，那几天它一直拉肚子，以前就去过医院，治病得花五六百元，我真的没那么多钱。”小梅说，前年开始生意就不好做，衣服卖不出去，工资一降再降，自己都难养活，就别提狗了。<br>  由于找不到领养人，小梅最后将宠物遗弃在一家流浪动物救助站外，希望工作人员能将小狗收留。<br>  北京某医院保健科一位工作人员向记者分析，弃养宠物的原因多种多样，首要原因就是经济状况。养宠物不仅耗费时间，而且需要不小的经济投入，如非名贵品种，或者是成年了，想卖上好价钱并不容易。<br>  其次是不少人对养宠物这件事认识不足。有些人缺乏经验，养宠物的观念还停留在只要让宠物吃饱就行的阶段，但养了以后发现，狗会“拆家”、猫会“跑酷”，不让人省心。<br>—宠物被遗弃现象频发给社会增添负担！</p></blockquote><p><strong>主要问题2:哪些需求在增加?</strong><br><strong>解析:我們哪一个需求呈现增长的趋势?</strong><br><strong>回答:</strong><br>  因為養宠人呈現增長的趋势，因此有关宠物服务，宠物和用品交易，養宠教學的需求都必定会增加，这是顯而易見的趋势。而没有社交，人会孤独，没有良好社交氛围，人会失常。而我们很多人恰恰要么孤独，要么处在不好的社交氛围，而宠物是个非常有治愈力的社交对象。这也是为什么城市越大，养宠者越多，按说他们已经忙碌到没有时间养宠物了。宠物创造了极佳的社交话题，也以此让宠物主成了社交的参与者，并在参与中获得了满足。</p><h3 id="2-1-3-市場問题"><a href="#2-1-3-市場問题" class="headerlink" title="2.1.3 市場問题"></a>2.1.3 市場問题</h3><p><strong>主要问题1:影响客戶环境的关鍵问题有哪些?</strong><br><strong>解析:有哪些问题影响了宠物市場?</strong><br><strong>回答:</strong><br>** ** 就像在电商平台上購买東西遇到問题后，會去找店家一樣，養宠人也會傾向于选择能提供一站式服務的平台購买宠物和用品，这是我們的优勢，使用PerkyPet的無論老手或小白都能根據專属定制的教程快速熟悉新寵物並上手，医生能直接通过平台內的档案數據了解宠物的具体情況，平台推荐的商品和飼養方案也都是最契合宠物且有保障的，这都是調研6中客戶關注的問题。多数其他的竞爭对手都沒有注重这方面的因素。<br>  客戶家庭环境和自身條件也是一大因素，比如强烈的孤独感导致了老年人对宠物陪伴的需求度显著增加，老人的选择通常会是易養体質好的猫狗鳥雀，不太注重外觀品种。单身人群想从宠物身上获取温暖和陪伴就多数会选择善解人意性格好的，時空間和金錢不充裕的學生等等又會有不同的偏好。<br>  客戶的选择还会受当地法律和周边影响，比如許多城市陸續颁布的大型犬禁令，或是居住地周边缺少可以讓宠物溜达的場所，抑或是飼養某些宠物要辦的手續繁瑣，都会影响客戶的选择。<br>  最终，客戶便傾向于能為他提供幫助解決这些問题的平台，因此我們便要努力做好一站式服務。</p><blockquote><p>调研&amp;新闻 6：<br>相较发达国家的宠物经济，中国目前的宠物市场正处于起步阶段，与宠物相关的行业、周边，已经成为一个独立的产业，市场细分也越来越精细。<br>随着科学养宠的观念逐渐被人们接受，宠物主对宠物的健康成长更加重视，宠物零食的市场需求增大，人均可支配收入的增多也让消费者为宠物消费的支付意愿升高，营养均衡、品牌知名将成为宠物食品新的消费趋势，越来越多的宠物主关注宠物食品的营养配比以及品牌知名度。<br>在宠物食品用品供给侧和需求侧的双向发展下，资本开始关注到宠物领域。2015年开始，资本加大力度进入宠物行业，并且发展领域涵盖了上游活体交易、中游食品用品和下游的电商网红等各个层面。<br>—2022-2023年中国宠物行业发展趋势分析</p></blockquote><blockquote><p>调研&amp;新闻 7：<br>单位和个人饲养犬只，应当按照规定定期免疫接种狂犬病疫苗，凭动物诊疗机构出具的免疫证明向所在地养犬登记机关申请登记。<br>携带犬只出户的，应当按照规定佩戴犬牌并采取系犬绳等措施，防止犬只伤人、疫病传播。<br>街道办事处、乡级人民政府组织协调居民委员会、村民委员会，做好本辖区流浪犬、猫的控制和处置，防止疫病传播。<br>县级人民政府和乡级人民政府、街道办事处应当结合本地实际，做好农村地区饲养犬只的防疫管理工作。<br>饲养犬只防疫管理的具体办法，由省、自治区、直辖市制定。<br>—中华人民共和国动物防疫法第三十条</p></blockquote><p><strong>主要问题2:哪些改变正在發生?</strong><br><strong>解析:現在的宠物行业正在發生哪些改变?</strong><br><strong>回答:</strong><br>  傳統宠物店大多不能提供足夠精細化的服務，商品在电商面前也缺少竞爭力，不少人購买宠物后便鲜少再光顧，傳统宠物店的盈利逐漸下滑，这一情況在疫情發生后尤為嚴重，在市場一直擴大的情況下是不合理的。<br><strong>主要问题3:市場將走向何处?</strong><br><strong>解析:宠物行业的未來应該是怎样的?</strong><br><strong>回答:</strong><br>**  **未來宠物行业必然是朝着我們的目标–一站式服務平台發展的。線下宠物店宠物医院等與線上平台結合，向客戶提供覆盖上中下游的精细化服務，全方位把握市場，輔以虚擬化和智能化技术解決客戶需求。从新聞8可見易宠科技已經在这條路上取得了不小的成果。</p><blockquote><p>调研&amp;新闻 8：<br>在易宠科技规划的蓝图上：每只宠物的数据都会汇聚在云端，为养宠家庭提供宠物的性格分析、医疗教育等服务；线下门店可以直接与养宠家庭实现云端交互，实现数字运营；品牌商家可以根据用户偏好，对门店进行精准投放……上游工厂、品牌商家、线下门店、宠物家庭实现互联互通，借助大数据智能化开展互动。<br>“我们累计投入了超1亿元用于技术研发、升级。”朱江发说，目前，易宠科技的系统与软件均为自身原创，并拥有专利、软著超过100项。如此高的研发投入强度，让易宠科技成为行业首家国家高新技术企业。<br>易宠科技还组建了大数据、人工智能团队，并开发上线了不少应用。如今，易宠科技已能为线下门店提供定制化服务。<br>以一家名为“小尾巴宠物”的传统宠物店为例，该店在转型方向上存在疑惑。得知需求后，易宠科技通过大数据，对重庆各个区块的消费等级、同行分布、人流状态、养宠环境作出分析。同时，结合“小尾巴宠物”未来门店定位，易宠科技为其寻找了合适的开店地址，并定制了产品方向、营销方案等。如今，在易宠科技的助力下，“小尾巴宠物”已在成都成功开了5家门店。<br>“未来，易宠科技将依托产业链、供应链，结合数据和算法，强化线上线下一体化解决方案，打造一个宠物数字化经济平台，构建更好的宠物行业城市生态平台。”肖宇说。<br>—易宠科技：深耕宠物行业成龙头</p></blockquote><h3 id="2-1-4-切換成本"><a href="#2-1-4-切換成本" class="headerlink" title="2.1.4 切換成本"></a>2.1.4 切換成本</h3><p><strong>主要问题1:哪些東西將客戶捆綁在一家供应商和他的服務上?</strong><br><strong>解析:有哪些服务是我们可以提供给客户而其他產品提供不了的？</strong><br><strong>回答:</strong><br>**  **毫而疑問是我們的一站式服務体系以及云端体驗功能。<br><strong>主要问题2:哪些切換成本阻止客戶轉投竞爭对手?</strong><br><strong>解析:用户如果不使用我们的产品，而去使用其他的平台 ，他会失去什么？</strong><br><strong>回答:</strong><br>  如果是宠物主，他將要花费额外的精力于學習養宠、飼養寵物與处理各种意外情況上，同時还要自己承擔操作失誤的风險，並且無法與廣大宠物主進得PK等特色交流活动，無法结识同城的好友。如果是宠物店，他將失去一个佷好的推廣引流平台，失去平台結合大数據專門定制的營銷方案，被排济于PerkyPet体系外。如果是一位宠物博主，他會失去一个用戶愛好属性相近，粘性极大的平台，失去向尽可能多的同好展示自己的机會。如果是一位医生，將會失去源源不斷的自己感興趣的客源，失去科普專业知識的机會，失去获取更多知名度、收入。<br><strong>主要问题3:客户容易找到并采购类似的服务吗?</strong><br><strong>解析:现在市场上有和我们提供相似的服务的平台吗？</strong><br><strong>回答:</strong><br>  若是能提拱有關宠物服務的軟件，那确实有不少，但目前卻沒有一個像我們一樣提供線上線下結合的一站式服務平台。<br><strong>主要问题4:品牌有多重要？</strong><br><strong>解析：竞争市场上有巨头式的知名平台吗？我们会打造怎样的品牌？</strong><br><strong>回答:</strong><br>** ** 在宠物市場做大做強的品牌有不少，比如波奇宠物和易宠科技，但他們都有各自的缺点，而且仍不算是巨头式的知名平台，多数人不经过搜索一般对他們不具備印象。我們的目地是要超越他們打造PerkyPet知名品牌，吸引更多、更多元化的⽤户群体，使人們一旦提起養宠便会先想到我们。</p><h3 id="2-1-5-收入吸引力"><a href="#2-1-5-收入吸引力" class="headerlink" title="2.1.5 收入吸引力"></a>2.1.5 收入吸引力</h3><p><strong>主要问题1:客户真正愿意花钱买的是什么?</strong><br><strong>解析:我们提供的服务中客户愿意为什么服务付费?</strong><br><strong>回答:</strong><br>**  **有关宠物必須的用品和服務，客戶都挺愿意付费的，就像調研9中所示宠物用品規模在不斷擴大，其中不少人願意購买智能化宠物用品和玩具，產品趋向高端化。結合調研10可見大部分人都願意為实現精緻養宠而买单，这代表只要我們提供的服務足夠好，客戶便会很樂意付费。而社交娛樂的板块则会有較多的免费用戶。</p><blockquote><p>调研&amp;新闻 9：<br>数据显示，中国宠物用品市场规模不断扩大，预计2022年中国宠物用品市场将达369亿元，同比增长13.2%。艾媒咨询分析师认为，在宠物经济的推动下，宠物用品各细分领域不断兴起。随着宠物企业的研发、生产能力不断增强，各类具有宠物特色的产品将成为带动宠物用品市场发展的增量，2025年宠物用品市场规模将达484亿元。<br><img src="https://s2.loli.net/2022/11/30/2LnbNwxUtH7j6lK.png" alt="image (2).png"><br>数据显示，2022年1-5月京东智能宠物玩具购买量同比增长80%，智能饮水机购买量同比增长84%，智能喂食器购买量同比增长115%，智能猫砂盆搜索量同比增长267%。艾媒咨询分析师认为，数字化、智能化升级已成为中国宠物用品行业未来的发展趋势，小米、美的、海尔等科技领域巨头跨界入局宠物用品行业，也给智能用品品类带来新的增长点。<br>—2018-2025年中国宠物用品市场规模及预测</p></blockquote><blockquote><p>调研&amp;新闻 10：<br>根据调研数据显示，80%以上的宠物主表示<strong>维持宠物日常生活、保障宠物健康是购买产品&#x2F;服务的主要动因</strong>；提升宠物生活品质挤身消费动因前三名，说明人宠亲密关系升级，宠物主愿意为实现精致养宠而买单。<br><img src="https://s2.loli.net/2022/11/30/hbDHLalqx1tfoEX.png" alt="image (3).png"><br>—亚宠研究院:《宠物行业蓝皮书：2022中国宠物行业发展报告》</p></blockquote><p><strong>主要问题2:利潤中最大的一块从哪里獲得?</strong><br><strong>解析:我們哪一部分的收入來源的利潤是最大的?</strong><br><strong>回答:</strong><br>**  **在聯合宠物店和宠物医院為宠物提供的服務，以及商品銷售上，我們都不是直接交易的一方，收入只能靠平台抽取的费用，雖然累积起來是十分可觀的收入，不过收益率最大的还是会员制度以及養宠体驗中的特定功能和飾品，会员的一次性和連續付费能快速地為我們提供收入。<br><strong>主要问题3:客户能够轻易找到更便宜的产品和服务吗?</strong><br><strong>解析:我們的服務的收费在宠物市場上有竞争力嗎?</strong><br><strong>回答:</strong><br>**  **当我们與市場上越多的宠物店、宠物医院、宠物用品供应商达成合作后，我們可掌握的定价权便越大，客戶便不能寻找到更便宜的產品和服務。即便能找到，可能也会是一些品质不佳的產品或不合規的服務，需要承擔很大的风險。</p><h2 id="2-2-行业影响力"><a href="#2-2-行业影响力" class="headerlink" title="2.2 行业影响力"></a>2.2 行业影响力</h2><h3 id="2-2-1-供应商和价值鏈上的其他厂商"><a href="#2-2-1-供应商和价值鏈上的其他厂商" class="headerlink" title="2.2.1 供应商和价值鏈上的其他厂商"></a>2.2.1 供应商和价值鏈上的其他厂商</h3><p><strong>主要问题1:誰是你行业价值鏈中的關鍵玩家?</strong><br><strong>解析:在我們產品提供的服務中，哪些參與者最重要?</strong><br><strong>回答:</strong><br>**  **宠物店和專业医生，他們是我們的核心客戶，只要牢牢把控住，就不愁獲取主流客戶群，同時他們各自能獨立运營，是傳統宠物行业的關鍵參與者。<br><strong>主要问题2:你的商业模式有多大程度上依賴于其他的这些玩家?</strong><br><strong>解析:我們的服務有多依赖于上面的这些參與者?</strong><br><strong>回答:</strong><br>  宠物店和医生是宠物行业的關鍵參與者，也是我們一站式服務的基石，我們很大程度上依赖于他們提供的服務，他們的利潤也是最大的。但隨着我們的合作方覆盖越廣，主流客戶群体便会越多，这些參與者更会反过來对我們形成依赖，尤其是在当下实体经济不好做的情況下，这一进程会更快，最终达成相互合作互相依赖。<br><strong>主要问题3:有边緣玩家在涌現嗎?</strong><br><strong>解析:会不会有边綠參與者崛起與我們竞争?</strong><br><strong>回答:</strong><br>  在我們的项目全面鋪開后，我們的一站式服务覆盖面广，应用能力强，边缘参与者难以竞爭，他們只能從更精細化的方面開展更特色的服務，但最后应該也會成為我們项目的一环，因為无论是从用户粘性还是滿足客戶需要还是从技术上来讲，我们都有独有的优势，一旦占领了这个市场之后，就几乎不会有行业的边缘参与者崛起。<br><strong>主要问题4:哪个的利潤最高?</strong><br><strong>回答:</strong><br>**  **我們的核心用戶群宠物店和專业医生利潤最高。</p><h3 id="2-2-2-利益相关者"><a href="#2-2-2-利益相关者" class="headerlink" title="2.2.2 利益相关者"></a>2.2.2 利益相关者</h3><p><strong>主要问题1:哪些利益相关者会影响你的商业模式?</strong><br><strong>回答:</strong><br>  我們大数据智能推斷给出的定价和优惠策略不可避免地会讓宠物店、医院、供应商賺取的利潤單价变少，他们可能會認為这觸给到了他們的利益而扺觸合作，我們需要给出詳細的策略原因和方案以及期望以說服他們。<br><strong>主要问题2:股東的影响力如何?员工呢?</strong><br><strong>回答:</strong><br>**  **我們不会讓股東对產品运營有过多的影响力，產品的运營方向和策略由员工结合人工智能計劃给出，股東的投资用于前期補貼吸引客戶和宣傳上。员工則具備重要性，我們需要大量优質的业務员、开發團队和服務團隊來開展项目以及維持服務的正常运轉。</p><h3 id="2-2-3-現有-竞争对手"><a href="#2-2-3-現有-竞争对手" class="headerlink" title="2.2.3 (現有)竞争对手"></a>2.2.3 (現有)竞争对手</h3><p><strong>主要问题1:誰是我們的竞爭对手?他們的主流產品和服務是什么?</strong><br><strong>解析:在宠物市場中，誰會與我們的业務產生冲突，是我們的直接竞争对手，為什么?</strong><br><strong>回答:</strong><br>  傳統宠物行业的參與者一般不會與我們的业務產生冲突，與我們是合作互利的模式。我們的竞争对手是同样整合资源並提供一站式服務的平台，現在市面前还沒有出現和我們的產品理念完全重合的平台，但有不少在某些服務，比如宠物交易、宠物看病、宠物社区、宠物物品商城等方面產生冲突的產品，他們是我們的直接竞争对手。<br><strong>主要问题2:他们的竞爭优势和劣势是什么?</strong><br><strong>解析:他們在哪方面做的比較完善值的我們學習，有哪方面不足，是我們要抓住的突破口?</strong><br><strong>回答:</strong><br>  我們的竞争对手中，有專注于宠物社区的，比如宠物王国;有做宠物电商的，比如波奇宠物和易宠科技;有提供科學養宠方式的如小佩宠物，还有許多其他不同领域的產品。<br>  他們的优势在于都抓住了養宠人的需求進行發展，在細分领域做大做強，做宠物电商的甚至都上市融资了，做到了行业龙头的水平。我們也必須貼合用戶需求，要比对手們更能解決他們的痛点，才能穏步發展。<br>  他們的劣势在于提供的服務都比較单一，且太多都專攻線上，許多服務沒有太大的优势，沒有讓用戶產生粘性的理由，用戶在養宠的每個环節都有許多不同的选择，不能用一个產品解決所有問题，用戶活跃度不高的情況下整个环境難以把控。宠物王国、小佩宠物等宠物科養社区雖然有数十萬的下載量，但內容卻甚少，新的动态要过挺長的时间才会出現，可見活跃度不大。波奇宠物等企业也開始重視起線下布局，因為線上銷售宠物用品，用戶也可以有許多的选择，各大电商平台不僅流量大，在客戶心目中也比較值得信赖，他們很容易通过优惠和定价权搶走客源，这些都導致了縱然是千亿市場，可大家都賺不到錢。事实證明只有做一站式服務吸引客戶，令用戶產生粘性，帶來的流量使自己有能力把控整個市場才是最终方案。</p><blockquote><p>调研&amp;新闻 11：<br>  今年4月，国内最大的“宠物生态平台”波奇宠物收到美国纽交所信函，称其在30个交易日期间、总市值与股东权益均低于5000万美元，若不能在收到函件后的18个月内符合持续上市标准，则面临退市可能。<br>  公开资料显示，2019年，中国养宠家庭的渗透率为22.8%，美国、英国、日本的渗透率则为68.9%、45%与26.8%。2020年，Chewy在美国宠物电商的市占率超过50%。反观国内，即使身为行业龙头，波奇在中国宠物线上销售平台的市占率也只有1.9%。而中国消费者也未形成在专业电商购物的习惯。<br>  为了实现营收多元化，波奇还曾仿照北美宠物电商巨头Chewy推出过会员订阅服务，即先预存一定金额、每月按需求定制购买宠物产品。参照Chewy的商业模式，其“自动订阅服务”是收入端最核心的增长引擎，但波奇在这方面成效甚微。<br>线上渠道之外，波奇还追随美国宠物零售商巨头Petco的脚步，试图拓展线下渠道。2021年5月，波奇在上海静安开出了自己的第一家直营门店，然而，疫情的反复让这条路走得并不顺利。<br>—宠物经济困局：光热闹不赚钱的千亿市场</p></blockquote><p><strong>主要问题3:他们的成本结構如何?</strong><br><strong>解析:竞争对手需要支出的成本有哪些?收入來源是什么?</strong><br><strong>回答:</strong><br>  相比于做線下业務，做線上业務不需要付出店舖租金、設備费用、商品费用等，理論上只需要平台的开發維護费以及保持公司正常运行即可，例如調研12中开發宠物王国的企业，參保人数只有三人，注册资本100萬，项目卻能一直在运行。他們的收入來源主要是靠訂閱制度以及对提供的服務的中間抽成，並且在宠物经济快速扩张的同时，宠物行业也成融资市场的热门赛道，不少企业可以獲得投资並用在研發或擴展線下业務上。</p><blockquote><p>调研&amp;新闻 12：<br>企业名称:南京一宠科技有限公司<br>成立日期:2019-07-04<br>注册资本:100萬元<br><img src="https://s2.loli.net/2022/11/30/aOqFyMd96DIe8Cs.png" alt="image (4).png"><br><img src="https://s2.loli.net/2022/11/30/cjvoIVPJi3F7C1O.png" alt="image (5).png"><br>—愛企查</p></blockquote><blockquote><p>调研&amp;新闻 13：<br>2022年中国宠物行业部分融资事件:<br><img src="https://s2.loli.net/2022/11/30/SIvbih1KMzxuTyW.png" alt="image (6).png"><br>—2023-2029年中国宠物行业市场深度分析及未来趋势预测报告</p></blockquote><p><strong>主要问题4:他們对我們的客戶群体、收益來源和利潤有多大影响?</strong><br><strong>回答:</strong><br>  他們初期會在业務冲突的领域與我們争搶客源，但隨着我們业務的展開以及更多人体驗到我們服務的便利性，相信越來越多用戶會轉投我們並產生粘性，因此在项目初期影响比較大，需要投入比較多的资源才能發展起來。</p><h3 id="2-2-4-新进入者-挑战者"><a href="#2-2-4-新进入者-挑战者" class="headerlink" title="2.2.4 新进入者(挑战者)"></a>2.2.4 新进入者(挑战者)</h3><p>目前市面上並沒有新的與我們业務類型几乎一樣的竞争者，或者說我們就是新进入者。</p><h3 id="2-2-5-替代產品和服务"><a href="#2-2-5-替代產品和服务" class="headerlink" title="2.2.5 替代產品和服务"></a>2.2.5 替代產品和服务</h3><p>替代的產品和服務有很多，客戶可以線下找宠物店和宠物医院，这些都是傳統宠物行业一直存在的，也可以使用其他的平台。可是相比于集成了一切的我們，客戶要付出的時間，金錢，甚至試錯成本都要更高，事实上我們才是他們替代这些產品和服務的选择，他們會在我們这一”替代產品”上產生很高的用戶粘性。</p><h2 id="2-3-关鍵趋势"><a href="#2-3-关鍵趋势" class="headerlink" title="2.3 关鍵趋势"></a>2.3 关鍵趋势</h2><h3 id="2-3-1-技术趋势"><a href="#2-3-1-技术趋势" class="headerlink" title="2.3.1 技术趋势"></a>2.3.1 技术趋势</h3><p><strong>主要问题1:你的市场内外，主要的技术趋势是什么？</strong><br><strong>回答:</strong><br>**  在宠物市場，主要的技术趋势总结便是自研化、綠色化、智能化、电子化、高端化、定制化。**</p><blockquote><p>调研&amp;新闻 14：<br>  随着消费者消费需求的提升，宠物用品、食品持续朝多元化方向发展。宠物食品在现阶段不再局限于简单的饱腹作用，对宠物的神经系统、免疫系统、骨骼关节等也有修护和促进作用，功能性的宠物食品越来越精细化、多样化。<br><img src="https://s2.loli.net/2022/11/30/JGTeXZ95hkrj7cC.png" alt="image (7).png"><br>—宠物产品数智能化升级将是行业未来发展的新增长点</p></blockquote><blockquote><p>调研&amp;新闻 15：<br>宠物行业发展趋势：<br>1.健康驱动功能性产品细分<br>2.小宠经济兴起<br>3.消费趋向高端<br>4.国潮品牌逆袭<br>5.私域流量凸显<br>6.门店线上布局<br>—宠物行业蓝皮书：2022中国宠物行业发展报告</p></blockquote><p><strong>主要问题2:哪些新興技术是正在逐步采用的？</strong><br><strong>解析:PerkyPet有采用什么新技术嗎?</strong><br><strong>回答:</strong><br>  我們的養寵体驗功能設想就是結合虛擬現实和人工智能技术，讓用戶能全方位真实地感受到養不同宠物的樂趣，同時又不用付出太多的成本，不用考慮宠物會帶來的麻烦。但短时間內難以实現。</p><h3 id="2-3-2-行业管理趋势"><a href="#2-3-2-行业管理趋势" class="headerlink" title="2.3.2 行业管理趋势"></a>2.3.2 行业管理趋势</h3><p><strong>主要问题1:哪些管理趋势会影响你的市場和客戶需求？</strong><br><strong>回答:</strong><br>  对市場和客戶需求影响最大的应該是各大城市制訂的有關宠物飼養的法規，这直接關係到養某些宠物是否被允許以及條件是否苛刻。<br>  对宠物市場服務和消费的監管，比如像調研16，遇到消费問题時維权是否容易是影响市場的因素之一。<br>  目前，宠物及宠物食品行业的法律法规及产业政策较少，国家相关部门正在研究和起草相关法规，整个行业正在逐步向规范化方向发展，近年来也出台了不少法規，这可能會影响我們商品上架的选择。</p><blockquote><p>调研&amp;新闻 16：<br>宠物消费市场存在较多消费问题，有五成消费者都遇到过問题:<br><img src="https://s2.loli.net/2022/11/30/jY6VoR9uxfrFgIO.jpg" alt="image (8).png"><br>缺乏行业标准成为宠物主进行消费维权时最大的阻碍:<br><img src="https://s2.loli.net/2022/11/30/hvQZJtnsfCrORVa.jpg" alt="image (9).png"><br>—广州市宠物消费调查报告</p></blockquote><blockquote><p>调研&amp;新闻 17：<br>中国宠物经济行业相关政策汇总一览表:<br><img src="https://s2.loli.net/2022/11/30/8qDSrVGXa1eA3mU.png" alt="image (10).png"><br><img src="https://s2.loli.net/2022/11/30/oX138FwSa7OCryV.png" alt="image (11).png"><br>—2022年中国宠物经济行业市场前景预测及投资研究报告</p></blockquote><h3 id="2-3-3-社会和文化趋势"><a href="#2-3-3-社会和文化趋势" class="headerlink" title="2.3.3 社会和文化趋势"></a>2.3.3 社会和文化趋势</h3><p><strong>主要问题1:描述关键社会趋势。文化或社会价值观上的哪些变化会影响你的商业模式?</strong><br><strong>回答:</strong><br>**      **萌宠文化、丁克一族、生物平等。随着自媒体不断发展，人们可以在网上接触到各种各样的宠物，可爱的宠物形象深入人心，这会大大提高消费者的购买宠物的意愿。同时，丁克文化的流行也让丁克家庭对宠物的需求大大增加，宠物代替了小孩成为家庭的一份子。此外，生物平等观念也在深入人心，越来越多的宠物饲养者致力于科学饲养、精细饲养，我们的软件恰好能提供这些服务。</p><h3 id="2-3-4-社会经济趋势"><a href="#2-3-4-社会经济趋势" class="headerlink" title="2.3.4 社会经济趋势"></a>2.3.4 社会经济趋势</h3><p><strong>主要问题1:关键的人口统计学趋势有哪些?</strong><br><strong>回答：</strong><br>2022年中国宠物家庭规模即将破亿，20%的渗透率虽仅为欧美市场的1&#x2F;3，但宠主实体消费水平已与其他国家水平相当。在国民宠主消费力带动下，中国宠物实体市场规模达1158亿。<br>在用户层面，多元养宠逐渐成为常态，有31%的宠主饲养2种以上宠物，即户均养宠1.4类，其中，猫狗双全成为多宠饲养最高选项。<br>从养宠趋势上看，猫狗家庭仍是主力，养宠家庭规模将突破千万量级。具体来说，猫宠家庭增长趋缓，狗宠家庭小幅回落。在年龄结构方面，经过推测，将有1900万猫狗迈入中老年，这些现象也将带来新的养宠需求变化。<br>调研&amp;新闻 18：<br>2022年中国宠物消费者调研<br><img src="https://s2.loli.net/2022/11/30/vudglWRkbz6hnFQ.png" alt="image (12).png"><br><strong>主要问题2:你的市场中收入和财富的分布有哪些特征?</strong><br><strong>回答：</strong><br>不同的人养的宠物种类不一样，选择的饲养方式不一样。农村人养土狗喂剩饭，几乎零成本；城市里的富有家庭养猫狗要打各种疫苗、精细选粮、定期驱虫，收入跨度大。此外，水族异宠饲养成本一般不如猫狗，所以不同宠物种类对应人群的收入也不同。总体来看，穷人富人均可以养宠，收入跨度大，所以市场广阔。<br>调研&amp;新闻 19：需求的变化<br><img src="https://s2.loli.net/2022/11/30/6AGOhIJEvxiYfdl.png" alt="image (13).png"></p><h2 id="2-4-宏觀经济影响"><a href="#2-4-宏觀经济影响" class="headerlink" title="2.4 宏觀经济影响"></a>2.4 宏觀经济影响</h2><h3 id="2-4-1-全球市場情況"><a href="#2-4-1-全球市場情況" class="headerlink" title="2.4.1 全球市場情況"></a>2.4.1 全球市場情況</h3><p><strong>主要问题1:经济处于爆发期吗?描述总体市场情绪GDP增长率是多少?失业率有多高?</strong><br>2022年全球经济总值收缩3.5%以上，全球各国经济当下处于疫情影响后恢复阶段，未来全世界经济复苏步伐将大大放缓，甚至重新陷入衰退。以下对全球经济现状分析。2022年全球经济仅增长3.1%，低于2022年1月发布的4.0%的增长预测。失业率方面，2021年中国城镇失业率为5.1%；16-24岁人口城镇失业率为14.3%；25-59岁人口城镇失业率为4.4%。<br>调研&amp;新闻 20：<br><img src="https://s2.loli.net/2022/11/30/A8D416reBnPNzLo.png" alt="image (14).png"><br><img src="https://s2.loli.net/2022/11/30/jpSDytBrFMAw3nR.png" alt="image (15).png"></p><h3 id="2-4-2-资本市場"><a href="#2-4-2-资本市場" class="headerlink" title="2.4.2 资本市場"></a>2.4.2 资本市場</h3><p><strong>主要问题1:资本市场处于什么状态?在你所处的市场中，获得投资有多容易?</strong><br>鉴于新冠疫情的存在，传统宠物店日趋式微，且线下店由于包含水电人工的成本，价格普遍偏贵，所以宠物及宠物用品线上化购买逐渐成为主流。人们追求方便快捷的生活方式，足不出户地一站式解决宠物问题。所以我们的软件迎合了用户的需求，获得投资比较容易。<br>调研&amp;新闻 21：中国宠物实体商品不同品类渠道分布比例<br><img src="https://s2.loli.net/2022/11/30/tIeRXc2FEUTWf9s.png" alt="image (16).png"><br><strong>主要问题2:我们的软件容易获得融资吗？获取这些投资的成本有多高?</strong><br>容易。养宠者越来越多，然而一体化的宠物平台却寥寥可数，我们的产品恰好填补了这个空缺。我们的软件只要做好规划的每个功能，积累一定的用户数量，严格把控产品质量，吸引融资不会太困难。再加上疫情尚未好转，线上化仍然是大趋势，所以我们的软件具有广阔的发展空间。</p><h3 id="2-4-3-大宗商品和其他资源"><a href="#2-4-3-大宗商品和其他资源" class="headerlink" title="2.4.3 大宗商品和其他资源"></a>2.4.3 大宗商品和其他资源</h3><p><strong>主要问题1:描述你的业务必备的大宗商品和其他资源的当前市场状态</strong><br><strong>回答:</strong><br>主要的人力资源是运营团队、宠物和宠物用品商家、专业兽医，要做好和他们的联系。后期可能会有官方的宠物用品店，实现自产自销，从源头进行把控。运营团队负责软件的日常维护，处理用户的意见，维护社区秩序等。商家，兽医负责维持软件中商城和兽医咨询模块的日常运转。<br><strong>主要问题2:执行你的商业模式所需的资源有多么容易获取?成本如何?价格走向如何?</strong><br>运营团队方面，就是普通的app运营团队，获取难度一般，人力成本较高。商家和兽医要和我们进行签约，招募入驻成本较低，但是对于他们的管理，后期可能成本较高，因为作为第三方，他们的素质和专业水平无法保证，为了维护app的口碑，要有专门的团队对他们进行监督，及时剔除奸商和水平不过关的兽医。对于后期可能会有的官方宠物用品店，我们需要租赁专门的场地，联系好合作方，对合作方的生产过程进行监督，保证官方用品的质量，成本较高，但是这是后期有一定规模时再进行考虑的事，那时候会有充足的启动资金，前期工作只要做好我们的中介工作就可以。</p><h3 id="2-4-4-经济基础設施"><a href="#2-4-4-经济基础設施" class="headerlink" title="2.4.4 经济基础設施"></a>2.4.4 经济基础設施</h3><p><strong>主要问题1:你所处市场的(公共)基础设施有多优良?</strong><br><strong>回答：</strong><br>从新闻中可以得知，国内的互联网基础设施发展速度非常快，我们的软件正是依托于互联网技术的产品，所以我们有者相对良好的发展环境和基础，同时高速革新的技术也可以对我们的产品产⽣推动的效果。国内的视频版权的问题在近几年开始被重视，从以前的盗版横行到现在的有较强的版权意识，国内的销售环境已经有了较大的改善，这也保证了我们的业务能够正常的运行，不会因为盗版资源的横行出现收⼊大规模受损的情况。网络基础设施的快速发展也为我们提供的优质服务有着良好的保障。<br>调研&amp;新闻22：<br>IPv6规模部署广度不断推进，IPv6活跃用户数持续上升；IPv6规模部署深度不断推进，IPv6流量大幅上涨；支持IPv6的网络超过半数，IPv6地址量满足行业发展需求；网络全面支持IPv6，骨干网IPv6网内性能已优于IPv4；移动互联网用户渗透率继续提升，移动互联网流量增速放缓；5G网络建设稳步推进，多主体协同推进态势正加速形成；—《中国互联网发展报告（2021）》<br><strong>主要问题2:个人和企业的税费有多高?对商业组织的公共服务有多好?</strong><br><strong>回答：</strong><br>和世界其他发达国家相比，我国生产税的比例是比较高的。我国税收侧重于流转税而在所得税上的弱化是企业生产税负较重的原因之⼀，因此也导致互联网企业的资金负担加重，而对个⼈税费影响较小。<br>调研&amp;新闻23：<br>和世界其他发达国家相⽐，我国⽣产税的⽐例是⽐较⾼的。 2014 年，中国⽣产税⽐例为15.64%，⽐瑞⼠2.6%的⽔平⾼出13个百分点，和⽇本8.41%、美国6.6%也存在较⼤差距。也就是说，中国企业每⽣产⼀单位的产出需要⽀付更多的税⾦，在原料价格、⼈⼒成本和其他成本不变的情况下，企业的利润空间被压缩，能够⽤于后期⽣产发展或股东分红的部分有限。从⻓远来看对于企业⾃身发展是不利的，在⾏业内部同全球其他国家的竞争也是缺乏优势的。——《中国税收负担究竟有多⾼？》腾讯新闻</p><h1 id="三-評估商业模式"><a href="#三-評估商业模式" class="headerlink" title="三 評估商业模式"></a>三 評估商业模式</h1><h2 id="3-1-总体評估"><a href="#3-1-总体評估" class="headerlink" title="3.1 总体評估"></a>3.1 总体評估</h2><h3 id="3-1-1-商业模式畫布"><a href="#3-1-1-商业模式畫布" class="headerlink" title="3.1.1 商业模式畫布"></a>3.1.1 商业模式畫布</h3><p><img src="https://s2.loli.net/2022/11/30/tHo3PDng6NImUaq.jpg" alt="商业模式画布-修改前.jpg"></p><h3 id="3-1-2-加分项"><a href="#3-1-2-加分项" class="headerlink" title="3.1.2 加分项"></a>3.1.2 加分项</h3><ul><li>客户细分：细分类型多样化，且不同的细分之间存在明显的沟通途径，不同细分之间互惠互利。</li><li>价值主张：产品设计致力于一站化，社区化，创新化。旨在完善客户需求处理的同时，给客户带来具有创新性的体验与优化，符合人性化设计，有助于创造良好的用户群体氛围。</li><li>渠道通路：渠道丰富，线上线下双端结合</li><li>收入来源：收入来源多样化，在创造收入的同时，可以进一步完善用户体验。</li><li>客户关系：按区域、品类、趋好创造社区，有相同或相似的爱好和体验作为连接，客户关系较为紧密。</li><li>关键业务：切合用户的实际需求。</li><li>成本结构：成本结构较为稳定可控。</li></ul><h3 id="3-1-3-減分项"><a href="#3-1-3-減分项" class="headerlink" title="3.1.3 減分项"></a>3.1.3 減分项</h3><ul><li>客户细分：目标群体比较确定，难以吸引新的用户类型加入。</li><li>价值主张：宠物榜单功能易形成不必要的攀比，最坏的情况可能导致宠物受到不当行为的侵害。</li><li>核心资源：部分核心资源不可控，且有风险。</li><li>重要合作：同类产品合作较难达成，部分合作方质量难以保证。</li><li>成本结构：前期投入过大，且缺少对于用户本身的投入。</li></ul><h2 id="3-2-SWOT分析"><a href="#3-2-SWOT分析" class="headerlink" title="3.2 SWOT分析"></a>3.2 SWOT分析</h2><h3 id="3-2-1-核心评估"><a href="#3-2-1-核心评估" class="headerlink" title="3.2.1 核心评估"></a>3.2.1 核心评估</h3><p>经过分析，我们认为<strong>客户界面</strong>是该商业模式的核心，具体论述过程如下：<br>首先，从本<strong>商业模式的特点</strong>来看，PerkyPet聚焦于为⼀切有饲养宠物或了解宠物的想法的⽤户提供服务，构建⼀个集资讯获取、宠物咨询、饲养体验、宠物交易、线下服务、同城互助为⼀体的⼀站式服务平台。因此，本平台的价值主张、成本收入、关键业务的出发点和落脚点都是用户，我们平台的目标是创造一个一站化、创新式的宠物平台，而这些业务的落实，无不需要依托于用户的强连接关系。只有实现客户群体多元化，客户关系的紧密化，渠道通路对客户的透明化，才能保证本商业模式成本收入、基础设施的稳定，才能实现将本商业模式的价值主张从高向低的渗透。一站化是基于用户群体的一站化，是让用户群体感受到切实的便利，并愿意参与到社区建设、同城互助中的一站化。同时，要想做好本平台相较于其他同类型平台的创新，必须依靠用户群体的强连接关系，得到用户群体对于我们创新功能的反馈，我们为用户提供透明且优质的渠道内容，用户为我们提供改进的意见与建议，从而达成产品与用户之间互惠互利的共生关系。<br>其次，从本<strong>商业模式的外部环境</strong>来看，当今的市场环境并不缺少线下宠物门户服务，也并不缺少对于宠物市场术业有专攻的线上平台，真正缺少的，是一个专注于宠物市场，并将线上销售、线上咨询、线上社区与线下门店集成起来的一站式宠物平台。根据调研&amp;新闻11可以看出，“2020年，Chewy在美国宠物电商的市占率超过50%。反观国内，即使身为行业龙头，波奇在中国宠物线上销售平台的市占率也只有1.9%。”究其原因，还是中国宠物市场上线上社区平台与线上销售平台之间的割裂。中国的宠物饲养户，其主要使用的宠物社区，并非专业的宠物社区平台，而多是BiliBili、微博话题、贴吧社区等流量平台，而国内的宠物电商平台，也大多缺少一个环境良好且生态茂盛的用户社区。所以，本商业模式在当今国内市场的突破口，就是在做好一个用户社区的基础上，基于用户社区的使用体验报告和产品评估分析，推送给用户以最优质、最具性价比的宠物用品，在此基础上，形成渠道通路和客户群体相互依赖的一体化宠物社区平台。所以，本商业模式的核心，即在客户界面这一集合中，达到销售与交流的谐和。<br>最后，从本<strong>商业模式的总体评估</strong>来看，本商业模式最大的加分项是客户细分的多样化和客户关系的紧密化。我们的商业模式客户细分按照用户使用软件的方式，分为宠物饲养者、专业兽医、资深博主、宠物店和宠物用品品牌供应商，每种客户细分有明确的交流途径，如：宠物饲养者可以通过咨询功能联系专业兽医对症下药；资深博主在社区中心发布宠物饲养中需要注意的要点，给予饲养者指导；同城社区在用户进行研讨后，推荐该地区最优秀的宠物线下门店给用户；在社区中进行宠物用品使用体验报告后，择选不同价位相对具有性价比的商品，吸引相对应的品牌供应商入驻。最终依靠紧密的客户关系，促进成本结构、收入结构的优化，并形成良好的客户内互助链，从而反哺客户关系的维持。<br>综上所述，客户界面作为专注于客户关系、客户细分与渠道通路之间连通性的画布元素的集合，被我们认定为我们提出的商业模式的核心。</p><h3 id="3-2-2-S-amp-W分析"><a href="#3-2-2-S-amp-W分析" class="headerlink" title="3.2.2 S&amp;W分析"></a>3.2.2 S&amp;W分析</h3><p><img src="https://s2.loli.net/2022/11/30/HX3gualsYVB6wvE.jpg" alt="S&amp;W评分表.jpg"></p><h4 id="打分理由："><a href="#打分理由：" class="headerlink" title="打分理由："></a>打分理由：</h4><ol><li>我们的客户流失度很低。我们为所有宠物饲养者提供了一个高度集成的一站式宠物平台，所有宠物饲养者不仅可以获得所有有关宠物饲养的一手资讯，还可以与宠物博主进行交流，亦或是在线咨询专业兽医，同时可以获取基于社区评分的宠物用品的电商链接。我们为客户提供的完整且高度集成的一站式平台，可以给客户带来相较于同类产品最舒适的服务。同时，我们的免费的基础服务，涵盖了绝大部分我们平台的内容，没有强制收费，并且我们的会员服务也极具性价比，所以我们可以维持客户流失度在一个较低的水平。</li><li>我们的客户被很好地分类。我们按客户使用软件的方式，分为宠物饲养者、专业兽医、资深博主、宠物店和宠物用品品牌供应商；按客户的消费习惯，分为免费用户、普通物料消费用户、宠物购买用户和会员用户。我们会为不同的客户群体提供不同类型的服务，同时结合他们爱宠的信息发出相对应的推送。从而使得不同的客户群体都能获得较为优质且有针对性的服务。</li><li>我们可以做到不断地获取新的客户。在服务方面，我们免费提供宠物信息咨询、宠物用品最优推荐、宠物社区等内容，并为每一位付费用户提供专业兽医咨询、专业宠物饲养员讲解、宠物用品折扣等一系列的定制化服务，这些都为我们产品良好的口碑打下基础。在宣传方面，我们不仅联合流量平台进行引流，还将在多个自媒体平台上运营平台账号，不断地将我们平台的服务以可视化的方式输送给新的用户；同时，与我们平台进行深度合作的线下门店也会为我们APP进行宣传。因此，我们具备一定的不断获取新客户的能力。</li><li>我们的渠道很有效率。首先，我们采用线上线下相结合的方式，线上联系知名博主和资深宠物医师吸引既存客户，并与流量平台合作达成引流；线下探访各地知名宠物门店，达成深度合作，扩充客户群体。线上线下相结合，扩展了我们渠道的广度。其次，我们的渠道会联系宠物用品品牌供应商、知名博主、宠物医师等不同类型的渠道用户，力图为客户群体提供完整、流畅、优质的一体化服务，延伸了我们渠道的深度。最后，我们的渠道是有规划地开展的，在不同的阶段，对不同地区、不同消费习惯、不同需求的客户进行拓展，并安排相对应的渠道，达到有针对性的服务，保证了我们渠道的层层递进。因此，我们的渠道是很有效率的。</li><li>我们的渠道有很好的效果。通过我们设计的合作伙伴渠道和⾃身渠道，我们的产品可以有效地在知名度、评价、购买、传递以及售后五个不同的阶段和我们的客户建⽴联系。我们线上线下相结合的方式，对于我们一体化社区的建设和同城平台的搭建有着至关重要的作用。</li><li>我们渠道连接客户的能力很强。我们的渠道和客户始终是相互依存、相互促进的关系。在购买宠物前，我们联系的宠物博主将会基于客户最权威、最详细的指导；在购买宠物和宠物用品后，我们也会有专门的客服保证客户和商家之间联系的连续且顺畅；在宠物出现疑难杂症时，我们会提供最好的咨询专业医师的机会。因此，我们的渠道始终和客户保持着强联系模式，而我们的客户提供的评价与建议，也将利于我们不断完善渠道通路。</li><li>我们的客户可以较为容易地看到我们的渠道通路。我们的客户在不同的阶段都可以直接地与我们的渠道通路进行对接，在平台内部，客户可以很轻松的找到专业的宠物资讯和咨询渠道；在平台外，客户也可以在线上线下看到我们为了推广并维护社区做出的努力。这一切都源于我们的渠道通路本身便是面向客户并依赖客户的。</li><li>我们的渠道整合度较高。我们平台作为一个一体化的宠物平台，其渠道通路都在该平台通过“社区”的方式进行整合和连接。在社区中，客户可以认识到我们完整的渠道通路，从线上线下宣发，到线上线下合作，都在社区中根据客户不同的需求进行整合推送。</li><li>我们的渠道可以产生较为良好的规模经济。虽然我们前期联系各方渠道商的成本较高，对于不同渠道商的评价准则也较难制定，但当我们的客户基数不断地扩大后，我们的成本可以平摊到每一个单位上，客户也会为我们平台提供各渠道通路的评价。通过对于客户评价和趋好的分析，我们可以以更低的成本去选择更优质的渠道，从而实现良好的规模经济。</li><li>我们的渠道很好地匹配了我们的客户群体。我们的渠道是为我们的客户群体设计，不同的客户群体也是我们不同的渠道不可或缺的一部分，所以，我们的渠道和客户群体有良好的匹配关系。</li><li>我们的客户关系较强。在我们的一站式平台上，客户可以在社区中交流自己的养宠经验、分享自己的萌宠日常，客户与客户的交流不仅可以给客户本身带来良好的体验，而且可以为社区提供充足的分析数据，从而更好地提升我们的服务，树立更好的口碑，吸引更多的客户。从而实现客户内的紧密关联带动客户外的关联一起运转，并不断扩大我们客户的关联范围，加固客户之间的关系。</li><li>我们的关系质量可以正确地匹配客户群体。对于不同的客户群体，我们进行的较为细致的划分，对于每一类客户群体，我们都有相对应的定制化服务。在我们的社区平台上，专业宠物医师和知名博主可以收获相应的知名度和信誉，普通的宠物饲养者可以享受良好的社区氛围和集成式的宠物服务。不过我们的社区同样给了不同的客户群体以跨层面分享的机会，但总而言之，我们的关系质量可以正确地匹配客户群体。</li><li>我们的客户切换成本不算高。作为一个一体化的社区性质平台，我们平台的免费用户相较于付费用户占的比例较大，同时，我们平台的推荐并不能完全覆盖所有养宠家庭的需求，我们的推荐力图给客户提供最优秀的选择，但有时我们或许无法和最合适的品牌供应商达成完全一致的合作，这时与其将客户局限在我们平台上，我们也更愿意让客户在我们平台上了解到信息后，选择自己更加倾向的消费方式。这样虽然使得客户切换成本降低，但是提升了客户使用我们平台的舒适度，从而更好地塑造我们的品牌形象。当然，在我们的一体化平台的建设不断完善后，我们可以使客户在享受到我们一站式平台便利性后，难以切换到其他同类型的平台上。</li><li>我们的品牌是较强的。我们重视我们产品的⼝碑的积累，品牌也是我们重视的地⽅，我们重视用户需求、重视产品的各方面体验细节，从而打造出强大的品牌效益，让⽤户⼀听到我们就会想到这是⼀家重视⽤户想法、 重视细节的公司。</li></ol><h3 id="3-2-3-威胁分析"><a href="#3-2-3-威胁分析" class="headerlink" title="3.2.3 威胁分析"></a>3.2.3 威胁分析</h3><p><img src="https://s2.loli.net/2022/11/30/b2SpcXJQ1VN4IFi.jpg" alt="O&amp;T评分表.jpg"></p><h4 id="打分理由：-1"><a href="#打分理由：-1" class="headerlink" title="打分理由："></a>打分理由：</h4><ol><li>我们的市场分为三类：第一，家里养宠的用户；第二，暂时没条件养但是后续有购买计划，目前先在网上了解各方面知识的；第三，云养宠用户，即不打算购入宠物，只打算在网上刷一刷可爱动物的帖子和视频的。其中第一种人群为主要市场，考虑到已有宠物的家庭比较多，对宠物购买的需求有限，但同时宠物配套用品又需要频繁购买，所以市场不会太快饱和。</li><li>现在市场上同类型的产业有一些，但是大多数功能不齐全，要么只有商城功能（京东），要么只有社区功能（小红书），要么各种功能都有一些但是部分功能不完善（宠物王国），而且京东小红书的相关功能并不纯粹，用户刷宠物的时候往往还会刷到一些该用户感兴趣的别的领域的内容，而PerkyPet是功能齐全的一站式宠物平台，专注于宠物领域，所以我们的竞争对手有，但是竞争力不强。</li><li>如上所说，我们的竞争对手大多数无法做到实现纯粹的一站式宠物平台，所以用户体验过我们的服务之后大概率不会转投竞争对手。</li><li>在相当一段时间内不会变得白热化。因为这方面市场比较空缺，很少有别的软件可以做到一站式服务。目前大多数人养宠的过程大致为：线上或线下联系卖家购买宠物，淘宝京东购置宠物用品，百度、小红书、贴吧等平台学习饲养知识。而以上的过程在PerkyPet中都可以一站式得到解决。</li><li>竞争对手在一定程度上会威胁我们的渠道。因为我们平台的商家和博主在其他平台也大概率会有账号，我们平台创立的初期人气还没积累起来的时候，相同商家或博主的销量和流量肯定不如他们别的平台账号，但是过一段时间有人气了就会好很多。</li><li>我们的渠道不会变得和客户不相关。为了给客户良好、便捷、一站式的饲养体验，我们联系合作伙伴入驻平台（博主、兽医、宠物店等）。我们在微博、贴吧、B站等有广泛用户基础的平台上创建平台的相关话题以及官号，是为了吸引更多客户。平台的智能客服和在线人工客服也保证了消费者与商品供应商之间联系的顺畅，并确保用户的隐私安全、退货要求的正常处理以及后续用品复购的导向。</li><li>我们和客户的关系不会恶化。恶化和客户关系的风险大部分存在于交易纠纷，我们从签约开始就会考察商家的商品质量和售后态度，并且设有专门的官方客服团队，在产生交易纠纷时消费者可以申请客服介入，客服会根据实际情况公平公正地解决问题，尽量满足客户的诉求。同时对于长期差评多纠纷多的商家，平台也会酌情勒令商家退出平台。</li></ol><h3 id="3-2-4-机会分析"><a href="#3-2-4-机会分析" class="headerlink" title="3.2.4 机会分析"></a>3.2.4 机会分析</h3><p><img src="https://s2.loli.net/2022/11/30/IslPkvDbpN4xtWV.jpg" alt="机会评分.jpg"></p><h4 id="打分理由：-2"><a href="#打分理由：-2" class="headerlink" title="打分理由："></a>打分理由：</h4><ol><li>增长的市场会带来更多种类的客户，同时也会带来更多种类的渠道通路。作为一个一站式的宠物平台，我们需要根据市场需求的增加开发更多更完善的功能，并吸引更多的客户群体加入我们平台，并结合新增长的市场，为已经和我们高度融合的客户群体提供更优质、更符合市场规律的服务。所以，我们的产品有较大机会从增长的市场中获利。</li><li>我们能够服务新的客户群体。我们的平台本身集成了一切与宠物相关的功能，是面向所有已经饲养了宠物和有意愿饲养宠物的客户的，甚至无饲养宠物的意愿，但是对于宠物很感兴趣的群体也可以在我们平台的社区内获得较为良好的体验。所以我们的平台所涉及的客户群体是广泛的，但是，由于我们是一个定向的做好宠物社区的平台，我们也难以兼顾到其他领域的新的客户群体。我们能做的，是针对所有对宠物相关内容有一定倾向的客户，提供尽可能完整且全面的服务。</li><li>我们有能力通过更细致的客户分类来更好地服务客户。我们对于不同类型的客户提供不同的服务，对于不同类型的宠物，我们当然将给予不同的服务内容，让不同的宠物饲养家庭都能得到优质的服务。在我们对于客户群体进行更细致的分类后，我们也可以更有针对性地提供相关推送，我们合作的专业宠物人士也可以提供更加对症下药的建议，从而为更细致的客户群体提供更优质的服务。</li><li>考虑到我们的宠物平台是基于现实世界而诞生的线上社区，我们应该将线上线下相结合的方式贯彻到我们的每一个渠道通路中。在线上，我们联合多方流量平台，对可能存在的潜在用户进行地毯式的信息轰炸；在线下，我们将我们的宠物门店合作方尽可能多地覆盖到不同的城市，形成规模效应。最终达到提升我们渠道的效益和收益的目的。</li><li>我们有能力很好地整合我们的渠道。虽然我们的渠道划分非常明晰，但为了完善客户的体验，我们提供的服务是一条龙式的，即从宣传开始，到客户实际体验我们的付费服务，再到付费服务后的售后阶段，我们通过紧密对接的客服服务，将每一个环节的渠道都关联起来，在后面的渠道阶段，同样可以溯源到前面的渠道阶段可能出现的服务上的问题，从而有效地整合我们的渠道。</li><li>我们很难找到补充性的新合作伙伴。作为一个一站式宠物平台，我们在设计之初就尽可能多地与渠道商讨论了可能给我们提供的渠道，从而使得我们的功能更加完善。所以除非市场需求发生了较大的变化，或出现了较大的市场基于，否则想要在运营过程中找到补充性的新合作伙伴，是较为困难的事。</li><li>我们平台实质上并非作为直接服务客户的单位，我们更多地是作为一个第三方性质的中介进行客户与渠道的对接。比如，在客户选择了付费项目后，我们为客户提供专业宠物人士的联系方式或宠物品牌的折扣途径，之后，我们将监视双方的交流过程，确保我们的渠道商给予我们的客户尽可能优秀的服务。如果我们平台加强直接服务客户的力度，那样成本的增加远大于从中获得的收益，所以我们有一定难度通过直接服务客户来提高收益率。</li><li>我们可以更好地匹配渠道和用户群体。当前我们能够做到的，是针对不同用户的付费情况，提供相对应的服务，但我们最终的目标，是针对每个用户的宠物情况，结合其付费情况，提供有针对性的服务。因此，我们还有很大的改进渠道和用户群体匹配合适度的机会。</li><li>我们可以更好地提升客户跟进的效果。我们的平台可以很容易使用户产生黏性，作为一站式宠物平台，PerkyPet致力于打造所有的宠物相关的功能，优化用户的使用体验，同时我们的运营团队也会对入驻的商家进行监督，对社区发布的内容进行筛选，打造和谐的交易环境和社区环境。</li><li>我们与客户的关系非常紧密。我们非常注重用户的使用体验，为每个用户定制化服务，有专业的客服团队处理用户的意见，用户和商家发生交易纠纷时也可以申请客服介入。同时对于社区发布的内容，我们也有团队进行审核，及时删除违规信息，为客户营造一个良好的社区环境。</li><li>定制化是有很大的改进空间的。我们会根据每个用户的宠物档案，为客户量身定制推荐适合的饲料和宠物用品，宠物生病时精确推送擅长该领域的医师，在社区给用户推送其可能喜欢的内容。而这些功能的实现需要公司的运营团队进行大数据算法设计，来保证推送的准确度。</li><li>我们有一定的方法来防止用户切换。首先我们有宠物档案，用户为了确保档案不丢失，一般不会选择切换。其次我们的服务具有针对性，对于每个用户的每个宠物，我们都有相关的饲养建议，也会定期提醒喂食、洗澡、驱虫等，良好的服务有助于用户黏性的形成。此外，互助有爱的社区环境也会促使用户选择PerkyPet，用户可以在社区模块分享自己饲养宠物的趣闻趣事、寻找志同道合的宠物同好、交流宠物饲养过程中遇到的问题和心得，萌宠榜排行靠前的宠物也会获得更多的曝光量。</li><li>我们没有识别并“炒掉”没有利润的客户。这些客户仍可以使用平台的大部分基础功能，尤其是我们的社区功能很需要日常能活跃的用户，这些用户的浏览、点赞、评论对我们都是有价值的，一方面可以提升博主的创作热情，另一方面也有助于后台的大数据分析。没有利润的客户只是目前没有利润，未来也是有可能为我们带来价值的，我们要做的就是尽可能留住这些用户，让他们对平台有一个良好的印象，从而在未来更有可能在平台中消费。此外，出于口碑考虑，也不能剔除这些用户，否则会让外界觉得我们唯利是图。</li><li>我们不需要让某些客户关系变得可以自动维护。我们的实质是个第三方中介平台，和客户的关系会随着交易的终止而终止。大多数情况下，用户都在自己浏览和使用平台，需要联系平台的时候很少，基本上只会在交易出现纠纷或者对平台提出意见的时候才会联系人工客服，所以我们不需要让某些客户关系变得可以自动维护。</li></ol><h1 id="四-藍海战略"><a href="#四-藍海战略" class="headerlink" title="四 藍海战略"></a>四 藍海战略</h1><h2 id="4-1为什么选择客户影响这一点探究蓝海战略？"><a href="#4-1为什么选择客户影响这一点探究蓝海战略？" class="headerlink" title="4.1为什么选择客户影响这一点探究蓝海战略？"></a>4.1为什么选择客户影响这一点探究蓝海战略？</h2><p>在我们的商业模式种采取蓝海战略的主要目的是要通过寻求差异化，创造新优势，避免在同质化的饱和市场中做大量的无用消耗性竞争，在先前少有涉足且具有潜力的地方与本行业其他竞争者拉开差距，问题在于，哪些方面，什么样的差异化才是有意义的?结合上文的分析论述，我们选择从成本影响，价值主张，客户影响三个方面中选择客户影响作为我们蓝海战略的主要落脚点，理由如下。<br>从<strong>商业模式环境</strong>来看。我们的市场影响力所面向的客户群体类型较为丰富，有宠物飼養者、專业兽医、资深博主、宠物店和宠物用品供应商，不同的客户群体有不同的独特诉求，而作为一个平台化产品，我们的所有关键业务咨询获取、宠物咨询、饲养体验、宠物交易、线下服务、同城互助，也都是为了把握住每个用户群体的痛点而提供的。而在行业影响力上，我们行业供应商（宠物用品生产商）和价值链的关键参与者（线下宠物店，宠物医生）既是我们平台的核心资源重要组成部分，同时也是我们的目标服务客户。行业关键趋势是我们蓝海战略具体如何实施的一个关键点，产品的革新发展都基于对未来行业趋势的敏锐嗅觉，而如今宠物行业呈现的趋势就是”<strong>自研化、綠色化、智能化、电子化、高端化、定制化“。</strong>具体怎样做到智能、定制、高端，核心需求就是以客户为本，想用户之所想，精准把握用户需求的细节，给用户被服务感，社区融入感这些独特体验，方能和竞争者之间建立起护城河式的独有优势。此外，鉴于当前全球市场经济环境的放缓，消费的低迷，如何处理客户群体对我来说有新的挑战，但更多是机遇，线下宠物商店&#x2F;宠物医院处于危机下发展的需要，更加可能投向我们平台的怀抱，提高自身在当地的曝光度，获客量，建立起互利关系。<br>从<strong>商业模式的评估</strong>来看，我们的核心优势在于客户方面，我们的客户流失率低，渠道连结客户能力强，渠道良好匹配客户群体，且能够产生规模经济，在所以客户影响应该是我们始终一以贯之的主要创新与改进方向。尽管在客户方面我们有一定的优势，但仍有一些威胁需要注意，宠物经济目前可能会较快的饱和，同时我们对渠道的掌控力还不够，竞争对手会对此产生威胁。我们在客户影响上还有一些可以把握住的机会需要抓好，如在增长市场获利，进一部将渠道与客户群体匹配，将客户与我们的关系连接的更加紧密。</p><h2 id="4-2针对客户影响的蓝海战略的行动框架"><a href="#4-2针对客户影响的蓝海战略的行动框架" class="headerlink" title="4.2针对客户影响的蓝海战略的行动框架"></a>4.2针对客户影响的蓝海战略的行动框架</h2><h3 id="客户群体"><a href="#客户群体" class="headerlink" title="客户群体"></a><img src="https://s2.loli.net/2022/11/30/EVRtwlioJxj5u1B.png" alt="蓝海战略.png">客户群体</h3><p>在3.1.3中，我们认为PerkyPet平台的目标群体比较确定，难以吸引新的用户类型加入，因此我们对宠物市场中的人群进一步细化分析。同时，根据2.1.2的分析，目前市场上的潜在宠物饲养着数量较大，等待我们去发掘，于是在客户群体方面，我们<strong>新增“云养宠”用户</strong>，这部分用户从最初的“宠物饲养者”中区别出来，他们往往喜欢动物，但由于时间精力，财力，或是精力的原因，还没有开始实际养宠，这部分用户同样可以从我们社区中浏览他人分享的宠物日常、趣图中获得乐趣，尽管他们不会成为平台的重要收入来源，但仍然可以为我们贡献社区活跃度，同时，他们通过PerkyPet平台的模拟养宠功能，可以获得对某种感兴趣宠物的饲养知识，未来很可能转化为真正的饲养着，成为平台的核心客户。对这部分客户的强调实际上<strong>强化</strong>了我们<strong>一站式服务</strong>的理念，即便是尚未开始养宠的人，也能从平台获取有用的信息。<br>在平台具有一定规模后，我们希望一定程度上<strong>削减资深博主</strong>在社区中的<strong>影响力</strong>，不像微博那样设置“大V”以强化大博主和普通用户之间的区别，我们希望平台用户的发言地位能够相对平等，主要以内容质量的好坏自然产生热度，而非平台刻意干预。</p><h3 id="客户关系"><a href="#客户关系" class="headerlink" title="客户关系"></a>客户关系</h3><p>客户关系方面我们<strong>增加私人服务，</strong>在2.3.1中我们发现，当下行业技术趋势呈现”自研化、綠色化、智能化、电子化、高端化、定制化“的趋势，对此我们提供如下业务，用户可以向平台提供宠物类型，健康状况，饮食状况，护理计划，日程安排等，平台可以为客户定制化的提供日常饲养建议，宠物食量、饮食结构规划，喂食时间安排，定期护理提醒等细致服务，这一服务是我们加值服务中定制化的体现。由于这一服务可以渗透到用户养宠日常的方方面面，因此可以在不花费太多额外成本的同时大大提高用户粘性。</p><h3 id="渠道通路"><a href="#渠道通路" class="headerlink" title="渠道通路"></a>渠道通路</h3><p>渠道通路方面我们将最初版本中的线上合作渠道拆分为线上在流量平台投放的广告业务，以及自营的其他平台账号。<br>计划在社区有一定规模时，<strong>削减流量平台广告</strong>，此时社区已有足够的宠物圈内知名度、影响力，适度削减在其他流量平台（微博，小红书，知乎等）的引流渠道也无妨，可以<strong>降低一定的成本</strong>。<br>并且我们计划在此时<strong>新增线上自媒体运营</strong>，因为社区有了较为丰富的内容，我们可以在多平台运营账号，分享有趣、专业的内容，由于宠物类话题本身具有娱乐性，传播度会比较好，多平台账号的运营可以进一步引流和塑造社区形象，账号运营开销比流量平台广告开销更低，塑造品牌效果更好。</p><h3 id="收入来源"><a href="#收入来源" class="headerlink" title="收入来源"></a>收入来源</h3><p>收入来源方面我们<strong>新增</strong>了<strong>周边产品</strong>，<strong>店家推广</strong>，<strong>付费咨询</strong>三项，周边产品并非主要业务，周边载体也主要是价格较低的小商品，或实用宠物用品，生产方面也主要依赖代工，主要目的是为了通过周边强化品牌符号，塑造品牌形象，提高用户粘性。<br>根据2.2.1，2.2.2的分析我们知道，宠物店和专业医生是我们商业链条上的关键玩家，需要牢牢把握住这部分客户，因此，我们新增的收入来源需要能够实现和他们互利共赢。店家推广面向与我们平台合作的线下实体宠物店，通过一定的推广费用，我们可以为这些宠物店在同城搜索中提供较高的曝光度。付费咨询面向专业宠物医生，平台为其提供收费咨询渠道，从中抽成，优秀专业的兽医会在本平台有良好的客户评价，为自己的宠物医院引流，以此提高专业宠物医生使用本平台的意愿，<strong>提高社区交流</strong>活跃度。</p><h1 id="五-更新过的商业模式畫布"><a href="#五-更新过的商业模式畫布" class="headerlink" title="五 更新过的商业模式畫布"></a>五 更新过的商业模式畫布</h1><p>蓝色标签为新增项，黑色为删除项<br><img src="https://s2.loli.net/2022/11/30/wkZrPKtlYOiC5TX.png" alt="更新画布.png"></p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>我们新的商业模式以一站式宠物服务为中心，进一步优化了商业模式画布的结构，细致化我们的主要业务，客户群体，丰富了收入来源，削减了成本结构。平台模式比原先的可行性和竞争力都更强。<br>在客户群体上我们进行进一步细分，注意到相对边缘的群体，即“云养宠”用户，他们一般不被传统服务者所注意到，但这部分用户在未来很有可能在我们平台的帮助和引导下真正开始养宠，转化为核心用户，在上个版本中，我们尽管已经提出了模拟养宠这一关键业务，但并没有将这一业务的主要目标在客户细分中提出。<br>在客户关系上面，除了做一个用户自发创造共享的社区，内容生产者、接收者间的管道，商家和消费者间的桥梁，我们还会做为客户定制化、私人化服务的提供者。<br>由此我们在关键业务中新增定制化饲养这一项，除了重视渠道的价值，我们更要注意每一个人的价值，这样才能更好得顺应这个时代服务向“定制化”“精品化”发展的趋势。<br>渠道通路方面我们在适量减少流量平台广告的同时新增自媒体运营渠道，在有一定社群规模的情况下，运营多个平台账号相较于传统广告成本更低，也能更好塑造我们的品牌影响。<br>收入来源上我们在明确渠道收费和会员收费为核心的前提下，细化和丰富出了周边产品，店家推广，付费咨询几项次要收入来源。<br>因为一些小规模自营产品的加工，我们在重要合作方面需要新增代工厂这一项。另外，我们认为云服务属于当下许多互联网产品构建的基础，云服务商属于一个常规合作对象，不必特别加在我们的重要合作中，故删除该项。</p><h3 id="变化要点"><a href="#变化要点" class="headerlink" title="变化要点"></a>变化要点</h3><h4 id="新增："><a href="#新增：" class="headerlink" title="新增："></a>新增：</h4><p>客户群体：“云养宠”用户<br>客户关系：私人服务<br>渠道通路：线上自媒体运营<br>关键业务：定制化饲养<br>收入来源：周边产品、店家推广、付费咨询<br>重要合作：周边代工厂</p><h4 id="删减："><a href="#删减：" class="headerlink" title="删减："></a>删减：</h4><p>重要合作：云服务商</p><h3 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h3><ul><li>新增**”云养宠”用户<strong>主要是体现出了我们</strong>一站式服务<strong>的价值主张，同时也是</strong>宠物饲养者**的潜在转化用户</li><li>新增<strong>私人服务</strong>是我们<strong>定制化</strong>的价值主张的体现</li><li><strong>私人服务</strong>主要以<strong>定制化饲养</strong>这一关键业务提供给用户</li><li>削减<strong>流量平台广告</strong>，节省<strong>广告推广</strong>的成本结构</li><li>新增<strong>线上自媒体运营</strong>，部分代替<strong>流量平台广告</strong>的宣传作用，会有一定的<strong>运营消耗</strong></li><li>新增<strong>周边产品</strong>这一收入来源，相应的增加<strong>周边代工厂</strong>这一重要合作。 </li><li>新增<strong>店家推广</strong>、<strong>付费咨询</strong>两个收入来源，在这部分收入上平台和宠物店、宠物医生是互利关系，因此可以减少专门去吸引宠物店、宠物医生入驻平台花费的成本，实现<strong>成本缩减</strong>的价值主张</li></ul>]]></content>
      
      
      <categories>
          
          <category> 煩人作業 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 需求與商業模式創新 </tag>
            
            <tag> PerkyPet </tag>
            
            <tag> 項目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PerkyPet項目-項目启動文檔</title>
      <link href="/2022/10/10/PerkyPet%E9%A0%85%E7%9B%AE-%E9%A0%85%E7%9B%AE%E5%90%AF%E5%8B%95%E6%96%87%E6%AA%94/"/>
      <url>/2022/10/10/PerkyPet%E9%A0%85%E7%9B%AE-%E9%A0%85%E7%9B%AE%E5%90%AF%E5%8B%95%E6%96%87%E6%AA%94/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一-基本信息"><a href="#一-基本信息" class="headerlink" title="一.基本信息"></a>一.基本信息</h2><h3 id="1-项目题目"><a href="#1-项目题目" class="headerlink" title="1.项目题目:"></a>1.项目题目:</h3><p>PerkyPet——一站式宠物平台</p><h3 id="2-度量数值"><a href="#2-度量数值" class="headerlink" title="2.度量数值:"></a>2.度量数值:</h3><ul><li>总要点数：44</li><li>平均要点数：5</li></ul><h2 id="二-项目介绍"><a href="#二-项目介绍" class="headerlink" title="二.项目介绍:"></a>二.项目介绍:</h2><p>PerkyPet聚焦于為一切有飼養寵物或了解寵物的想法的用戶提供服务，构建一个集资訊獲取、寵物咨詢、飼養体驗、寵物交易、线下服务、同城互助為一体的一站式服務平台，为用户提供优质的个性化服务。处于迷茫中的小白可以通过平台一鍵獲取对应寵物的手把手飼養教程，注意事项等信息;对寵物物种或品种猶豫不決的用戶可以通过平台的体驗工具先進行全方位的模擬飼養以充分了解对应寵物的特性，避免实际饲养时可能出现的种种问题;專业的內容博主與持職业资格證書的医師也可獲得一個分享知识、服务客户、创造收入的工作平台;各大寵物店可與本軟件达成合作以獲得宣傳，吸引客戶，同时本軟件也提供各种寵物用品的销售渠道以及完善的售后保障，在交易过程中通过交易全程监督等措施保证交易可靠及隐私安全，全力保障交易公平和透明，在运輸过程保證寵物健康舒适。同时，我们会尤其注意社区环境氛围引导、和公众一起共同建立和谐、健康、完善的互联网宠物社区环境。</p><h2 id="三-商业模式画布与要点介绍"><a href="#三-商业模式画布与要点介绍" class="headerlink" title="三.商业模式画布与要点介绍"></a>三.商业模式画布与要点介绍</h2><p><img src="https://s2.loli.net/2022/11/29/RXY675EJ1h2Zmxb.jpg" alt="商业模式画布——PerkyPet.jpg"></p><h3 id="1-客户细分"><a href="#1-客户细分" class="headerlink" title="1. 客户细分"></a>1. 客户细分</h3><ol><li>按照客户使用该软件平台的方式来分:</li></ol><ul><li>寵物飼養者：有養寵傾向，正在養竉的小白或愛好者，可以<strong>通过平台獲取资訊，學習知識，交流經驗，求助專业人士</strong>;可以通过我们精心设计的多样化的<strong>在线模拟宠物饲养</strong>學習、适应養寵、評价相应寵物與自己的契合度，比如常见的猫狗，用戶可以通过在线模拟教程瞭解相应品种的喜惡、作息飲食排泄习慣、活潑程度，可以上手實踐照顧方法;对于饲养难度较高，注意细节较多的鱼虫、爬宠、鼠类宠物，这一功能会对用户起到更大的帮助。用戶也可通过平台<strong>購买養寵工具</strong>、<strong>预約医療清洁</strong>、<strong>预約疫苗</strong>、<strong>辦理各种證件</strong>，忙碌时还能通过平台<strong>同城請人上門</strong>代為照顧寵物等等。</li><li>專业兽医：有經驗，持有效兽医职业资格证书的人士可以入駐平台，也可挂靠自己的診所，我們为他们提供了一个平台<strong>分享寵物養育與基本衛生救助知识</strong>，也可以為用戶進行<strong>一对一答疑</strong>，或者為自己的診所吸引客戶。</li><li>资深博主：拥有一定社区影响力<strong>内容产出</strong>者，最好在 bilibili，小红书，抖音等平台有一定的粉丝基础，在社区分享宠物养育经验，宠物日常等内容。主要目的是扩大平台影响力，打下用户基础，提高社区活跃度，丰富用户产出内容。</li><li>寵物店：认定为有<strong>合规营业能力的线下宠物店</strong>，可通过入驻平台提高自身曝光度，吸引同城客户，客户线上购买宠物，预约宠物服务。</li><li>宠物用品品牌供应商：生产宠物饲料，玩具等各种用品等供应商，平台以及平台博主可帮助其提供品牌推广，同时为宠物饲养者提供透明的<strong>价格信息渠道</strong>，相对<strong>优惠的购买渠道</strong>。</li></ul><ol start="2"><li>按照客户的消费习惯来分:</li></ol><ul><li>免费用户：没有在此平台消费的明显的意愿，但是希望通过平台分享自己饲养的宠物的日常生活，或是希望在平台的社区功能中浏览他人分享的养宠经历，学习养宠知识，交流养宠心得，咨询宠物问题。此部分用户群体在长时间使用此平台后，有较大的几率成为一部分付费群体。</li><li>普通物料消费用户：有一定的在此平台购买宠物饲料、药物、玩具、住所等一系列宠物物料的倾向，我们为他们提供一个集成式的宠物物料购买途径，针对其正在饲养的宠物类型以及其在一定时期内在此平台的消费水平，提供相应的第三方宠物用品品牌供应商的商品信息；同时，我们也会为他们提供咨询专业宠物医师的渠道，他们仅需要支付少量的咨询费，便可以得到入驻该平台的兽医的反馈、建议与医治。</li><li>宠物购买用户：在此平台浏览了大量的自己未饲养宠物类别的相关资讯，有较强烈的在此平台购买宠物的意愿。我们为此类用户提供详实的宠物信息、饲养宠物需要事先了解的注意要点，并在商城系统中提供经过我们严格筛选后的商家的购买与联系方式，保证交易过程的公平、交易信息的透明、交易售后的完备。此外，通过我们提供的专为宠物饲养新人服务的体验工具，用户可以在模拟饲养的过程中全方位地体验宠物饲养细节，以确认自己是否适合饲养该类型的宠物，尽可能的减少用户在购买完后，后悔饲养该类宠物的情况的发生。</li><li>会员用户：已经养成了在此平台消费购物的习惯，并购买了月卡制&#x2F;终生制会员的用户，我们将为此类用户提供商品折扣、一对一咨询等服务，服务等级与会员等级相关。</li></ul><h3 id="2-价值主张"><a href="#2-价值主张" class="headerlink" title="2. 价值主张"></a>2. 价值主张</h3><ol><li>一站式服务</li></ol><p>PerkyPet将宠物饲养要点、宠物与物料购买、售后服务、宠物医治问询等众多与宠物饲养相关的内容集成为一体，致力于打造一个为用户解决一切与宠物相关问题的一站式服务平台，最终形成一个高度社区化、一体化的一流宠物平台。</p><ol start="2"><li>便利性</li></ol><p>用户可以在社区中随时随地获取宠物的相关资讯；也可以在PerkyPet线上就诊、或是通过该平台的同城交流模块获取自己所居住区域口碑较好的宠物线下门店&#x2F;宠物医院。从而为用户提供最大化的便利化服务。</p><ol start="3"><li>定制化</li></ol><p>在支付一定费用或成为会员后，用户可以享受专业的宠物博主和宠物医师的一对一服务，从而使用一种更加专业的方式解决所饲养宠物出现的部分难以解决的问题。</p><ol start="4"><li>社区交流</li></ol><p>用户可以在社区模块分享自己饲养宠物的趣闻趣事、寻找志同道合的宠物同好、交流宠物饲养过程中遇到的问题和心得。同时，用户在社区内分享的内容也可以设置为所有人可见，用户在浏览社区广场时可以点赞、评论他人分享的内容，最后会在统计点赞数、内容质量等一系列要素后，形成萌宠榜，记录最受欢迎的宠物排行。通过这种方式，PerkyPet帮助用户营造一种互助友爱的社区环境，进而增加平台日活、提高用户黏性、打造平台品牌效应。</p><ol start="5"><li>成本缩减</li></ol><p>在用户层面，PerkyPet力图为养宠爱好者提供最好的宠物与物料购买渠道，尽量为用户提供性价比最高的商家信息，从而帮助用户实现成本缩减。在平台层面，我们作为第三方平台提供商家与客户之间的交互，从而缩减了平台原料生产、保存的成本。</p><ol start="6"><li>创新性</li></ol><p>与市面上的同类型产品不同，PerkyPet为用户<strong>提供了宠物的体验功能，用户可以在购买宠物前，通过体验模块事先了解宠物的生活习性、饲养要点，从而判断自己是否适合饲养该类型的宠物</strong>；同时，该功能还可以为希望饲养、但暂时无法提供完备的硬件条件的用户提供模拟饲养宠物的良好体验，从而扩大了用户群体。通过推广这样一个创新型功能，塑造出别具一格的品牌形象。</p><h3 id="3-渠道通路"><a href="#3-渠道通路" class="headerlink" title="3.渠道通路"></a>3.渠道通路</h3><ol><li>自身渠道：</li></ol><ul><li>知名度推广阶段：平台建设初期，通过搭建线上线下两支销售团队，力图扩大平台的知名度。<ul><li><strong>线上销售团队负责联系知名博主和资深宠物医师</strong>，吸引在宠物市场上有较大影响力的个人、团队以及专业的知识产出者入驻平台，平台方给予他们一定额度的签约费，邀请他们在平台上持续发表推文，相对应的，受邀请的知名宠物博主通过自己在其他平台的账号吸引粉丝使用本平台，从而在线上层面扩充用户群体。</li><li><strong>线下团队负责在各城市的宠物店、宠物医院等物色口碑较好的线下门店</strong>，按照从超一线城市到一线省会城市，再到二线、三线城市的顺序（在此阶段应该放弃四线、五线城市，待用户群体逐渐稳固后再开始拓展在四线、五线城市的业务），与各城市的线下门店达成合作，PerkyPet在同城互助模块为来自不同城市的用户提供相应地区的线下门店推荐。通过这种方式，可以完善本平台的服务层面的完整性，从而提高PerkyPet的使用价值。</li></ul></li><li>线上销售阶段：在平台完成知名度推广阶段后，平台的重心转向巩固用户群体并发展新生代用户上。<ul><li>在微博、贴吧、B站等有广泛用户基础的平台上创建平台的相关话题以及官号，向此类平台输送PerkyPet的推广信息。</li><li>在各大应用商店提高本平台在榜单上的排名，进而提高在应用商店以及各搜索引擎中关键词搜索的优先级，达到导流的目的。</li><li>在用户运营层面，通过使用PerkyPet的用户带动身边同样饲养宠物的潜在客户加入，有相识相知的用户群体的加入有利于社区文化的发展。</li><li>吸引更多的第三方宠物与宠物用品品牌供应商入驻平台商城，使用户在本平台购买宠物用品时可以享受到在其他平台难以享受的折扣，从而吸引平台的免费用户和非本平台用户在此平台消费，达到巩固用户基础从目的。</li></ul></li><li>售后服务阶段：PerkyPet将为用户提供购买后与饲养中两个层面的售后服务。<ul><li>购买后：当用户在PerkyPet购买商品后，本平台将通过智能客服和在线人工客服保证消费者与商品供应商之间联系的顺畅，并确保用户的隐私安全、退货要求的正常处理以及后续用品复购的导向。</li><li>饲养中：当用户在饲养宠物时出现了一些难以解决的问题时，PerkyPet将为用户提供专业宠物博主与宠物医师的咨询服务，同时为用户提供其所在城市优秀线下宠物门店的联系方式。</li></ul></li></ul><ol start="2"><li>线下合作渠道：线下团队與寵物店达成合作后，应建立相互宣傳引流的关係，对于愿意进一步深度合作的門店，可以拓展出统一标淮化的业務，如寵物清洗、習慣培養等等，而平台也會展示达成合作的商家的詳細信息，並根據用戶的位置、需求、消费水平作出智能推荐，寵物店也可以选择从我們的渠道進货，以达到更统一化的标准。與本平台达成合作的寵物医院、診所可以选择接入我們的系統，实时更新可做项目的數據，如健康檢查的预約情怳，疫曲剩餘量，並開放预約接口，供平台智能計算后向用戶提供便捷的寵物就医服務。医師在閒暇時还可在平台上答疑或發布资訊，吸引顧客。平台會不定期会放出專属的优惠券以达成双向引流。</li><li>线上合作渠道：寵物用品的供应商、品牌方，各大平台知名的寵物博主。</li></ol><h3 id="4-收入來源"><a href="#4-收入來源" class="headerlink" title="4.收入來源"></a>4.收入來源</h3><ol><li>廣告收费：APP加載页、资訊內容等部分可以设置广告推广位置，合作方與品牌方可支付一定推廣费以使它們的門店或產品位于更顯眼、更频繁出現的位置；平台也可以通过社区博主广告接单当中获取一定收益。</li><li>渠道收费：本平台商城可以接入合作方的产品进行销售，通过提供交易平台和推广收取一定的渠道服务费。</li><li>会员收费：用户群体可分为普通用户，会员用户，深度会员。普通用户大多仅仅使用本平台的社区、资讯功能，消费意愿低。付费购买会员资格的用户基本有一定的消费欲望，会在本平台进行一些专业咨询，线下预约，产品购买的消费，对于这些用户我们可以提供一定的消费优惠券。更进一步的深度会员需更高的开通价格，这一类用户除了对于宠物的必要性消费外，可能会更加深度参与到社区当中，这些用户会享有一些增加其社区体验的服务，如虚拟宠物定制造型、宠物pk榜助力，定制个人主页等。</li></ol><h3 id="5-客户关系"><a href="#5-客户关系" class="headerlink" title="5. 客户关系"></a>5. 客户关系</h3><ol><li>社区:让用户可以交流知识和经验，分常寵物日常。用戶可以制作寵物的成長历程、3D形象、声音集锦，还可以<strong>參加宠物魅力比拼，刷排行榜，提高用户的社区参与度</strong>。到过線下門店的用戶也可發表評价與流程以幫助其他用戶作选择。同时，也能帮助平台本身更好的了解用户的需求。專业人士及博主的文章则会集成到其他專栏里，與生活社区区分开來。</li><li>內容推荐:根據用戶設置好的信息，經常浏覽的內容，从而对其感兴趣的内容进行预测，推算其購买欲望，綜合作出內容、商品、服務、門店推荐，並智能化地给出优惠誘導用戶消费，在用戶使用一段時間后，精化其感兴趣内容的推荐，留住用户。</li><li>自助服务:用户可以充值内部的虚拟货币，从而購买付费虛擬內容或者支持其他用户所发布的优质内容，用户可以随时随地管理修改自己的用户信息，未經平台鎖定(如已產生价值或收錄進專栏的情況)的已發布內容</li></ol><h3 id="6-核心资源"><a href="#6-核心资源" class="headerlink" title="6. 核心资源"></a>6. 核心资源</h3><ol><li>实物资源：官方网站、移动端APP</li><li>知识资产：品牌、社区用户产出内容（UGC）</li><li>人力资源：销售团队、软件工程师团队、法务部门、专业宠物饲养人士、公司战略发展决策团队</li><li>金融资产：用于雇佣关键人员的可分配的公司股票期权池、充足的流动现金、巨大的信贷额度</li><li>渠道合作：与宠物用品品牌的长期合作；线下宠物店、宠物医院的入驻</li></ol><h3 id="7-关键业务"><a href="#7-关键业务" class="headerlink" title="7. 关键业务"></a>7. 关键业务</h3><ol><li>社区平台：为用户提供一个可以分享养宠经验、萌宠日常以及交流养宠心得的社区化平台</li><li>同城服务：为用户提供其所在城市信誉较好的线下宠物门店的相关信息，同城的用户也可以进行一定程度的互助</li><li>专业咨询：为用户提供宠物博主以及宠物医师的联系途径</li><li>资讯推送：为用户提供宠物饲养中需要注意的要点的资讯，提供介绍宠物的性格与生活习性的推文</li><li>模拟饲养：为用户提供模拟宠物饲养日常以及在日常生活中常见问题的模拟服务，用户可以在该模拟饲养功能中体验自己是否适合饲养该类型宠物，或是单纯地获得云养宠的快乐</li><li>线上购物：为用户提供购买宠物与宠物用品的交易平台</li><li>线下服务：为用户提供线下宠物店的搜寻，并可线上预约洗护、寄养、训练等服务。</li></ol><h3 id="8-重要合作"><a href="#8-重要合作" class="headerlink" title="8. 重要合作"></a>8. 重要合作</h3><ol><li>非竞争者</li></ol><ul><li>线下宠物门店：与线下门店建立合作，我们给用户推荐同城的优质线下门店，通过app为这些线下店引流，相应的，线下门店为我们提供广告位和宣传。</li><li>流量平台：和B站、抖音、小红书等流量平台合作，实现为平台宣传引流</li><li>第三方宠物用品品牌：我们为该类型品牌提供销售渠道，从而完善平台的使用价值</li><li>高影响力宠物达人：包括知名宠物博主、专业宠物医师等，我们签约他们为我们的平台提供咨询服务，他们为我们平台引流</li><li>云服务商：提供服务器，存储用户数据</li></ul><ol start="2"><li>竞争者</li></ol><ul><li>提供的服务重合的其他宠物服务平台:利用自己的獨特优勢與較大的平台(E宠、人人宠、波奇宠物等)进行合作，可以推出聯名商品進行相互引流，也可以互相利用平台強项提供更优質的服務，擠佔其他小平台的生存空間，供日后進行收購、人才吸取等操作。</li></ul><h3 id="9-成本结构"><a href="#9-成本结构" class="headerlink" title="9. 成本结构"></a>9. 成本结构</h3><p>固定成本：</p><ul><li>App开发、运维人工成本</li><li>签约医師和長期內容提供者的人工成本</li><li>品牌供应商的长期合作</li><li>服务器租用以及其他硬件维护成本</li><li>办公场地租用费</li><li>社区环境维护、客户服务人员成本</li></ul><p>可变成本：</p><ul><li>先期流量引导，社区建设，面向线下宠物店、宠物医院的平台推广。</li></ul><h2 id="四-关键要点关联"><a href="#四-关键要点关联" class="headerlink" title="四.关键要点关联"></a>四.关键要点关联</h2><h3 id="1-重要合作-gt-核心资源"><a href="#1-重要合作-gt-核心资源" class="headerlink" title="1.重要合作-&gt;核心资源"></a>1.重要合作-&gt;核心资源</h3><p>由于PerkyPet是一个平台化产品，故许多核心资源必然离不开与各方面的合作，通过合作实现互利共赢降低成本的目的。例如与众多宠物用品品牌的合作，通过我们专门化的宠物社区为这些品牌、供应商提供一定的推广，换来供应商在我们平台相对优惠的销售价格，吸引用户在本平台购买宠物饲养的日常用品；与知名博主们的合作，可以提高我们的社区活跃度，待社区平台成熟也可以为宠物博主反过来带来流量；与宠物店、宠物医院、专业人士的合作可以为我们的社区提供专业科学的宠物相关内容，同时为饲养者提供了解本地线下宠物服务的渠道。</p><h3 id="2-客户细分-gt-价值主张"><a href="#2-客户细分-gt-价值主张" class="headerlink" title="2.客户细分-&gt;价值主张"></a>2.客户细分-&gt;价值主张</h3><p>什么样的客户，平台需要提供什么样的价值，两者是对应的关系。<br>对于<strong>核心用户–宠物的饲养者</strong>，我们为其提供1.内容丰富的<strong>社区</strong>，可以了解到饲养宠物的专业知识，分享宠物的趣味日常 2.宠物的<strong>模拟饲养</strong>，在这个过程中了解不同宠物的习性，饲养要点 3.宠物<strong>产品的优惠购买渠道</strong> 4.<strong>线下宠物服务</strong>的信息获取与预约；<br>对于<strong>内容博主</strong>，我们可以为其提供流量，帮助其进行一些产品合作，实现流量变现；<br>对于<strong>宠物用品品牌</strong>，我们为其提供产品<strong>推广曝光</strong>；<br>对于<strong>线下宠物店、医院，</strong>可与为其提供<strong>线上信息及服务渠道</strong>，吸引同城用户。</p><h3 id="3-核心资源-gt-成本结构"><a href="#3-核心资源-gt-成本结构" class="headerlink" title="3.核心资源-&gt;成本结构"></a>3.核心资源-&gt;成本结构</h3><p>平台的很多核心资源需要成本的支撑。整个平台的开发需要支付软件工程师费用；平台的长期运营需要支付服务器费用，运维人员工资；平台与内容提供者、宠物用品品牌、线下实体店的签约合作需要相关费用；用户社区的建立维护需要从其他平台引流，要向其他流量平台支付推广费用。</p><h3 id="4-客户细分-gt-收入来源"><a href="#4-客户细分-gt-收入来源" class="headerlink" title="4.客户细分-&gt;收入来源"></a>4.客户细分-&gt;收入来源</h3><p>不同客户群体对应不同收入来源。对于宠物饲养者来说，本平台要诱导他们充值vip并且购买宠物或宠物用品，从而创造营收；对于宠物店和宠物用品供应商，收取推广费，抽取交易成交额。</p><h3 id="5-价值主张-gt-成本结构"><a href="#5-价值主张-gt-成本结构" class="headerlink" title="5.价值主张-&gt;成本结构"></a>5.价值主张-&gt;成本结构</h3><p>要形成服务首先要有app的开发和维护成本，前期还要在别的平台投入推广费用，为了提供宠物线上就医和本地的宠物服务，要和专业兽医和各地宠物店签约，形成合作。优质内容创作者要提供创作激励，为平台引流。另外，为了提供更好的服务，办公场地租赁，人员雇用都需要付出一定成本。</p><h3 id="6-客户细分-gt-渠道通路"><a href="#6-客户细分-gt-渠道通路" class="headerlink" title="6.客户细分-&gt;渠道通路"></a>6.客户细分-&gt;渠道通路</h3><p>平台建立初期需要在别的平台推广，可以邀请宠物领域的博主试用软件（最好能让他们长期入驻，在我们的软件中同步更新他们其他平台的内容），写推广帖子或者做推广视频，也可以投放广告，吸引宠物饲养者加入。对于商家和兽医，可以由平台联系，邀请入驻，和他们签订长期合同。最终博主、兽医以及一部分用户提供优质宠物创作和科普知识，进而吸引更多用户使用平台并付费。</p><h3 id="7-客户关系-gt-关键业务"><a href="#7-客户关系-gt-关键业务" class="headerlink" title="7.客户关系-&gt;关键业务"></a>7.客户关系-&gt;关键业务</h3><p>不仅仅要在本app中构建完善的宠物社区服务，还要发展其他平台的运营，用户可以把自己的账户绑定b站、微博、小红书、贴吧等账户，用关联账户带上#PerkyPet#词条发帖可以在app内获得虚拟货币或vip试用或代金券。<br>用户还可以分享自己宠物的动态或虚拟宠物到朋友圈、qq空间，每日首次打卡有奖励，从而刺激平台的推广。</p><h3 id="8-客户细分-gt-重要合作"><a href="#8-客户细分-gt-重要合作" class="headerlink" title="8.客户细分-&gt;重要合作"></a>8.客户细分-&gt;重要合作</h3><p>与第三方的合作要用于优化用户体验。随着用户的增加，要改用更强性能的服务器，优化app的细节，更符合人的操作习惯。平台的兽医必须保证高质量，不能出现乱治病医死宠物的情况，所以必须实名认证，上传相关资质证明。入驻平台的商家必须保证提供高质量货物，差评太多的话，经过平台客服鉴定，平台可以单方面解约，不允许商户继续入驻。</p><h3 id="9-价值主张-gt-关键业务、重要合作"><a href="#9-价值主张-gt-关键业务、重要合作" class="headerlink" title="9.价值主张-&gt;关键业务、重要合作"></a>9.价值主张-&gt;关键业务、重要合作</h3><p>价值主张决定了本平台的关键业务。我们致力于打造一个为用户解决一切与宠物相关问题的一站式服务平台，最终形成一个高度社区化、一体化的一流宠物平台，所以我们的关键业务就是提供一个宠物论坛，让用户了解、购买宠物，并且解决饲养宠物中的一系列问题，给用户提供交流的平台，从多方面增强用户的购买和饲养体验。此外，和同城线下商家、兽医的合作，使用户的问题能够更直接的得到解决。</p><h3 id="10-客户细分-gt-关键业务"><a href="#10-客户细分-gt-关键业务" class="headerlink" title="10.客户细分-&gt;关键业务"></a>10.客户细分-&gt;关键业务</h3><p>不同的客户会使用不同的业务。饲养者在社区和别的玩家交流，在商城购买宠物或宠物用品，咨询兽医相关问题，商家把货物挂在自己的主页售卖，博主要利用资源产出高质量作品，兽医可以收费咨询，为自己的诊所做宣传。</p><h2 id="五-与竞品的关联-amp-区别"><a href="#五-与竞品的关联-amp-区别" class="headerlink" title="五.与竞品的关联&amp;区别"></a>五.与竞品的关联&amp;区别</h2><h4 id="1-宠云行："><a href="#1-宠云行：" class="headerlink" title="1.宠云行："></a>1.宠云行：</h4><p>核心业务：<strong>一是宠云仓 · 智慧化仓配服务：</strong>可提供 B2B 仓配服务、B2C 产品组套和一件代发、大品牌的 CDC&#x2F;RDC 总仓服务，并具备兽药仓配管理资质、大贸和跨境进出口能力、冷链运作能力，还能开展原材料仓储供应、库存监管和仓单质押、行业发展咨询等业务。<strong>二是宠云家 · 数字化营销服务：</strong>打造覆盖宠物行业零售终端的数字化云商城平台，目前正在邀请包含宠物食品、宠物用品、宠物营养保健品以及宠物服装玩具在内的国际 &#x2F; 国内精品品牌入驻。<strong>三是宠云鲜 · 原材料供应服务，</strong>希望成为高品质宠物食品的原材料供应商，并与有实力的原材料企业建立战略合作。<strong>四是宠云享 · 供应链金融和数据服务，</strong>团队基于对上下游客户和资金使用场景的理解，定制开发出合适的金融贸易产品，配合有效的系统管理、操作流程和风控机制，再通过宠云仓实现库存监管，由宠云家实现劣后处置，从而形成金融风险管控闭环。 </p><p>关联:宠云行做的是宠物用品的供应链服務，且比我們更專业更完善<br>区別:他不是一个面向一般用戶的平台，且不是一個资訊、線下服務平台<br>总结:宠云行與我們並非強烈的競爭关係，相反我們可以达成合作，好好利用它的供应鏈與服務</p><h4 id="2-波奇寵物"><a href="#2-波奇寵物" class="headerlink" title="2.波奇寵物:"></a>2.波奇寵物:</h4><p>成立于2008年，经过14年的沉淀，已打破行业壁垒，以全新的养宠理念，实现涵盖生产制造、医药研发、活体繁殖、自有品牌、波奇会员、线下门店、人员培训等全产业链布局，成为国内领先的宠物综合服务平台。<br>波奇商城:为狗狗、猫猫、水族精选了上万款宠物必备用品，涵盖猫粮、狗粮、鱼虾龟粮、宠物零食玩具、宠物日用洗护、宠物保健医疗、宠物用品周边等。<br>波奇社区:1．专业问答:宠物名医在线答疑，贴心守护宠物健康;2.万人测评:品质宠粮万人试用，真实分享放心选择;3.搞笑视频:猫狗视频搞笑专区，精彩纷呈搞笑不断;4．奇趣GIF:海量猫狗GIF图片，能传能存又能斗图;5．有奖活动:精彩不停福利不断，劲爆大奖拿到手软;6．阳光公益:领养救助实时资讯，我们一起让爱回家</p><p>关联:波奇寵物同样有有趣的社区、且是全產业鏈布局的宠物綜合服務平台<br>区別:波奇寵物並無”養寵体驗”这类能幫助用戶作出養寵決定、适应養寵、手把手教學、虛擬寵物展示的工具，且並沒有與很多線下門店和医院达成合成，它的社区雖然功能完善，但並無大的特点，無法吸引人長時間活跃。<br>总结:波奇宠物是一個強力的競爭对手，它的自有品牌、生產制制、医藥研發、線下門店是很大的威脅，他的社区功能也比較完善。然而我們有的特点也是它所不具備的，因此尽量嘗試达成合作。</p>]]></content>
      
      
      <categories>
          
          <category> 煩人作業 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 需求與商業模式創新 </tag>
            
            <tag> PerkyPet </tag>
            
            <tag> 項目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML基本知識一文速通</title>
      <link href="/2020/03/15/HTML%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AD%98%E4%B8%80%E6%96%87%E9%80%9F%E9%80%9A/"/>
      <url>/2020/03/15/HTML%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AD%98%E4%B8%80%E6%96%87%E9%80%9F%E9%80%9A/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-HTML簡介"><a href="#1-HTML簡介" class="headerlink" title="1 HTML簡介"></a>1 HTML簡介</h2><p>HTML家底</p><ol><li>HTML和HTML5</li></ol><p>  <strong>HTML</strong>(Hyper Text Markup Language)，超文本标记语言，产生于1990年，1997年HTML4成为互联网标准，并广泛应用于互联网应用的开发，我們平時看的一個個網頁就是HTML格式。HTML5是HTML最新的修订版本，最新的標準，2014年10月由万维网联盟（W3C）完成标准制定，它的设计目的是为了在移动设备上支持多媒体。</p><ol start="2"><li>瀏覽器</li></ol><p>  瀏览器是网页显示、运行的平台，HTML由瀏覧器解析处理，轉換成可識別的信息，浏覧器的功能依靠其浏覽器內核實現。浏覽器內核从十几年前微软独家垄断到今天已經百花齊放，但目前還是四瀏覽器內核派系分天下。</p><ul><li>IE(Trident): 代表作有IE、猎豹、360、百度</li><li>firefox(Gecko): 以前挺強，現在快被chrome做掉，速度有點慢 </li><li>Safari(webkit):  苹果家的，不能說不好，只能說”特立獨行”，做個效果要特別考慮能不能适配它</li><li>chrome(chromium&#x2F;Blink):  在Chromium项目中研发了Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink其实是 WebKit 的分支。大部分国产浏览器最新版都采用 Blink内核，二次开发，反正他最屌了，開發者都建議用它調試。</li></ul><ol start="3"><li>Web標準(御三家辣!)</li></ol><ul><li><strong>结构标准:</strong> 用于对网页元素进行整理和分类(HTML)</li><li><strong>表现标准:</strong> 用于设置网页元素的版式、颜色、大小等外观属性(CSS)</li><li><strong>行为标准:</strong> 用于对网页模型的定义及交互的编写(JavaScript)</li></ul><p><strong>结构+表现+行为</strong>，就成了平時的網頁啦<br><strong>優點:</strong> 易于維護、頁面響應速度快、結構和表現分離的HTML更易被訪問識別、不同樣式表解決設備兼容性，語義化HTML更易被搜索引撆解析<br><img src="https://s2.loli.net/2022/11/25/KTYsJAaSeg3U5cE.png#crop=0&crop=0&crop=1&crop=1&id=cuOK9&originHeight=743&originWidth=1109&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="><br>HTML規范</p><ol><li><p>文檔類型: &lt;!DOCTYPE&gt;必須位於HTML文檔第一行，告訴瀏覽器要按甚麼標準解析頁面，HTML5就是<!DOCTYPE html>。</p></li><li><p>頁面語言: lang，指定該html所用語言，可以做識別的作用，方便不用的應用場景。</p></li><li><p>字符集: charset(Character set)，對字符的編碼方式，最常用的是UTF-8。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文档标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    文档内容......</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>meta有 <strong>name</strong> 和 <strong>http-equiv</strong> 兩個属性，都是定義一些信息和設定的。</p></li></ol><p><strong>name取值:</strong></p><ul><li>keywork: 當然就是keywork</li><li>description: 同上</li><li>viewport:移動端窗口</li><li>robots: 索引方式</li><li>autor: 作者</li><li>generator:  網頁制作軟件</li><li>copyright: 版权</li></ul><p><strong>http-equiv取值:</strong></p><ul><li>content-Type: HTML4的</li><li>Expires: 設定到期時間，過期要重傳重加載</li><li>Pragma: 設定禁止瀏覽器從緩存讀內容</li><li>Refresh: 刷新</li><li>cache-control: 緩存机制<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>全球樂子<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;每時每刻每地的樂子!&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;HTML,CSS,XML,JavaScript&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;kinghong&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一堆樂子<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="5"><li>其他head標簽:</li></ol><ul><li>title: 定義標題</li><li>link: 和外部資源的關係</li><li>script: 腳本文件</li><li>style: 樣式文件</li><li>base: 規定頁面上所有鏈接默認的URL和打開狀態<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;http://www.pornhub.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>走，看點好康的<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2-HTML常用標簽"><a href="#2-HTML常用標簽" class="headerlink" title="2 HTML常用標簽"></a>2 HTML常用標簽</h2><p>HTML5一共一百多個標簽，還各自有不同的属性，但其實最常用的也是那几個</p><h3 id="1-網頁結構"><a href="#1-網頁結構" class="headerlink" title="1 網頁結構:"></a>1 網頁結構:</h3><p>排版和表現標簽</p><ol><li><strong>排版標簽:</strong> 顯示網頁結構的最常用標簽</li></ol><ul><li><strong>h1~h6:</strong> 標题標簽</li><li><strong>p:</strong> 段落標簽，把HTML分割為若干段落，<p>元素会自动在其前后创建一些空白</li><li><strong>hr:</strong> 定義水平線(分割線)</li><li><strong>br:</strong> 換行，床前明月光<br>疑是…</li><li><strong>div和span:</strong> 沒有語義，定義文檔中的分隔區域，做一個盒子用</li><li><strong>&lt; !– … –&gt;:</strong> 注釋，快捷鍵是ctrl+&#x2F;或ctrl+shift+&#x2F;</li><li><strong>pre:</strong> 預格式化文本標簽，按照預先寫好的文字格式顯示</li></ul><ol start="2"><li><strong>表現標簽:</strong> b和strong(粗體)、i和em(斜體)、s和del(刪除線)、u和ins(下劃線)</li></ol><h3 id="2-圖像標簽"><a href="#2-圖像標簽" class="headerlink" title="2 圖像標簽:"></a>2 圖像標簽:</h3><ul><li><p><strong>img:</strong></p><table><thead><tr><th><strong>属性</strong></th><th><strong>值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>src</td><td>URL</td><td>路徑</td></tr><tr><td>alt</td><td>text</td><td>图像替代文本</td></tr><tr><td>title</td><td>text</td><td>鼠標悬停顯示內容</td></tr><tr><td>width，height</td><td>像素，百分比</td><td>高寬度</td></tr><tr><td>border</td><td>數字</td><td>邊框寛度</td></tr><tr><td>loading</td><td>eager&amp;#124;lazy</td><td>立即加載还是建迟加載</td></tr></tbody></table></li><li><p><strong>map:</strong> 帶有可點击區域的圖像映射</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;planets.gif&quot;</span> <span class="attr">width</span>=<span class="string">&quot;145&quot;</span> <span class="attr">height</span>=<span class="string">&quot;126&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Planets&quot;</span> <span class="attr">usemap</span>=<span class="string">&quot;#planetmap&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">&quot;planetmap&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- coords：定义形状路径：当shape=rect时，四个数字依次为：起点X、起点Y、终点X、终点Y(左下-&gt;右上)。coords=&quot;x1,y1,x2,y2&quot;--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;0,0,82,126&quot;</span> <span class="attr">href</span>=<span class="string">&quot;sun.htm&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Sun&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- shape=circle，三個數字為中心點x、中心點y、半徑--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;circle&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;90,58,3&quot;</span> <span class="attr">href</span>=<span class="string">&quot;mercur.htm&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Mercury&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;circle&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;124,58,8&quot;</span> <span class="attr">href</span>=<span class="string">&quot;venus.htm&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Venus&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>canvas:</strong> 畫布，通過腳本繪制圖形</p></li></ul><h3 id="3-鏈接標簽"><a href="#3-鏈接標簽" class="headerlink" title="3 鏈接標簽:"></a>3 鏈接標簽:</h3><ul><li><p>a: 定義超鏈接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;跳转目标&quot;</span> <span class="attr">target</span>=<span class="string">&quot;目标窗口的弹出方式&quot;</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- href: url--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- target: 指定打開方式，_self為默認，_blank為在新窗口中打開--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>link: 鏈接到外部样式文件</p><table><thead><tr><th><strong>属性</strong></th><th><strong>值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>href</td><td>URL</td><td>位置</td></tr><tr><td>media</td><td>media_query</td><td>將顯示的設備</td></tr><tr><td>rel</td><td>altemate&amp;#124; archives&amp;#124; author&amp;#124; bookmark&amp;#124; external&amp;#124; first&amp;#124; help&amp;#124; icon&amp;#124; last&amp;#124; license&amp;#124; next&amp;#124; nofollow&amp;#124; noreferrer&amp;#124; pingback&amp;#124; prefetch&amp;#124; prev&amp;#124; search&amp;#124; sidebar&amp;#124; stylesheet&amp;#124; tag&amp;#124; up</td><td>必需，與被鏈接文檔的關係</td></tr><tr><td>type</td><td>MIME_type</td><td>被鏈接文檔的MIME类型，css对应”text&#x2F;css”</td></tr></tbody></table></li><li><p><strong>nav:</strong> 导航標簽</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/wife/&quot;</span>&gt;</span>wife<span class="tag">&lt;/<span class="name">a</span>&gt;</span> |</span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/injection/&quot;</span>&gt;</span>injection<span class="tag">&lt;/<span class="name">a</span>&gt;</span> |</span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/snapped/&quot;</span>&gt;</span>snapped<span class="tag">&lt;/<span class="name">a</span>&gt;</span> |</span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/bigcock/&quot;</span>&gt;</span>big cock<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>src和href的區別是src(source)用於替換當前元素，如js腳本，img圖片，當瀏覽器解析到元素會暫停其他資源下載和處理，直到元素加載完畢。href用於當前文檔和引用資源建立聯系，識別到資源會並行下載資源，不會停止處理。<br>href還能用來創建錨點鏈接，快速定位內容，使用相應的id名稱跳轉目標位置:<code>&lt;a href=&quot;#id&quot;&gt;鏈接位置&lt;/a&gt;</code>。</p></li></ul><h3 id="4-特殊字符、表情等"><a href="#4-特殊字符、表情等" class="headerlink" title="4 特殊字符、表情等"></a>4 特殊字符、表情等</h3><ul><li><strong>特殊字符:</strong> 符號參考手册–<a href="https://www.runoob.com/tags/html-symbols.html">https://www.runoob.com/tags/html-symbols.html</a></li><li><strong>表情:</strong> Emoji參考手册–<a href="https://www.runoob.com/charsets/ref-emoji.html">https://www.runoob.com/charsets/ref-emoji.html</a></li><li><strong>國家和地区代碼:</strong> <a href="https://www.runoob.com/tags/ref-country-codes.html">https://www.runoob.com/tags/ref-country-codes.html</a></li></ul><h2 id="3-表單"><a href="#3-表單" class="headerlink" title="3 表單"></a>3 表單</h2><p>  表單的目的是為了收集用戶信息，由控件、提示信息和表單域三部分構成。</p><h3 id="1-表單控件"><a href="#1-表單控件" class="headerlink" title="1 表單控件"></a>1 表單控件</h3><ul><li><p><strong>input:</strong> 單標簽，輸入的意思</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">用户名:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line">密 码：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th><strong>属性</strong></th><th><strong>值</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>value</td><td>text</td><td>設定默認值</td></tr><tr><td>name</td><td>text</td><td>名稱</td></tr><tr><td>checked</td><td>checked</td><td>是否选中，只針对checkbos或radio</td></tr><tr><td>type</td><td>button&amp;#124;checkbox&amp;#124;color&amp;#124;date&amp;#124;datetime&amp;#124;datetime-local&amp;#124;email&amp;#124;file&amp;#124;hidden&amp;#124;image&amp;#124;month&amp;#124;number&amp;#124;password&amp;#124;radio&amp;#124;range&amp;#124;reset&amp;#124;search&amp;#124;submit&amp;#124;tel&amp;#124;text&amp;#124;time&amp;#124;url&amp;#124;week</td><td>input的类型</td></tr><tr><td>form</td><td>from_id</td><td>input所属的一個或多個表單</td></tr><tr><td>disabled</td><td>disabled</td><td>禁用?</td></tr><tr><td>placeholder</td><td>text</td><td>輸入提示</td></tr></tbody></table></li><li><p><strong>textarea:</strong> 文本框</p><p>属性值和輸入框基本一样，常用的多了几個:</p></li></ul><table><thead><tr><th>cols</th><th>number</th><th>可見寬</th></tr></thead><tbody><tr><td>rows</td><td>number</td><td>可見行</td></tr><tr><td>required</td><td>required</td><td>是否必填</td></tr><tr><td>wrap</td><td>hard&amp;#124;soft</td><td>怎样換行</td></tr><tr><td>maxlength</td><td>number</td><td>最大字符數</td></tr></tbody></table><ul><li><p><strong>button:</strong> 按鈕</p></li><li><p><strong>select:</strong> 下拉列表</p><p>多了个size属性可以規定選項可見數目，multiple可以选多個選項</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;girl1&quot;</span>&gt;</span>Volvo<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;girl2&quot;</span>&gt;</span>Saab<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;girl3&quot;</span>&gt;</span>Mercedes<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;girl4&quot;</span>&gt;</span>Audi<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>optgroup:</strong> 可以把相關选項組合在一起</li></ul><h3 id="2-提示信息"><a href="#2-提示信息" class="headerlink" title="2 提示信息"></a>2 提示信息</h3><ul><li><p><strong>label:</strong> 標簽</p><p>比基本的多兩個属性，for(規定與哪個表單元素綁定)，form(規定所属的一個或多個表單)，label&gt; 标签为 input 元素定义标記，如果您在 label 元素内点击文本，就会触发此控件。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>datalist:</strong> 提示<input>元素可能的选项列表，提供自動完成的特性，用戶能看到一個下拉列表，有預先定義好的數據。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">list</span>=<span class="string">&quot;browsers&quot;</span> <span class="attr">name</span>=<span class="string">&quot;browser&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;browsers&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Internet Explorer&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Firefox&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Chrome&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Opera&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Safari&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-表單域"><a href="#3-表單域" class="headerlink" title="3 表單域"></a>3 表單域</h3><ul><li><strong>form:</strong> 定义一个 HTML 表单，用于用户输入，form 中的所有内容都会被提交给服务器。<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单名称&quot;</span>&gt;</span>各种表单控件<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th><strong>属性</strong></th><th><strong>属性值</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>action</td><td>URL</td><td>服務器程序url</td></tr><tr><td>method</td><td>get&#x2F;post</td><td>提交方式</td></tr><tr><td>name</td><td>string</td><td>名稱</td></tr></tbody></table></li></ul><p><strong>GET和POST区別</strong>:</p><ul><li>瀏覽器回退時GET無軎，POST會再提交</li><li>GET會被瀏覽器主動cache</li><li>GET只能url編碼，只接受ASCII字符，GET更不安全，參數暴露在URL上</li><li>GET的參數會被完整保留在歷史記錄里</li></ul><h2 id="4-表格"><a href="#4-表格" class="headerlink" title="4 表格"></a>4 表格</h2><p>  用來展示表格式數據，顯示規整可讀性好</p><h3 id="1-表格創建"><a href="#1-表格創建" class="headerlink" title="1 表格創建"></a>1 表格創建</h3><p><code>**table、tr、td**</code>是創建表格的基本標簽，缺一不可，table定義表格標簽，tr定義行，td定義單元格，它們必須互相嵌套。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Month<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Spand<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>November<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$6000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>December<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$3000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>th:</strong> 表單頭單元格，會加粗居中</li><li><strong>caption:</strong> 表格標题，必須在table后面，但是會在表格之上居中顯示</li><li><strong>單元格的rowspan和colspan属性:</strong> 合井單元格的個數，順序最好按上下左右合並</li></ul><h3 id="2-表格劃分结構"><a href="#2-表格劃分结構" class="headerlink" title="2 表格劃分结構"></a>2 表格劃分结構</h3><p>  對於比較复雜的表格，可以分割成题頭、正文和腳注三部分，分別是thead，tbody和tfoot。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>Month<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>Savings<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Sum<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>$180<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>January<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>$100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>February<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>$80<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>通过使用这些元素，使浏览器有能力支持独立于表格表头和表格页脚的表格主体滚动。当包含多个页面的长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。</li><li><thead> 元素内部必须包含一个或者多个 <tr> 标签。</li></ul><h2 id="5-列表"><a href="#5-列表" class="headerlink" title="5 列表"></a>5 列表</h2><p>  容器里面装载着结构，样式一致的文字或图表的一种形式，叫列表，特点就是整齐 、整洁、 有序，可組合自由度比表格高。</p><ol><li><strong>無序列表 ul</strong></li></ol><ul><li>ul中只能嵌套列表項li<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>hotel<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>home<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>playground<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li><strong>有序列表 ol</strong></li></ol><ul><li>ol標簽中的type属性為排序的序列號，默認從1開始排，常見的值有1,a,A,i,I。</li><li><ol reversed="reversed">能讓列表倒序排列</li><li><ol start="5">中的值能讓序列號從5開始排</li></ul><ol start="3"><li><strong>自定義列表 dl</strong></li></ol><ul><li>dl嵌套dd，表項前無任何符號</li></ul>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> web前端 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
