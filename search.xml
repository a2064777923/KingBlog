<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基於置信學習的警告數據集去噪技術</title>
      <link href="/2022/11/24/%E5%9F%BA%E6%96%BC%E7%BD%AE%E4%BF%A1%E5%AD%B8%E7%BF%92%E7%9A%84%E8%AD%A6%E5%91%8A%E6%95%B8%E6%93%9A%E9%9B%86%E5%8E%BB%E5%99%AA%E6%8A%80%E8%A1%93/"/>
      <url>/2022/11/24/%E5%9F%BA%E6%96%BC%E7%BD%AE%E4%BF%A1%E5%AD%B8%E7%BF%92%E7%9A%84%E8%AD%A6%E5%91%8A%E6%95%B8%E6%93%9A%E9%9B%86%E5%8E%BB%E5%99%AA%E6%8A%80%E8%A1%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>  现有的自动化警告标记技术主要基于关闭警告的启发式方法进行警告标记，给定同一个项目的多个版本，使用相同的静态分析工具对每个版本进行扫描并得到其扫描结果，通过比对不同版本之间的警告是否相同，如果一个版本中的某个警告 A 存在在后续所有的版本，那么该警告 A 被认为是无效警告（即误报警告），如果一个版本中的某个警告 A 在后续的版本中消失，那么该警告 A 被认为是有效警告（即正报警告）。然后，由于验证延迟（即有些警告会在未来的版本中被修复）或自动化警告标记方法固有的局限性（如：不精确的警告匹配算法），会使得自动化警告标记方法产生较多的噪音（即正报标记为误报，误报被标记为正报）。为了解决上述问题，本项目拟基于置信学习技术对自动化警告标记技术进行去噪，进而改善自动化警告标记技术标记的精度。</p><h2 id="2-初始警告數據集收集—環境配置"><a href="#2-初始警告數據集收集—環境配置" class="headerlink" title="2 初始警告數據集收集—環境配置"></a>2 初始警告數據集收集—環境配置</h2><p>基于关闭警告的启发式警告标记方法:<a href="https://github.com/lxyeah/findbugs-violations.git">https://github.com/lxyeah/findbugs-violations.git</a>，链接中给出了<br>该方法自动收集警告数据集的源码以及相关软件配置要求，静态分析工具是 SpotBugs。<br><strong>項目運行環境:</strong></p><ul><li>Linux (Ubuntu 18.04)</li><li>Jdk 1.8</li><li>Maven 3.6.3: 需要更换阿⾥云镜像</li><li>Neo4J Community 3.5.X: 注意Jdk和Neo4J版本要相互对应，如：最新版本的Neo4J需要Jdk11，Neo4J 3.5.X需要Jdk 1.8</li></ul><p>一個個來吧!</p><h3 id="2-1-Ubuntu-18-04"><a href="#2-1-Ubuntu-18-04" class="headerlink" title="2.1 Ubuntu 18.04"></a>2.1 Ubuntu 18.04</h3><ol><li>去<a href="https://releases.ubuntu.com/18.04/">https://releases.ubuntu.com/18.04/</a>下載鏡像。</li><li>VMware創建虛擬机。</li></ol><p><img src="https://s2.loli.net/2022/11/24/fCXUzjWkgx5qPyH.png#crop=0&crop=0&crop=1&crop=1&height=504&id=IURTL&originHeight=650&originWidth=790&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=&width=612"><br><img src="https://s2.loli.net/2022/11/24/JId65S4Zb1VRKBk.png#crop=0&crop=0&crop=1&crop=1&height=544&id=EujUn&originHeight=717&originWidth=802&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=&width=609"></p><h3 id="2-2-安裝Jdk-1-8"><a href="#2-2-安裝Jdk-1-8" class="headerlink" title="2.2 安裝Jdk 1.8"></a>2.2 安裝Jdk 1.8</h3><ol><li><p>去<a href="https://www.oracle.com/java/technologies/downloads/#java8">https://www.oracle.com/java/technologies/downloads/#java8</a>下載安裝包，我下的是x64-Compressed Archive那個。</p></li><li><p>下載完压縮包移動到&#x2F;usr&#x2F;share&#x2F;java下，並解压。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~$ <span class="built_in">cd</span> /usr/share</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/share$ sudo <span class="built_in">mkdir</span> java //沒有的話就創建</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/share$ <span class="built_in">cd</span> java</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/share/java$ sudo <span class="built_in">cp</span> -a /home/kinghong/下载/jdk-8u351-linux-x64.tar.gz/usr/share/java</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/share/java$ sudo tar -zxvf jdk-8u351-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>輸入<code>sudo gedit ~/.bashrc</code>配置环境变量，在打開的文件最後添加:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/share/java/jdk1.8.0_351</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>保存文件后輸入<code>source /.bashrc</code>更新配置文件</p></li><li><p>輸入<code>java -version</code>查看jdk环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~$ java -version</span><br><span class="line">java version <span class="string">&quot;1.8.0_351&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_351-b10)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)</span><br></pre></td></tr></table></figure></li><li><p>管理员模式也得能找到，把环境变量加在&#x2F;etc&#x2F;profile里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:/etc$ sudo <span class="built_in">chmod</span> -R 777 ./profile</span><br><span class="line"><span class="comment">####################################################################</span></span><br><span class="line"><span class="comment">#在文件末尾添加:</span></span><br><span class="line"><span class="comment">#JAVA_HOME=/usr/share/java/jdk1.8.0_351</span></span><br><span class="line"><span class="comment">#PATH=$PATH:$JAVA_HOME/bin</span></span><br><span class="line"><span class="comment">#CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span></span><br><span class="line"><span class="comment">#export JAVA_HOME</span></span><br><span class="line"><span class="comment">#export PATH</span></span><br><span class="line"><span class="comment">#export CLASSPATH</span></span><br><span class="line"><span class="comment">#####################################################################</span></span><br><span class="line">kinghong@kinghong-virtual-machine:/etc$ <span class="built_in">source</span> ./profile</span><br><span class="line">kinghong@kinghong-virtual-machine:/etc$ sudo -i</span><br><span class="line">root@kinghong-virtual-machine:~<span class="comment"># java -version</span></span><br><span class="line">java version <span class="string">&quot;1.8.0_351&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_351-b10)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-3-安裝Maven3-6-3"><a href="#2-3-安裝Maven3-6-3" class="headerlink" title="2.3 安裝Maven3.6.3"></a>2.3 安裝Maven3.6.3</h3><ol><li>去官网下載Maven: <a href="https://archive.apache.org/dist/maven/maven-3/">https://archive.apache.org/dist/maven/maven-3</a></li></ol><p><img src="https://s2.loli.net/2022/11/24/KqHcWyUVInEtorP.png#crop=0&crop=0&crop=1&crop=1&height=256&id=beWtN&originHeight=312&originWidth=759&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=&width=623"></p><ol start="2"><li><p>跟上面一样，找個風水宝地把安裝包放進去，我是放在&#x2F;usr&#x2F;local下了，然後解壓安裝。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:/usr/local$ sudo tar -zxf apache-maven-3.6.3-bin.tar.gz</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/local$ sudo <span class="built_in">mv</span> apache-maven-3.6.3 /usr/local/maven-3.6.3</span><br></pre></td></tr></table></figure></li><li><p>環境变量 <code>sudo ~/.bashrc</code> ，填入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> M2_HOME=/usr/local/maven-3.6.3</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;M2_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>保存，<code>source /.bashrc</code>更新。</p></li><li><p>輸 mvn-v 查看版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:/usr/local$ mvn -v</span><br><span class="line">Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)</span><br><span class="line">Maven home: /usr/local/maven-3.6.3</span><br><span class="line">Java version: 1.8.0_351, vendor: Oracle Corporation, runtime: /usr/share/java/jdk1.8.0_351/jre</span><br><span class="line">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">&quot;linux&quot;</span>, version: <span class="string">&quot;5.4.0-84-generic&quot;</span>, <span class="built_in">arch</span>: <span class="string">&quot;amd64&quot;</span>, family: <span class="string">&quot;unix&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>換阿里云鏡像。去安裝目錄下，我是&#x2F;usr&#x2F;local&#x2F;maven-3.6.3，進入conf文件夾，先改一下settings.xml的讀寫权限: <code>sudo chmod 777 ./settings.xml</code> ，然后再打開它，找到<mirrors>標籤，往裏面添加:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;<span class="built_in">id</span>&gt;aliyunmaven&lt;/id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;阿里云公共仓库&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;</span><br><span class="line">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure><p>並保存。</p></li></ol><h3 id="2-4-安裝Neo4j"><a href="#2-4-安裝Neo4j" class="headerlink" title="2.4 安裝Neo4j"></a>2.4 安裝Neo4j</h3><p>Neo4j是基于Java的图形数据库</p><ol><li><p>官网下載安裝包: <a href="https://neo4j.com/download-center/#releases">https://neo4j.com/download-center/#releases</a></p></li><li><p>找个好地方解压，我還是放&#x2F;usr&#x2F;local下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~$ sudo <span class="built_in">cp</span> -a /home/kinghong/桌面/neo4j-community-3.5.5-unix.tar.gz /usr/local</span><br><span class="line">kinghong@kinghong-virtual-machine:~$ <span class="built_in">cd</span> /usr/local</span><br><span class="line">kinghong@kinghong-virtual-machine:/usr/local$ sudo tar -zxvf neo4j-community-3.5.5-unix.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>运行，這一步有點坑，先進入root模式，再進入文件根目錄，在bin里运行它</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~$ sudo -i</span><br><span class="line">root@kinghong-virtual-machine:~<span class="comment"># cd /usr/local/neo4j-community-3.5.5/bin</span></span><br><span class="line">root@kinghong-virtual-machine:/usr/local/neo4j-community-3.5.5/bin<span class="comment"># ./neo4j console</span></span><br></pre></td></tr></table></figure><p>运行成功后在浏覽器打開<a href="http://localhost:7474/browser/">http://localhost:7474/browser/</a> ，進入web端，默認用戶名和密碼都是”neo4j”。<br><img src="https://s2.loli.net/2022/11/24/yqKamLiJxO1gfnR.png#crop=0&crop=0&crop=1&crop=1&height=441&id=EwEZN&originHeight=690&originWidth=965&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title=&width=617"><br>至此，環境就配置好了</p></li></ol><h2 id="3-項目配置"><a href="#3-項目配置" class="headerlink" title="3 項目配置"></a>3 項目配置</h2><p>   项⽬结构如下所示，其中violation-collection为本项⽬进⾏配置的警告数据收集部分。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~/文档/findbugs-violations-master$ tree -L 1</span><br><span class="line">.</span><br><span class="line">├── data</span><br><span class="line">├── GitTraverse</span><br><span class="line">├── gumtree</span><br><span class="line">├── Mined Fix Patterns</span><br><span class="line">├── Parser</span><br><span class="line">├── parsing-utils</span><br><span class="line">├── PatternMining</span><br><span class="line">├── README.md</span><br><span class="line">├── Readme.pdf</span><br><span class="line">├── repo-iterator</span><br><span class="line">├── simple-utils</span><br><span class="line">└── violation-collection</span><br></pre></td></tr></table></figure><p>  由于violation-collection依赖于simple-utils、repo-iterator、parsing-utils，需要先对这三部分进⾏构建， 最后对violation-collection进⾏构建。  </p><ol><li>进⼊這三個⽬录，执⾏”mvn clean install -DskipTests”。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">~/文档/findbugs-violations-master$ <span class="built_in">cd</span> ./simple-utils</span><br><span class="line">~/文档/findbugs-violations-master/simple-utils$ mvn clean install -DskipTests</span><br><span class="line">............................................................................</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  50.483 s</span><br><span class="line">[INFO] Finished at: 2022-11-24T14:09:02+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">~/文档/findbugs-violations-master$ <span class="built_in">cd</span> ./repo-iterator</span><br><span class="line">~/文档/findbugs-violations-master/repo-iterator$ mvn clean install -DiskipTests</span><br><span class="line">~/文档/findbugs-violations-master$ <span class="built_in">cd</span> ./parsing-utils</span><br><span class="line">~/文档/findbugs-violations-master/parsing-utils$ mvn clean install -DiskipTests</span><br></pre></td></tr></table></figure>  构建过程中出現了無法解析依赖的情況，哈哈!樂，環境學院日常，去网上下jar包吧:<a href="https://mvnrepository.com/artifact/org.eclipse.core/runtime/3.10.0-v20140318-2214">https://mvnrepository.com/artifact/org.eclipse.core/runtime/3.10.0-v20140318-2214</a><br><a href="https://mvnrepository.com/artifact/org.eclipse.core/org.eclipse.core.runtime/3.10.0.v20140318-2214">https://mvnrepository.com/artifact/org.eclipse.core/org.eclipse.core.runtime/3.10.0.v20140318-2214</a><br><img src="https://s2.loli.net/2022/11/24/QYiOVX5GJ8vw3nB.png#crop=0&crop=0&crop=1&crop=1&id=bnSUv&originHeight=192&originWidth=729&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="><br>下完后执⾏命令”mvn install:install-file -Dfile&#x3D;xxxxx.jar -DgroupId&#x3D;xxxxx -DartifactId&#x3D;xxxxx - Dversion&#x3D;xxxxx -Dpackaging&#x3D;jar”安裝，其中:</li></ol><ul><li>Dfile: 要安装的jar的本地路径</li><li>DgroupId：要安装的jar的groupId (org.eclipse.core)</li><li>DartifactId: 要安装的jar的 artificialId (org.eclipse.core.runtime)</li><li>Dversion: jar版本 (3.10.0-v20140318-2214)</li><li>Dpackaging: 打包类型 (jar)  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">kinghong@kinghong-virtual-machine:~$ mvn install:install-file -Dfile=/home/kinghong/下载/</span><br><span class="line">org.eclipse.core.runtime-3.10.0.v20140318-2214.jar -DgroupId=org.eclipse.core -DartifactId=org.eclipse.core.runtime </span><br><span class="line">-Dversion=3.10.0-v20140318-2214 -Dpackaging=jar</span><br><span class="line">........................................................................</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total time:  0.187 s</span><br><span class="line">[INFO] Finished at: 2022-11-24T14:53:50+08:00</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure>重點來了!!!!  賊坑賊坑的一點是，此刻他仍是說無法解析的，我找了半天才發現原來安裝的時候把文件中間寫成了3.10.0-v20140318-2214，而他的依赖找的是3.10.0.v20140318-2214，所以它找不但找不到，还會自己多創一個文件夾，你得把文件夾和里面文件名上的”-“改成”.”才行。<br>好了，接着install又發現沒有org.eclipse.core:org.eclipse.core.contenttype 3.4.200.v20140207-1251 的依赖了，如法炮制去<a href="https://mvnrepository.com/artifact/org.eclipse.core/org.eclipse.core.contenttype/3.4.200.v20140207-1251">https://mvnrepository.com/artifact/org.eclipse.core/org.eclipse.core.contenttype/3.4.200.v20140207-1251</a>下一個安裝。<br>最后终于成功了!<br>三個都成功后便进⼊violation-collection⽬录执⾏”mvn clean install -DskipTests”。</li></ul><ol start="3"><li>启动neo4j数据库</li><li>创建repoDir和workingDir两个个⽂件夹，其中repoDir存放apache项⽬，workingDir存放⽣成的报告等数 据，⽂件结构如下图所示。</li></ol><p>……………………….<br>人麻了已經，下面每一步都報一堆錯，也是很迷糊一個，等做成功了再來更新好了…搞了一天累死了</p>]]></content>
      
      
      <categories>
          
          <category> -煩人作業 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -自動化測試 -錯誤警告 -屎山 -巨坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题魔改</title>
      <link href="/2022/11/22/hexo%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/"/>
      <url>/2022/11/22/hexo%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> -博客相關 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web前端 -hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主題一些使用方法</title>
      <link href="/2022/11/22/butterfly%E4%B8%BB%E9%A1%8C%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2022/11/22/butterfly%E4%B8%BB%E9%A1%8C%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> -博客相關 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web前端 -hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Hexo和Vercel搭建博客</title>
      <link href="/2022/11/22/%E7%94%A8Hexo%E5%92%8CVercel%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/11/22/%E7%94%A8Hexo%E5%92%8CVercel%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>方法參考Fomalhaut文章:<a href="https://www.fomal.cc/posts/e593433d.html">Hexo博客搭建教程(一)</a>、<a href="https://www.fomal.cc/posts/4aa2d85f.html">Hexo博客搭建教程(二)</a><br>使用的主题是butterfly<a href="https://butterfly.js.org/">官方文档</a></p></blockquote><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><p>  我們平時搭博客通常要麼買個服務器用wordpress搞一個，或者布署到github page上，前者需要億點點的錢(去華為雲看了下一個普通服務器一年要几百大洋，果斷放弃)，後者只能放靜態頁面，可玩性和便捷程序就差了點。而vercel將會拯救我們，這是一個站點托官的平台，提供Production和Development环境，还支持持續集成，功能和速度比github page好，还支持部署serverless接口，可以部署動態網站，會自動幫你配置https，最重要的是,他還不收錢!簡直想立馬跪拜了好嗎!</p><h2 id="2-環境與工具準備"><a href="#2-環境與工具準備" class="headerlink" title="2.環境與工具準備"></a>2.環境與工具準備</h2><ul><li>操作系统:Windows11</li><li>Node</li><li>Git</li><li>Hexo</li><li>GitHub帳號</li><li>域名(可選)</li></ul><h2 id="3-開始"><a href="#3-開始" class="headerlink" title="3.開始!"></a>3.開始!</h2><h3 id="3-1-安裝Node-js"><a href="#3-1-安裝Node-js" class="headerlink" title="3.1 安裝Node.js"></a>3.1 安裝Node.js</h3><p>Node.js是一个基于Chrome V8引擎的JavaScript运行環境，可謂是把原本只能由浏覧器解析的js给抬起來了。下載地址:<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a>，最好下個穩定版，也不用因為怕以後要裝的東西版本不兼容而跑去裝上古版本，到時真不行就用nvm管理一下嘛。安完可以命令行打 node -v 看版本信息</p><h3 id="3-2-安裝Hexo"><a href="#3-2-安裝Hexo" class="headerlink" title="3.2 安裝Hexo"></a>3.2 安裝Hexo</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>打hexo -v可以看安裝成功否</p><h3 id="3-3-Github-Page"><a href="#3-3-Github-Page" class="headerlink" title="3.3 Github Page"></a>3.3 Github Page</h3><ol><li>官網:<a href="https://github.com/">https://github.com</a>，自個去注册就行了</li><li>注册完了後，創建新倉庫(New repository)，创建一个叫<code>&lt;用戶名&gt;.github.io</code>的倉庫，注意一定要是”用戶名”+”github.io”，因為每個帳號只允許有一個github page。下面的隨意設置，然後點击創建。</li></ol><h3 id="3-4-安裝Git"><a href="#3-4-安裝Git" class="headerlink" title="3.4 安裝Git"></a>3.4 安裝Git</h3><ol><li><p>去官網<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a>下個最新的就好了，安裝就狂點下一步就好了，如果有想知道每個選項具體是在干嘛的探索精神，可以參考<a href="https://blog.csdn.net/mukes/article/details/115693833">Git 详细安装教程（详解 Git 安装过程的每一个步骤)</a>。</p></li><li><p>配置用戶名和郵箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;你的用戶名&quot;</span></span><br><span class="line">$ git config --global user.email <span class="string">&quot;你的郵箱&quot;</span></span><br></pre></td></tr></table></figure><p>想寫哪個都行，只是用來標識你的身份而已</p></li><li><p>在git bash上輸入git config -l可以檢查是否配置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ git config -l</span><br><span class="line">diff.astextplain.textconv=astextplain</span><br><span class="line">filter.lfs.clean=git-lfs clean -- %f</span><br><span class="line">filter.lfs.smudge=git-lfs smudge -- %f</span><br><span class="line">filter.lfs.process=git-lfs filter-process</span><br><span class="line">filter.lfs.required=<span class="literal">true</span></span><br><span class="line">http.sslbackend=openssl</span><br><span class="line">http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt</span><br><span class="line">core.autocrlf=<span class="literal">true</span></span><br><span class="line">core.fscache=<span class="literal">true</span></span><br><span class="line">core.symlinks=<span class="literal">true</span></span><br><span class="line">pull.rebase=<span class="literal">false</span></span><br><span class="line">credential.helper=manager-core</span><br><span class="line">credential.https://dev.azure.com.usehttppath=<span class="literal">true</span></span><br><span class="line">init.defaultbranch=master</span><br><span class="line">user.email=a2064777923@gmail.com</span><br><span class="line">user.name=KingHong</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-5-連接去Github"><a href="#3-5-連接去Github" class="headerlink" title="3.5 連接去Github"></a>3.5 連接去Github</h3><ol><li>執行以下命令生成ssh公匙，用於計算機連接Github<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;你的郵箱&quot;</span></span><br></pre></td></tr></table></figure></li><li>打開C:&#x2F;&#x2F;user&#x2F;#用戶名#&#x2F;.ssh，会發現多了几個文件，打開id_rsa.pub文件，复制里面的內容。</li><li>進入github配置頁，選擇<code>SSH and GPG keys</code>，填進去，确定。</li><li>測試連接，輸入:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><blockquote><p>如果連不上，出現<code>Could not resolve hostname github</code>的話，在cmd打ping <a href="http://www.github.com/">www.github.com</a> 也不行的話，可以嘗試修改本地 DNS 文件，打開C:\Windows\System32\drivers\etc 目录下的 hosts 文件，在最後添加<code>140.82.113.4    github.com</code>，然后保存，应該就能ping通了。</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> -博客相關 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web前端 -hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/22/hello-world/"/>
      <url>/2022/11/22/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
